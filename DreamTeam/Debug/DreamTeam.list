
DreamTeam.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007038  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000098  080071c8  080071c8  000081c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007260  08007260  00009064  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08007260  08007260  00008260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007268  08007268  00009064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007268  08007268  00008268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800726c  0800726c  0000826c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  08007270  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00009064  2**0
                  CONTENTS
 10 .bss          000003ac  20000064  20000064  00009064  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000410  20000410  00009064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00009064  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000e943  00000000  00000000  00009094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001f72  00000000  00000000  000179d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000e48  00000000  00000000  00019950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000b33  00000000  00000000  0001a798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000226f0  00000000  00000000  0001b2cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0001035b  00000000  00000000  0003d9bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d877c  00000000  00000000  0004dd16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00126492  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00004294  00000000  00000000  001264d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 000000a1  00000000  00000000  0012a76c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000064 	.word	0x20000064
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080071b0 	.word	0x080071b0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000068 	.word	0x20000068
 80001cc:	080071b0 	.word	0x080071b0

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_dmul>:
 8000280:	b570      	push	{r4, r5, r6, lr}
 8000282:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000286:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800028a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800028e:	bf1d      	ittte	ne
 8000290:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000294:	ea94 0f0c 	teqne	r4, ip
 8000298:	ea95 0f0c 	teqne	r5, ip
 800029c:	f000 f8de 	bleq	800045c <__aeabi_dmul+0x1dc>
 80002a0:	442c      	add	r4, r5
 80002a2:	ea81 0603 	eor.w	r6, r1, r3
 80002a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002b2:	bf18      	it	ne
 80002b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80002bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80002c0:	d038      	beq.n	8000334 <__aeabi_dmul+0xb4>
 80002c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002c6:	f04f 0500 	mov.w	r5, #0
 80002ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80002d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002d6:	f04f 0600 	mov.w	r6, #0
 80002da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002de:	f09c 0f00 	teq	ip, #0
 80002e2:	bf18      	it	ne
 80002e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80002e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80002ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80002f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80002f4:	d204      	bcs.n	8000300 <__aeabi_dmul+0x80>
 80002f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80002fa:	416d      	adcs	r5, r5
 80002fc:	eb46 0606 	adc.w	r6, r6, r6
 8000300:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000304:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000308:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800030c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000310:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000314:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000318:	bf88      	it	hi
 800031a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800031e:	d81e      	bhi.n	800035e <__aeabi_dmul+0xde>
 8000320:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	bd70      	pop	{r4, r5, r6, pc}
 8000334:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000338:	ea46 0101 	orr.w	r1, r6, r1
 800033c:	ea40 0002 	orr.w	r0, r0, r2
 8000340:	ea81 0103 	eor.w	r1, r1, r3
 8000344:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000348:	bfc2      	ittt	gt
 800034a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800034e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000352:	bd70      	popgt	{r4, r5, r6, pc}
 8000354:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000358:	f04f 0e00 	mov.w	lr, #0
 800035c:	3c01      	subs	r4, #1
 800035e:	f300 80ab 	bgt.w	80004b8 <__aeabi_dmul+0x238>
 8000362:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000366:	bfde      	ittt	le
 8000368:	2000      	movle	r0, #0
 800036a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800036e:	bd70      	pople	{r4, r5, r6, pc}
 8000370:	f1c4 0400 	rsb	r4, r4, #0
 8000374:	3c20      	subs	r4, #32
 8000376:	da35      	bge.n	80003e4 <__aeabi_dmul+0x164>
 8000378:	340c      	adds	r4, #12
 800037a:	dc1b      	bgt.n	80003b4 <__aeabi_dmul+0x134>
 800037c:	f104 0414 	add.w	r4, r4, #20
 8000380:	f1c4 0520 	rsb	r5, r4, #32
 8000384:	fa00 f305 	lsl.w	r3, r0, r5
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f205 	lsl.w	r2, r1, r5
 8000390:	ea40 0002 	orr.w	r0, r0, r2
 8000394:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000398:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800039c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003a0:	fa21 f604 	lsr.w	r6, r1, r4
 80003a4:	eb42 0106 	adc.w	r1, r2, r6
 80003a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003ac:	bf08      	it	eq
 80003ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003b2:	bd70      	pop	{r4, r5, r6, pc}
 80003b4:	f1c4 040c 	rsb	r4, r4, #12
 80003b8:	f1c4 0520 	rsb	r5, r4, #32
 80003bc:	fa00 f304 	lsl.w	r3, r0, r4
 80003c0:	fa20 f005 	lsr.w	r0, r0, r5
 80003c4:	fa01 f204 	lsl.w	r2, r1, r4
 80003c8:	ea40 0002 	orr.w	r0, r0, r2
 80003cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80003d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003d4:	f141 0100 	adc.w	r1, r1, #0
 80003d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003dc:	bf08      	it	eq
 80003de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003e2:	bd70      	pop	{r4, r5, r6, pc}
 80003e4:	f1c4 0520 	rsb	r5, r4, #32
 80003e8:	fa00 f205 	lsl.w	r2, r0, r5
 80003ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80003f0:	fa20 f304 	lsr.w	r3, r0, r4
 80003f4:	fa01 f205 	lsl.w	r2, r1, r5
 80003f8:	ea43 0302 	orr.w	r3, r3, r2
 80003fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000400:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000404:	fa21 f204 	lsr.w	r2, r1, r4
 8000408:	ea20 0002 	bic.w	r0, r0, r2
 800040c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000410:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000414:	bf08      	it	eq
 8000416:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800041a:	bd70      	pop	{r4, r5, r6, pc}
 800041c:	f094 0f00 	teq	r4, #0
 8000420:	d10f      	bne.n	8000442 <__aeabi_dmul+0x1c2>
 8000422:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000426:	0040      	lsls	r0, r0, #1
 8000428:	eb41 0101 	adc.w	r1, r1, r1
 800042c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000430:	bf08      	it	eq
 8000432:	3c01      	subeq	r4, #1
 8000434:	d0f7      	beq.n	8000426 <__aeabi_dmul+0x1a6>
 8000436:	ea41 0106 	orr.w	r1, r1, r6
 800043a:	f095 0f00 	teq	r5, #0
 800043e:	bf18      	it	ne
 8000440:	4770      	bxne	lr
 8000442:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000446:	0052      	lsls	r2, r2, #1
 8000448:	eb43 0303 	adc.w	r3, r3, r3
 800044c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000450:	bf08      	it	eq
 8000452:	3d01      	subeq	r5, #1
 8000454:	d0f7      	beq.n	8000446 <__aeabi_dmul+0x1c6>
 8000456:	ea43 0306 	orr.w	r3, r3, r6
 800045a:	4770      	bx	lr
 800045c:	ea94 0f0c 	teq	r4, ip
 8000460:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000464:	bf18      	it	ne
 8000466:	ea95 0f0c 	teqne	r5, ip
 800046a:	d00c      	beq.n	8000486 <__aeabi_dmul+0x206>
 800046c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000470:	bf18      	it	ne
 8000472:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000476:	d1d1      	bne.n	800041c <__aeabi_dmul+0x19c>
 8000478:	ea81 0103 	eor.w	r1, r1, r3
 800047c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000480:	f04f 0000 	mov.w	r0, #0
 8000484:	bd70      	pop	{r4, r5, r6, pc}
 8000486:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800048a:	bf06      	itte	eq
 800048c:	4610      	moveq	r0, r2
 800048e:	4619      	moveq	r1, r3
 8000490:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000494:	d019      	beq.n	80004ca <__aeabi_dmul+0x24a>
 8000496:	ea94 0f0c 	teq	r4, ip
 800049a:	d102      	bne.n	80004a2 <__aeabi_dmul+0x222>
 800049c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004a0:	d113      	bne.n	80004ca <__aeabi_dmul+0x24a>
 80004a2:	ea95 0f0c 	teq	r5, ip
 80004a6:	d105      	bne.n	80004b4 <__aeabi_dmul+0x234>
 80004a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004ac:	bf1c      	itt	ne
 80004ae:	4610      	movne	r0, r2
 80004b0:	4619      	movne	r1, r3
 80004b2:	d10a      	bne.n	80004ca <__aeabi_dmul+0x24a>
 80004b4:	ea81 0103 	eor.w	r1, r1, r3
 80004b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80004bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004c4:	f04f 0000 	mov.w	r0, #0
 80004c8:	bd70      	pop	{r4, r5, r6, pc}
 80004ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80004ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80004d2:	bd70      	pop	{r4, r5, r6, pc}

080004d4 <__aeabi_drsub>:
 80004d4:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80004d8:	e002      	b.n	80004e0 <__adddf3>
 80004da:	bf00      	nop

080004dc <__aeabi_dsub>:
 80004dc:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080004e0 <__adddf3>:
 80004e0:	b530      	push	{r4, r5, lr}
 80004e2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80004e6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80004ea:	ea94 0f05 	teq	r4, r5
 80004ee:	bf08      	it	eq
 80004f0:	ea90 0f02 	teqeq	r0, r2
 80004f4:	bf1f      	itttt	ne
 80004f6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80004fa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80004fe:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000502:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000506:	f000 80e2 	beq.w	80006ce <__adddf3+0x1ee>
 800050a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800050e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000512:	bfb8      	it	lt
 8000514:	426d      	neglt	r5, r5
 8000516:	dd0c      	ble.n	8000532 <__adddf3+0x52>
 8000518:	442c      	add	r4, r5
 800051a:	ea80 0202 	eor.w	r2, r0, r2
 800051e:	ea81 0303 	eor.w	r3, r1, r3
 8000522:	ea82 0000 	eor.w	r0, r2, r0
 8000526:	ea83 0101 	eor.w	r1, r3, r1
 800052a:	ea80 0202 	eor.w	r2, r0, r2
 800052e:	ea81 0303 	eor.w	r3, r1, r3
 8000532:	2d36      	cmp	r5, #54	@ 0x36
 8000534:	bf88      	it	hi
 8000536:	bd30      	pophi	{r4, r5, pc}
 8000538:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800053c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000540:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000544:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000548:	d002      	beq.n	8000550 <__adddf3+0x70>
 800054a:	4240      	negs	r0, r0
 800054c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000550:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000554:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000558:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800055c:	d002      	beq.n	8000564 <__adddf3+0x84>
 800055e:	4252      	negs	r2, r2
 8000560:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000564:	ea94 0f05 	teq	r4, r5
 8000568:	f000 80a7 	beq.w	80006ba <__adddf3+0x1da>
 800056c:	f1a4 0401 	sub.w	r4, r4, #1
 8000570:	f1d5 0e20 	rsbs	lr, r5, #32
 8000574:	db0d      	blt.n	8000592 <__adddf3+0xb2>
 8000576:	fa02 fc0e 	lsl.w	ip, r2, lr
 800057a:	fa22 f205 	lsr.w	r2, r2, r5
 800057e:	1880      	adds	r0, r0, r2
 8000580:	f141 0100 	adc.w	r1, r1, #0
 8000584:	fa03 f20e 	lsl.w	r2, r3, lr
 8000588:	1880      	adds	r0, r0, r2
 800058a:	fa43 f305 	asr.w	r3, r3, r5
 800058e:	4159      	adcs	r1, r3
 8000590:	e00e      	b.n	80005b0 <__adddf3+0xd0>
 8000592:	f1a5 0520 	sub.w	r5, r5, #32
 8000596:	f10e 0e20 	add.w	lr, lr, #32
 800059a:	2a01      	cmp	r2, #1
 800059c:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005a0:	bf28      	it	cs
 80005a2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005a6:	fa43 f305 	asr.w	r3, r3, r5
 80005aa:	18c0      	adds	r0, r0, r3
 80005ac:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	d507      	bpl.n	80005c6 <__adddf3+0xe6>
 80005b6:	f04f 0e00 	mov.w	lr, #0
 80005ba:	f1dc 0c00 	rsbs	ip, ip, #0
 80005be:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005c2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005c6:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80005ca:	d31b      	bcc.n	8000604 <__adddf3+0x124>
 80005cc:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80005d0:	d30c      	bcc.n	80005ec <__adddf3+0x10c>
 80005d2:	0849      	lsrs	r1, r1, #1
 80005d4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005d8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005dc:	f104 0401 	add.w	r4, r4, #1
 80005e0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80005e4:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80005e8:	f080 809a 	bcs.w	8000720 <__adddf3+0x240>
 80005ec:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80005f0:	bf08      	it	eq
 80005f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80005f6:	f150 0000 	adcs.w	r0, r0, #0
 80005fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005fe:	ea41 0105 	orr.w	r1, r1, r5
 8000602:	bd30      	pop	{r4, r5, pc}
 8000604:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000608:	4140      	adcs	r0, r0
 800060a:	eb41 0101 	adc.w	r1, r1, r1
 800060e:	3c01      	subs	r4, #1
 8000610:	bf28      	it	cs
 8000612:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000616:	d2e9      	bcs.n	80005ec <__adddf3+0x10c>
 8000618:	f091 0f00 	teq	r1, #0
 800061c:	bf04      	itt	eq
 800061e:	4601      	moveq	r1, r0
 8000620:	2000      	moveq	r0, #0
 8000622:	fab1 f381 	clz	r3, r1
 8000626:	bf08      	it	eq
 8000628:	3320      	addeq	r3, #32
 800062a:	f1a3 030b 	sub.w	r3, r3, #11
 800062e:	f1b3 0220 	subs.w	r2, r3, #32
 8000632:	da0c      	bge.n	800064e <__adddf3+0x16e>
 8000634:	320c      	adds	r2, #12
 8000636:	dd08      	ble.n	800064a <__adddf3+0x16a>
 8000638:	f102 0c14 	add.w	ip, r2, #20
 800063c:	f1c2 020c 	rsb	r2, r2, #12
 8000640:	fa01 f00c 	lsl.w	r0, r1, ip
 8000644:	fa21 f102 	lsr.w	r1, r1, r2
 8000648:	e00c      	b.n	8000664 <__adddf3+0x184>
 800064a:	f102 0214 	add.w	r2, r2, #20
 800064e:	bfd8      	it	le
 8000650:	f1c2 0c20 	rsble	ip, r2, #32
 8000654:	fa01 f102 	lsl.w	r1, r1, r2
 8000658:	fa20 fc0c 	lsr.w	ip, r0, ip
 800065c:	bfdc      	itt	le
 800065e:	ea41 010c 	orrle.w	r1, r1, ip
 8000662:	4090      	lslle	r0, r2
 8000664:	1ae4      	subs	r4, r4, r3
 8000666:	bfa2      	ittt	ge
 8000668:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800066c:	4329      	orrge	r1, r5
 800066e:	bd30      	popge	{r4, r5, pc}
 8000670:	ea6f 0404 	mvn.w	r4, r4
 8000674:	3c1f      	subs	r4, #31
 8000676:	da1c      	bge.n	80006b2 <__adddf3+0x1d2>
 8000678:	340c      	adds	r4, #12
 800067a:	dc0e      	bgt.n	800069a <__adddf3+0x1ba>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0220 	rsb	r2, r4, #32
 8000684:	fa20 f004 	lsr.w	r0, r0, r4
 8000688:	fa01 f302 	lsl.w	r3, r1, r2
 800068c:	ea40 0003 	orr.w	r0, r0, r3
 8000690:	fa21 f304 	lsr.w	r3, r1, r4
 8000694:	ea45 0103 	orr.w	r1, r5, r3
 8000698:	bd30      	pop	{r4, r5, pc}
 800069a:	f1c4 040c 	rsb	r4, r4, #12
 800069e:	f1c4 0220 	rsb	r2, r4, #32
 80006a2:	fa20 f002 	lsr.w	r0, r0, r2
 80006a6:	fa01 f304 	lsl.w	r3, r1, r4
 80006aa:	ea40 0003 	orr.w	r0, r0, r3
 80006ae:	4629      	mov	r1, r5
 80006b0:	bd30      	pop	{r4, r5, pc}
 80006b2:	fa21 f004 	lsr.w	r0, r1, r4
 80006b6:	4629      	mov	r1, r5
 80006b8:	bd30      	pop	{r4, r5, pc}
 80006ba:	f094 0f00 	teq	r4, #0
 80006be:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80006c2:	bf06      	itte	eq
 80006c4:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80006c8:	3401      	addeq	r4, #1
 80006ca:	3d01      	subne	r5, #1
 80006cc:	e74e      	b.n	800056c <__adddf3+0x8c>
 80006ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006d2:	bf18      	it	ne
 80006d4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006d8:	d029      	beq.n	800072e <__adddf3+0x24e>
 80006da:	ea94 0f05 	teq	r4, r5
 80006de:	bf08      	it	eq
 80006e0:	ea90 0f02 	teqeq	r0, r2
 80006e4:	d005      	beq.n	80006f2 <__adddf3+0x212>
 80006e6:	ea54 0c00 	orrs.w	ip, r4, r0
 80006ea:	bf04      	itt	eq
 80006ec:	4619      	moveq	r1, r3
 80006ee:	4610      	moveq	r0, r2
 80006f0:	bd30      	pop	{r4, r5, pc}
 80006f2:	ea91 0f03 	teq	r1, r3
 80006f6:	bf1e      	ittt	ne
 80006f8:	2100      	movne	r1, #0
 80006fa:	2000      	movne	r0, #0
 80006fc:	bd30      	popne	{r4, r5, pc}
 80006fe:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000702:	d105      	bne.n	8000710 <__adddf3+0x230>
 8000704:	0040      	lsls	r0, r0, #1
 8000706:	4149      	adcs	r1, r1
 8000708:	bf28      	it	cs
 800070a:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800070e:	bd30      	pop	{r4, r5, pc}
 8000710:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000714:	bf3c      	itt	cc
 8000716:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800071a:	bd30      	popcc	{r4, r5, pc}
 800071c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000720:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000724:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000728:	f04f 0000 	mov.w	r0, #0
 800072c:	bd30      	pop	{r4, r5, pc}
 800072e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000732:	bf1a      	itte	ne
 8000734:	4619      	movne	r1, r3
 8000736:	4610      	movne	r0, r2
 8000738:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800073c:	bf1c      	itt	ne
 800073e:	460b      	movne	r3, r1
 8000740:	4602      	movne	r2, r0
 8000742:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000746:	bf06      	itte	eq
 8000748:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800074c:	ea91 0f03 	teqeq	r1, r3
 8000750:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000754:	bd30      	pop	{r4, r5, pc}
 8000756:	bf00      	nop

08000758 <__aeabi_ui2d>:
 8000758:	f090 0f00 	teq	r0, #0
 800075c:	bf04      	itt	eq
 800075e:	2100      	moveq	r1, #0
 8000760:	4770      	bxeq	lr
 8000762:	b530      	push	{r4, r5, lr}
 8000764:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000768:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800076c:	f04f 0500 	mov.w	r5, #0
 8000770:	f04f 0100 	mov.w	r1, #0
 8000774:	e750      	b.n	8000618 <__adddf3+0x138>
 8000776:	bf00      	nop

08000778 <__aeabi_i2d>:
 8000778:	f090 0f00 	teq	r0, #0
 800077c:	bf04      	itt	eq
 800077e:	2100      	moveq	r1, #0
 8000780:	4770      	bxeq	lr
 8000782:	b530      	push	{r4, r5, lr}
 8000784:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000788:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800078c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000790:	bf48      	it	mi
 8000792:	4240      	negmi	r0, r0
 8000794:	f04f 0100 	mov.w	r1, #0
 8000798:	e73e      	b.n	8000618 <__adddf3+0x138>
 800079a:	bf00      	nop

0800079c <__aeabi_f2d>:
 800079c:	0042      	lsls	r2, r0, #1
 800079e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007a2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007a6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007aa:	bf1f      	itttt	ne
 80007ac:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80007b0:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80007b4:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80007b8:	4770      	bxne	lr
 80007ba:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80007be:	bf08      	it	eq
 80007c0:	4770      	bxeq	lr
 80007c2:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80007c6:	bf04      	itt	eq
 80007c8:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80007cc:	4770      	bxeq	lr
 80007ce:	b530      	push	{r4, r5, lr}
 80007d0:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80007d4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80007d8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80007dc:	e71c      	b.n	8000618 <__adddf3+0x138>
 80007de:	bf00      	nop

080007e0 <__aeabi_ul2d>:
 80007e0:	ea50 0201 	orrs.w	r2, r0, r1
 80007e4:	bf08      	it	eq
 80007e6:	4770      	bxeq	lr
 80007e8:	b530      	push	{r4, r5, lr}
 80007ea:	f04f 0500 	mov.w	r5, #0
 80007ee:	e00a      	b.n	8000806 <__aeabi_l2d+0x16>

080007f0 <__aeabi_l2d>:
 80007f0:	ea50 0201 	orrs.w	r2, r0, r1
 80007f4:	bf08      	it	eq
 80007f6:	4770      	bxeq	lr
 80007f8:	b530      	push	{r4, r5, lr}
 80007fa:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80007fe:	d502      	bpl.n	8000806 <__aeabi_l2d+0x16>
 8000800:	4240      	negs	r0, r0
 8000802:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000806:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800080a:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800080e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000812:	f43f aed8 	beq.w	80005c6 <__adddf3+0xe6>
 8000816:	f04f 0203 	mov.w	r2, #3
 800081a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800081e:	bf18      	it	ne
 8000820:	3203      	addne	r2, #3
 8000822:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000826:	bf18      	it	ne
 8000828:	3203      	addne	r2, #3
 800082a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800082e:	f1c2 0320 	rsb	r3, r2, #32
 8000832:	fa00 fc03 	lsl.w	ip, r0, r3
 8000836:	fa20 f002 	lsr.w	r0, r0, r2
 800083a:	fa01 fe03 	lsl.w	lr, r1, r3
 800083e:	ea40 000e 	orr.w	r0, r0, lr
 8000842:	fa21 f102 	lsr.w	r1, r1, r2
 8000846:	4414      	add	r4, r2
 8000848:	e6bd      	b.n	80005c6 <__adddf3+0xe6>
 800084a:	bf00      	nop

0800084c <__aeabi_d2uiz>:
 800084c:	004a      	lsls	r2, r1, #1
 800084e:	d211      	bcs.n	8000874 <__aeabi_d2uiz+0x28>
 8000850:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000854:	d211      	bcs.n	800087a <__aeabi_d2uiz+0x2e>
 8000856:	d50d      	bpl.n	8000874 <__aeabi_d2uiz+0x28>
 8000858:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 800085c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000860:	d40e      	bmi.n	8000880 <__aeabi_d2uiz+0x34>
 8000862:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000866:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800086a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800086e:	fa23 f002 	lsr.w	r0, r3, r2
 8000872:	4770      	bx	lr
 8000874:	f04f 0000 	mov.w	r0, #0
 8000878:	4770      	bx	lr
 800087a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 800087e:	d102      	bne.n	8000886 <__aeabi_d2uiz+0x3a>
 8000880:	f04f 30ff 	mov.w	r0, #4294967295
 8000884:	4770      	bx	lr
 8000886:	f04f 0000 	mov.w	r0, #0
 800088a:	4770      	bx	lr

0800088c <__aeabi_uldivmod>:
 800088c:	b953      	cbnz	r3, 80008a4 <__aeabi_uldivmod+0x18>
 800088e:	b94a      	cbnz	r2, 80008a4 <__aeabi_uldivmod+0x18>
 8000890:	2900      	cmp	r1, #0
 8000892:	bf08      	it	eq
 8000894:	2800      	cmpeq	r0, #0
 8000896:	bf1c      	itt	ne
 8000898:	f04f 31ff 	movne.w	r1, #4294967295
 800089c:	f04f 30ff 	movne.w	r0, #4294967295
 80008a0:	f000 b988 	b.w	8000bb4 <__aeabi_idiv0>
 80008a4:	f1ad 0c08 	sub.w	ip, sp, #8
 80008a8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80008ac:	f000 f806 	bl	80008bc <__udivmoddi4>
 80008b0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80008b4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80008b8:	b004      	add	sp, #16
 80008ba:	4770      	bx	lr

080008bc <__udivmoddi4>:
 80008bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80008c0:	9d08      	ldr	r5, [sp, #32]
 80008c2:	468e      	mov	lr, r1
 80008c4:	4604      	mov	r4, r0
 80008c6:	4688      	mov	r8, r1
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	d14a      	bne.n	8000962 <__udivmoddi4+0xa6>
 80008cc:	428a      	cmp	r2, r1
 80008ce:	4617      	mov	r7, r2
 80008d0:	d962      	bls.n	8000998 <__udivmoddi4+0xdc>
 80008d2:	fab2 f682 	clz	r6, r2
 80008d6:	b14e      	cbz	r6, 80008ec <__udivmoddi4+0x30>
 80008d8:	f1c6 0320 	rsb	r3, r6, #32
 80008dc:	fa01 f806 	lsl.w	r8, r1, r6
 80008e0:	fa20 f303 	lsr.w	r3, r0, r3
 80008e4:	40b7      	lsls	r7, r6
 80008e6:	ea43 0808 	orr.w	r8, r3, r8
 80008ea:	40b4      	lsls	r4, r6
 80008ec:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80008f0:	fa1f fc87 	uxth.w	ip, r7
 80008f4:	fbb8 f1fe 	udiv	r1, r8, lr
 80008f8:	0c23      	lsrs	r3, r4, #16
 80008fa:	fb0e 8811 	mls	r8, lr, r1, r8
 80008fe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000902:	fb01 f20c 	mul.w	r2, r1, ip
 8000906:	429a      	cmp	r2, r3
 8000908:	d909      	bls.n	800091e <__udivmoddi4+0x62>
 800090a:	18fb      	adds	r3, r7, r3
 800090c:	f101 30ff 	add.w	r0, r1, #4294967295
 8000910:	f080 80ea 	bcs.w	8000ae8 <__udivmoddi4+0x22c>
 8000914:	429a      	cmp	r2, r3
 8000916:	f240 80e7 	bls.w	8000ae8 <__udivmoddi4+0x22c>
 800091a:	3902      	subs	r1, #2
 800091c:	443b      	add	r3, r7
 800091e:	1a9a      	subs	r2, r3, r2
 8000920:	b2a3      	uxth	r3, r4
 8000922:	fbb2 f0fe 	udiv	r0, r2, lr
 8000926:	fb0e 2210 	mls	r2, lr, r0, r2
 800092a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800092e:	fb00 fc0c 	mul.w	ip, r0, ip
 8000932:	459c      	cmp	ip, r3
 8000934:	d909      	bls.n	800094a <__udivmoddi4+0x8e>
 8000936:	18fb      	adds	r3, r7, r3
 8000938:	f100 32ff 	add.w	r2, r0, #4294967295
 800093c:	f080 80d6 	bcs.w	8000aec <__udivmoddi4+0x230>
 8000940:	459c      	cmp	ip, r3
 8000942:	f240 80d3 	bls.w	8000aec <__udivmoddi4+0x230>
 8000946:	443b      	add	r3, r7
 8000948:	3802      	subs	r0, #2
 800094a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800094e:	eba3 030c 	sub.w	r3, r3, ip
 8000952:	2100      	movs	r1, #0
 8000954:	b11d      	cbz	r5, 800095e <__udivmoddi4+0xa2>
 8000956:	40f3      	lsrs	r3, r6
 8000958:	2200      	movs	r2, #0
 800095a:	e9c5 3200 	strd	r3, r2, [r5]
 800095e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000962:	428b      	cmp	r3, r1
 8000964:	d905      	bls.n	8000972 <__udivmoddi4+0xb6>
 8000966:	b10d      	cbz	r5, 800096c <__udivmoddi4+0xb0>
 8000968:	e9c5 0100 	strd	r0, r1, [r5]
 800096c:	2100      	movs	r1, #0
 800096e:	4608      	mov	r0, r1
 8000970:	e7f5      	b.n	800095e <__udivmoddi4+0xa2>
 8000972:	fab3 f183 	clz	r1, r3
 8000976:	2900      	cmp	r1, #0
 8000978:	d146      	bne.n	8000a08 <__udivmoddi4+0x14c>
 800097a:	4573      	cmp	r3, lr
 800097c:	d302      	bcc.n	8000984 <__udivmoddi4+0xc8>
 800097e:	4282      	cmp	r2, r0
 8000980:	f200 8105 	bhi.w	8000b8e <__udivmoddi4+0x2d2>
 8000984:	1a84      	subs	r4, r0, r2
 8000986:	eb6e 0203 	sbc.w	r2, lr, r3
 800098a:	2001      	movs	r0, #1
 800098c:	4690      	mov	r8, r2
 800098e:	2d00      	cmp	r5, #0
 8000990:	d0e5      	beq.n	800095e <__udivmoddi4+0xa2>
 8000992:	e9c5 4800 	strd	r4, r8, [r5]
 8000996:	e7e2      	b.n	800095e <__udivmoddi4+0xa2>
 8000998:	2a00      	cmp	r2, #0
 800099a:	f000 8090 	beq.w	8000abe <__udivmoddi4+0x202>
 800099e:	fab2 f682 	clz	r6, r2
 80009a2:	2e00      	cmp	r6, #0
 80009a4:	f040 80a4 	bne.w	8000af0 <__udivmoddi4+0x234>
 80009a8:	1a8a      	subs	r2, r1, r2
 80009aa:	0c03      	lsrs	r3, r0, #16
 80009ac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80009b0:	b280      	uxth	r0, r0
 80009b2:	b2bc      	uxth	r4, r7
 80009b4:	2101      	movs	r1, #1
 80009b6:	fbb2 fcfe 	udiv	ip, r2, lr
 80009ba:	fb0e 221c 	mls	r2, lr, ip, r2
 80009be:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80009c2:	fb04 f20c 	mul.w	r2, r4, ip
 80009c6:	429a      	cmp	r2, r3
 80009c8:	d907      	bls.n	80009da <__udivmoddi4+0x11e>
 80009ca:	18fb      	adds	r3, r7, r3
 80009cc:	f10c 38ff 	add.w	r8, ip, #4294967295
 80009d0:	d202      	bcs.n	80009d8 <__udivmoddi4+0x11c>
 80009d2:	429a      	cmp	r2, r3
 80009d4:	f200 80e0 	bhi.w	8000b98 <__udivmoddi4+0x2dc>
 80009d8:	46c4      	mov	ip, r8
 80009da:	1a9b      	subs	r3, r3, r2
 80009dc:	fbb3 f2fe 	udiv	r2, r3, lr
 80009e0:	fb0e 3312 	mls	r3, lr, r2, r3
 80009e4:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80009e8:	fb02 f404 	mul.w	r4, r2, r4
 80009ec:	429c      	cmp	r4, r3
 80009ee:	d907      	bls.n	8000a00 <__udivmoddi4+0x144>
 80009f0:	18fb      	adds	r3, r7, r3
 80009f2:	f102 30ff 	add.w	r0, r2, #4294967295
 80009f6:	d202      	bcs.n	80009fe <__udivmoddi4+0x142>
 80009f8:	429c      	cmp	r4, r3
 80009fa:	f200 80ca 	bhi.w	8000b92 <__udivmoddi4+0x2d6>
 80009fe:	4602      	mov	r2, r0
 8000a00:	1b1b      	subs	r3, r3, r4
 8000a02:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000a06:	e7a5      	b.n	8000954 <__udivmoddi4+0x98>
 8000a08:	f1c1 0620 	rsb	r6, r1, #32
 8000a0c:	408b      	lsls	r3, r1
 8000a0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000a12:	431f      	orrs	r7, r3
 8000a14:	fa0e f401 	lsl.w	r4, lr, r1
 8000a18:	fa20 f306 	lsr.w	r3, r0, r6
 8000a1c:	fa2e fe06 	lsr.w	lr, lr, r6
 8000a20:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000a24:	4323      	orrs	r3, r4
 8000a26:	fa00 f801 	lsl.w	r8, r0, r1
 8000a2a:	fa1f fc87 	uxth.w	ip, r7
 8000a2e:	fbbe f0f9 	udiv	r0, lr, r9
 8000a32:	0c1c      	lsrs	r4, r3, #16
 8000a34:	fb09 ee10 	mls	lr, r9, r0, lr
 8000a38:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000a3c:	fb00 fe0c 	mul.w	lr, r0, ip
 8000a40:	45a6      	cmp	lr, r4
 8000a42:	fa02 f201 	lsl.w	r2, r2, r1
 8000a46:	d909      	bls.n	8000a5c <__udivmoddi4+0x1a0>
 8000a48:	193c      	adds	r4, r7, r4
 8000a4a:	f100 3aff 	add.w	sl, r0, #4294967295
 8000a4e:	f080 809c 	bcs.w	8000b8a <__udivmoddi4+0x2ce>
 8000a52:	45a6      	cmp	lr, r4
 8000a54:	f240 8099 	bls.w	8000b8a <__udivmoddi4+0x2ce>
 8000a58:	3802      	subs	r0, #2
 8000a5a:	443c      	add	r4, r7
 8000a5c:	eba4 040e 	sub.w	r4, r4, lr
 8000a60:	fa1f fe83 	uxth.w	lr, r3
 8000a64:	fbb4 f3f9 	udiv	r3, r4, r9
 8000a68:	fb09 4413 	mls	r4, r9, r3, r4
 8000a6c:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000a70:	fb03 fc0c 	mul.w	ip, r3, ip
 8000a74:	45a4      	cmp	ip, r4
 8000a76:	d908      	bls.n	8000a8a <__udivmoddi4+0x1ce>
 8000a78:	193c      	adds	r4, r7, r4
 8000a7a:	f103 3eff 	add.w	lr, r3, #4294967295
 8000a7e:	f080 8082 	bcs.w	8000b86 <__udivmoddi4+0x2ca>
 8000a82:	45a4      	cmp	ip, r4
 8000a84:	d97f      	bls.n	8000b86 <__udivmoddi4+0x2ca>
 8000a86:	3b02      	subs	r3, #2
 8000a88:	443c      	add	r4, r7
 8000a8a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000a8e:	eba4 040c 	sub.w	r4, r4, ip
 8000a92:	fba0 ec02 	umull	lr, ip, r0, r2
 8000a96:	4564      	cmp	r4, ip
 8000a98:	4673      	mov	r3, lr
 8000a9a:	46e1      	mov	r9, ip
 8000a9c:	d362      	bcc.n	8000b64 <__udivmoddi4+0x2a8>
 8000a9e:	d05f      	beq.n	8000b60 <__udivmoddi4+0x2a4>
 8000aa0:	b15d      	cbz	r5, 8000aba <__udivmoddi4+0x1fe>
 8000aa2:	ebb8 0203 	subs.w	r2, r8, r3
 8000aa6:	eb64 0409 	sbc.w	r4, r4, r9
 8000aaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000aae:	fa22 f301 	lsr.w	r3, r2, r1
 8000ab2:	431e      	orrs	r6, r3
 8000ab4:	40cc      	lsrs	r4, r1
 8000ab6:	e9c5 6400 	strd	r6, r4, [r5]
 8000aba:	2100      	movs	r1, #0
 8000abc:	e74f      	b.n	800095e <__udivmoddi4+0xa2>
 8000abe:	fbb1 fcf2 	udiv	ip, r1, r2
 8000ac2:	0c01      	lsrs	r1, r0, #16
 8000ac4:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ac8:	b280      	uxth	r0, r0
 8000aca:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000ace:	463b      	mov	r3, r7
 8000ad0:	4638      	mov	r0, r7
 8000ad2:	463c      	mov	r4, r7
 8000ad4:	46b8      	mov	r8, r7
 8000ad6:	46be      	mov	lr, r7
 8000ad8:	2620      	movs	r6, #32
 8000ada:	fbb1 f1f7 	udiv	r1, r1, r7
 8000ade:	eba2 0208 	sub.w	r2, r2, r8
 8000ae2:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000ae6:	e766      	b.n	80009b6 <__udivmoddi4+0xfa>
 8000ae8:	4601      	mov	r1, r0
 8000aea:	e718      	b.n	800091e <__udivmoddi4+0x62>
 8000aec:	4610      	mov	r0, r2
 8000aee:	e72c      	b.n	800094a <__udivmoddi4+0x8e>
 8000af0:	f1c6 0220 	rsb	r2, r6, #32
 8000af4:	fa2e f302 	lsr.w	r3, lr, r2
 8000af8:	40b7      	lsls	r7, r6
 8000afa:	40b1      	lsls	r1, r6
 8000afc:	fa20 f202 	lsr.w	r2, r0, r2
 8000b00:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000b04:	430a      	orrs	r2, r1
 8000b06:	fbb3 f8fe 	udiv	r8, r3, lr
 8000b0a:	b2bc      	uxth	r4, r7
 8000b0c:	fb0e 3318 	mls	r3, lr, r8, r3
 8000b10:	0c11      	lsrs	r1, r2, #16
 8000b12:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000b16:	fb08 f904 	mul.w	r9, r8, r4
 8000b1a:	40b0      	lsls	r0, r6
 8000b1c:	4589      	cmp	r9, r1
 8000b1e:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000b22:	b280      	uxth	r0, r0
 8000b24:	d93e      	bls.n	8000ba4 <__udivmoddi4+0x2e8>
 8000b26:	1879      	adds	r1, r7, r1
 8000b28:	f108 3cff 	add.w	ip, r8, #4294967295
 8000b2c:	d201      	bcs.n	8000b32 <__udivmoddi4+0x276>
 8000b2e:	4589      	cmp	r9, r1
 8000b30:	d81f      	bhi.n	8000b72 <__udivmoddi4+0x2b6>
 8000b32:	eba1 0109 	sub.w	r1, r1, r9
 8000b36:	fbb1 f9fe 	udiv	r9, r1, lr
 8000b3a:	fb09 f804 	mul.w	r8, r9, r4
 8000b3e:	fb0e 1119 	mls	r1, lr, r9, r1
 8000b42:	b292      	uxth	r2, r2
 8000b44:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b48:	4542      	cmp	r2, r8
 8000b4a:	d229      	bcs.n	8000ba0 <__udivmoddi4+0x2e4>
 8000b4c:	18ba      	adds	r2, r7, r2
 8000b4e:	f109 31ff 	add.w	r1, r9, #4294967295
 8000b52:	d2c4      	bcs.n	8000ade <__udivmoddi4+0x222>
 8000b54:	4542      	cmp	r2, r8
 8000b56:	d2c2      	bcs.n	8000ade <__udivmoddi4+0x222>
 8000b58:	f1a9 0102 	sub.w	r1, r9, #2
 8000b5c:	443a      	add	r2, r7
 8000b5e:	e7be      	b.n	8000ade <__udivmoddi4+0x222>
 8000b60:	45f0      	cmp	r8, lr
 8000b62:	d29d      	bcs.n	8000aa0 <__udivmoddi4+0x1e4>
 8000b64:	ebbe 0302 	subs.w	r3, lr, r2
 8000b68:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000b6c:	3801      	subs	r0, #1
 8000b6e:	46e1      	mov	r9, ip
 8000b70:	e796      	b.n	8000aa0 <__udivmoddi4+0x1e4>
 8000b72:	eba7 0909 	sub.w	r9, r7, r9
 8000b76:	4449      	add	r1, r9
 8000b78:	f1a8 0c02 	sub.w	ip, r8, #2
 8000b7c:	fbb1 f9fe 	udiv	r9, r1, lr
 8000b80:	fb09 f804 	mul.w	r8, r9, r4
 8000b84:	e7db      	b.n	8000b3e <__udivmoddi4+0x282>
 8000b86:	4673      	mov	r3, lr
 8000b88:	e77f      	b.n	8000a8a <__udivmoddi4+0x1ce>
 8000b8a:	4650      	mov	r0, sl
 8000b8c:	e766      	b.n	8000a5c <__udivmoddi4+0x1a0>
 8000b8e:	4608      	mov	r0, r1
 8000b90:	e6fd      	b.n	800098e <__udivmoddi4+0xd2>
 8000b92:	443b      	add	r3, r7
 8000b94:	3a02      	subs	r2, #2
 8000b96:	e733      	b.n	8000a00 <__udivmoddi4+0x144>
 8000b98:	f1ac 0c02 	sub.w	ip, ip, #2
 8000b9c:	443b      	add	r3, r7
 8000b9e:	e71c      	b.n	80009da <__udivmoddi4+0x11e>
 8000ba0:	4649      	mov	r1, r9
 8000ba2:	e79c      	b.n	8000ade <__udivmoddi4+0x222>
 8000ba4:	eba1 0109 	sub.w	r1, r1, r9
 8000ba8:	46c4      	mov	ip, r8
 8000baa:	fbb1 f9fe 	udiv	r9, r1, lr
 8000bae:	fb09 f804 	mul.w	r8, r9, r4
 8000bb2:	e7c4      	b.n	8000b3e <__udivmoddi4+0x282>

08000bb4 <__aeabi_idiv0>:
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8000bbc:	f001 ff8a 	bl	8002ad4 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8000bc0:	f000 f958 	bl	8000e74 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8000bc4:	f000 faec 	bl	80011a0 <MX_GPIO_Init>
	MX_DMA_Init();
 8000bc8:	f000 faca 	bl	8001160 <MX_DMA_Init>
	MX_ADC1_Init();
 8000bcc:	f000 f9bc 	bl	8000f48 <MX_ADC1_Init>
	MX_TIM3_Init();
 8000bd0:	f000 fa1a 	bl	8001008 <MX_TIM3_Init>
	MX_UART5_Init();
 8000bd4:	f000 fa9a 	bl	800110c <MX_UART5_Init>
	/* USER CODE BEGIN 2 */

	HAL_ADC_Start_DMA(&hadc1, (uint32_t*) dma_buffer, 64);
 8000bd8:	2240      	movs	r2, #64	@ 0x40
 8000bda:	4996      	ldr	r1, [pc, #600]	@ (8000e34 <main+0x27c>)
 8000bdc:	4896      	ldr	r0, [pc, #600]	@ (8000e38 <main+0x280>)
 8000bde:	f002 f853 	bl	8002c88 <HAL_ADC_Start_DMA>

	peso[15] = 0;  //inicialización de pesos
 8000be2:	4b96      	ldr	r3, [pc, #600]	@ (8000e3c <main+0x284>)
 8000be4:	2200      	movs	r2, #0
 8000be6:	73da      	strb	r2, [r3, #15]
	peso[11] = peso[14] = 1;
 8000be8:	4b94      	ldr	r3, [pc, #592]	@ (8000e3c <main+0x284>)
 8000bea:	2201      	movs	r2, #1
 8000bec:	739a      	strb	r2, [r3, #14]
 8000bee:	4b93      	ldr	r3, [pc, #588]	@ (8000e3c <main+0x284>)
 8000bf0:	7b9a      	ldrb	r2, [r3, #14]
 8000bf2:	4b92      	ldr	r3, [pc, #584]	@ (8000e3c <main+0x284>)
 8000bf4:	72da      	strb	r2, [r3, #11]
	peso[7] = peso[10] = peso[13] = 2;
 8000bf6:	4b91      	ldr	r3, [pc, #580]	@ (8000e3c <main+0x284>)
 8000bf8:	2202      	movs	r2, #2
 8000bfa:	735a      	strb	r2, [r3, #13]
 8000bfc:	4b8f      	ldr	r3, [pc, #572]	@ (8000e3c <main+0x284>)
 8000bfe:	7b5a      	ldrb	r2, [r3, #13]
 8000c00:	4b8e      	ldr	r3, [pc, #568]	@ (8000e3c <main+0x284>)
 8000c02:	729a      	strb	r2, [r3, #10]
 8000c04:	4b8d      	ldr	r3, [pc, #564]	@ (8000e3c <main+0x284>)
 8000c06:	7a9a      	ldrb	r2, [r3, #10]
 8000c08:	4b8c      	ldr	r3, [pc, #560]	@ (8000e3c <main+0x284>)
 8000c0a:	71da      	strb	r2, [r3, #7]
	peso[3] = peso[6] = peso[9] = peso[12] = 3;
 8000c0c:	4b8b      	ldr	r3, [pc, #556]	@ (8000e3c <main+0x284>)
 8000c0e:	2203      	movs	r2, #3
 8000c10:	731a      	strb	r2, [r3, #12]
 8000c12:	4b8a      	ldr	r3, [pc, #552]	@ (8000e3c <main+0x284>)
 8000c14:	7b1a      	ldrb	r2, [r3, #12]
 8000c16:	4b89      	ldr	r3, [pc, #548]	@ (8000e3c <main+0x284>)
 8000c18:	725a      	strb	r2, [r3, #9]
 8000c1a:	4b88      	ldr	r3, [pc, #544]	@ (8000e3c <main+0x284>)
 8000c1c:	7a5a      	ldrb	r2, [r3, #9]
 8000c1e:	4b87      	ldr	r3, [pc, #540]	@ (8000e3c <main+0x284>)
 8000c20:	719a      	strb	r2, [r3, #6]
 8000c22:	4b86      	ldr	r3, [pc, #536]	@ (8000e3c <main+0x284>)
 8000c24:	799a      	ldrb	r2, [r3, #6]
 8000c26:	4b85      	ldr	r3, [pc, #532]	@ (8000e3c <main+0x284>)
 8000c28:	70da      	strb	r2, [r3, #3]
	peso[2] = peso[5] = peso[8] = 4;
 8000c2a:	4b84      	ldr	r3, [pc, #528]	@ (8000e3c <main+0x284>)
 8000c2c:	2204      	movs	r2, #4
 8000c2e:	721a      	strb	r2, [r3, #8]
 8000c30:	4b82      	ldr	r3, [pc, #520]	@ (8000e3c <main+0x284>)
 8000c32:	7a1a      	ldrb	r2, [r3, #8]
 8000c34:	4b81      	ldr	r3, [pc, #516]	@ (8000e3c <main+0x284>)
 8000c36:	715a      	strb	r2, [r3, #5]
 8000c38:	4b80      	ldr	r3, [pc, #512]	@ (8000e3c <main+0x284>)
 8000c3a:	795a      	ldrb	r2, [r3, #5]
 8000c3c:	4b7f      	ldr	r3, [pc, #508]	@ (8000e3c <main+0x284>)
 8000c3e:	709a      	strb	r2, [r3, #2]
	peso[1] = peso[4] = 5;
 8000c40:	4b7e      	ldr	r3, [pc, #504]	@ (8000e3c <main+0x284>)
 8000c42:	2205      	movs	r2, #5
 8000c44:	711a      	strb	r2, [r3, #4]
 8000c46:	4b7d      	ldr	r3, [pc, #500]	@ (8000e3c <main+0x284>)
 8000c48:	791a      	ldrb	r2, [r3, #4]
 8000c4a:	4b7c      	ldr	r3, [pc, #496]	@ (8000e3c <main+0x284>)
 8000c4c:	705a      	strb	r2, [r3, #1]
	peso[0] = 6;
 8000c4e:	4b7b      	ldr	r3, [pc, #492]	@ (8000e3c <main+0x284>)
 8000c50:	2206      	movs	r2, #6
 8000c52:	701a      	strb	r2, [r3, #0]

	//paredes de cada casilla (8=pared en norte, 4=pared en este, 2=pared en sur, 1=pared en oeste)
	pared[0] = 6; //se suma sur y este
 8000c54:	4b7a      	ldr	r3, [pc, #488]	@ (8000e40 <main+0x288>)
 8000c56:	2206      	movs	r2, #6
 8000c58:	701a      	strb	r2, [r3, #0]
	pared[1] = pared[2] = 2; //solo sur
 8000c5a:	4b79      	ldr	r3, [pc, #484]	@ (8000e40 <main+0x288>)
 8000c5c:	2202      	movs	r2, #2
 8000c5e:	709a      	strb	r2, [r3, #2]
 8000c60:	4b77      	ldr	r3, [pc, #476]	@ (8000e40 <main+0x288>)
 8000c62:	789a      	ldrb	r2, [r3, #2]
 8000c64:	4b76      	ldr	r3, [pc, #472]	@ (8000e40 <main+0x288>)
 8000c66:	705a      	strb	r2, [r3, #1]
	pared[3] = 3;  //se suma sur y oeste
 8000c68:	4b75      	ldr	r3, [pc, #468]	@ (8000e40 <main+0x288>)
 8000c6a:	2203      	movs	r2, #3
 8000c6c:	70da      	strb	r2, [r3, #3]
	pared[7] = pared[11] = 1; // solo oeste
 8000c6e:	4b74      	ldr	r3, [pc, #464]	@ (8000e40 <main+0x288>)
 8000c70:	2201      	movs	r2, #1
 8000c72:	72da      	strb	r2, [r3, #11]
 8000c74:	4b72      	ldr	r3, [pc, #456]	@ (8000e40 <main+0x288>)
 8000c76:	7ada      	ldrb	r2, [r3, #11]
 8000c78:	4b71      	ldr	r3, [pc, #452]	@ (8000e40 <main+0x288>)
 8000c7a:	71da      	strb	r2, [r3, #7]
	pared[15] = 9;  //se suma norte y oeste
 8000c7c:	4b70      	ldr	r3, [pc, #448]	@ (8000e40 <main+0x288>)
 8000c7e:	2209      	movs	r2, #9
 8000c80:	73da      	strb	r2, [r3, #15]
	pared[14] = pared[13] = 8; //solo norte
 8000c82:	4b6f      	ldr	r3, [pc, #444]	@ (8000e40 <main+0x288>)
 8000c84:	2208      	movs	r2, #8
 8000c86:	735a      	strb	r2, [r3, #13]
 8000c88:	4b6d      	ldr	r3, [pc, #436]	@ (8000e40 <main+0x288>)
 8000c8a:	7b5a      	ldrb	r2, [r3, #13]
 8000c8c:	4b6c      	ldr	r3, [pc, #432]	@ (8000e40 <main+0x288>)
 8000c8e:	739a      	strb	r2, [r3, #14]
	pared[12] = 12; //se suma mprte y este
 8000c90:	4b6b      	ldr	r3, [pc, #428]	@ (8000e40 <main+0x288>)
 8000c92:	220c      	movs	r2, #12
 8000c94:	731a      	strb	r2, [r3, #12]
	pared[4] = pared[8] = 4; //solo este
 8000c96:	4b6a      	ldr	r3, [pc, #424]	@ (8000e40 <main+0x288>)
 8000c98:	2204      	movs	r2, #4
 8000c9a:	721a      	strb	r2, [r3, #8]
 8000c9c:	4b68      	ldr	r3, [pc, #416]	@ (8000e40 <main+0x288>)
 8000c9e:	7a1a      	ldrb	r2, [r3, #8]
 8000ca0:	4b67      	ldr	r3, [pc, #412]	@ (8000e40 <main+0x288>)
 8000ca2:	711a      	strb	r2, [r3, #4]
	pared[5] = pared[6] = pared[9] = pared[10] = 0;
 8000ca4:	4b66      	ldr	r3, [pc, #408]	@ (8000e40 <main+0x288>)
 8000ca6:	2200      	movs	r2, #0
 8000ca8:	729a      	strb	r2, [r3, #10]
 8000caa:	4b65      	ldr	r3, [pc, #404]	@ (8000e40 <main+0x288>)
 8000cac:	7a9a      	ldrb	r2, [r3, #10]
 8000cae:	4b64      	ldr	r3, [pc, #400]	@ (8000e40 <main+0x288>)
 8000cb0:	725a      	strb	r2, [r3, #9]
 8000cb2:	4b63      	ldr	r3, [pc, #396]	@ (8000e40 <main+0x288>)
 8000cb4:	7a5a      	ldrb	r2, [r3, #9]
 8000cb6:	4b62      	ldr	r3, [pc, #392]	@ (8000e40 <main+0x288>)
 8000cb8:	719a      	strb	r2, [r3, #6]
 8000cba:	4b61      	ldr	r3, [pc, #388]	@ (8000e40 <main+0x288>)
 8000cbc:	799a      	ldrb	r2, [r3, #6]
 8000cbe:	4b60      	ldr	r3, [pc, #384]	@ (8000e40 <main+0x288>)
 8000cc0:	715a      	strb	r2, [r3, #5]



	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET); // INICIALIZACION EN AVANZAR
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000cc8:	485e      	ldr	r0, [pc, #376]	@ (8000e44 <main+0x28c>)
 8000cca:	f003 fa63 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8000cce:	2201      	movs	r2, #1
 8000cd0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000cd4:	485b      	ldr	r0, [pc, #364]	@ (8000e44 <main+0x28c>)
 8000cd6:	f003 fa5d 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8000cda:	2200      	movs	r2, #0
 8000cdc:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000ce0:	4858      	ldr	r0, [pc, #352]	@ (8000e44 <main+0x28c>)
 8000ce2:	f003 fa57 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8000ce6:	2201      	movs	r2, #1
 8000ce8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000cec:	4855      	ldr	r0, [pc, #340]	@ (8000e44 <main+0x28c>)
 8000cee:	f003 fa51 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); // Inicio de la modulación PWM, rueda izquierda
 8000cf2:	2108      	movs	r1, #8
 8000cf4:	4854      	ldr	r0, [pc, #336]	@ (8000e48 <main+0x290>)
 8000cf6:	f003 ffbf 	bl	8004c78 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4); // Inicio de la modulación PWM, rueda derecha
 8000cfa:	210c      	movs	r1, #12
 8000cfc:	4852      	ldr	r0, [pc, #328]	@ (8000e48 <main+0x290>)
 8000cfe:	f003 ffbb 	bl	8004c78 <HAL_TIM_PWM_Start>
	TIM3->CCR3 = v_media_izq; // rueda a velocidad media (condigurable)
 8000d02:	4b52      	ldr	r3, [pc, #328]	@ (8000e4c <main+0x294>)
 8000d04:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000d08:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4 = v_media_der; // rueda a velocidad media
 8000d0a:	4b50      	ldr	r3, [pc, #320]	@ (8000e4c <main+0x294>)
 8000d0c:	f248 42d0 	movw	r2, #34000	@ 0x84d0
 8000d10:	641a      	str	r2, [r3, #64]	@ 0x40

	HAL_GPIO_WritePin(led_verde_GPIO_Port, led_verde_Pin, GPIO_PIN_RESET);
 8000d12:	2200      	movs	r2, #0
 8000d14:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000d18:	484d      	ldr	r0, [pc, #308]	@ (8000e50 <main+0x298>)
 8000d1a:	f003 fa3b 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(led_naranja_GPIO_Port, led_naranja_Pin, GPIO_PIN_RESET);
 8000d1e:	2200      	movs	r2, #0
 8000d20:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d24:	484a      	ldr	r0, [pc, #296]	@ (8000e50 <main+0x298>)
 8000d26:	f003 fa35 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(led_rojo_GPIO_Port, led_rojo_Pin, GPIO_PIN_RESET);
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d30:	4847      	ldr	r0, [pc, #284]	@ (8000e50 <main+0x298>)
 8000d32:	f003 fa2f 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(led_azul_GPIO_Port, led_azul_Pin, GPIO_PIN_RESET);
 8000d36:	2200      	movs	r2, #0
 8000d38:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000d3c:	4844      	ldr	r0, [pc, #272]	@ (8000e50 <main+0x298>)
 8000d3e:	f003 fa29 	bl	8004194 <HAL_GPIO_WritePin>

	prueba = 6; //Aca se elige que programa queremos que se realice
 8000d42:	4b44      	ldr	r3, [pc, #272]	@ (8000e54 <main+0x29c>)
 8000d44:	2206      	movs	r2, #6
 8000d46:	701a      	strb	r2, [r3, #0]
	/* USER CODE BEGIN WHILE */
	while (1) {
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */
		switch (prueba) {
 8000d48:	4b42      	ldr	r3, [pc, #264]	@ (8000e54 <main+0x29c>)
 8000d4a:	781b      	ldrb	r3, [r3, #0]
 8000d4c:	2b0c      	cmp	r3, #12
 8000d4e:	d8fb      	bhi.n	8000d48 <main+0x190>
 8000d50:	a201      	add	r2, pc, #4	@ (adr r2, 8000d58 <main+0x1a0>)
 8000d52:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d56:	bf00      	nop
 8000d58:	08000d8d 	.word	0x08000d8d
 8000d5c:	08000d49 	.word	0x08000d49
 8000d60:	08000d49 	.word	0x08000d49
 8000d64:	08000d49 	.word	0x08000d49
 8000d68:	08000d93 	.word	0x08000d93
 8000d6c:	08000d99 	.word	0x08000d99
 8000d70:	08000d9f 	.word	0x08000d9f
 8000d74:	08000d49 	.word	0x08000d49
 8000d78:	08000d49 	.word	0x08000d49
 8000d7c:	08000d49 	.word	0x08000d49
 8000d80:	08000dc7 	.word	0x08000dc7
 8000d84:	08000e09 	.word	0x08000e09
 8000d88:	08000e29 	.word	0x08000e29

		case 0:
			prueba_avanzar();
 8000d8c:	f000 fc4c 	bl	8001628 <prueba_avanzar>
			break;
 8000d90:	e04e      	b.n	8000e30 <main+0x278>
		case 1:

			break;

		case 4:
			programa_principal();
 8000d92:	f000 fc53 	bl	800163c <programa_principal>
			break;
 8000d96:	e04b      	b.n	8000e30 <main+0x278>

		case 5:
			ajuste_automatico();
 8000d98:	f000 fb82 	bl	80014a0 <ajuste_automatico>
			break;
 8000d9c:	e048      	b.n	8000e30 <main+0x278>

		case 6:
			girando = 0;
 8000d9e:	4b2e      	ldr	r3, [pc, #184]	@ (8000e58 <main+0x2a0>)
 8000da0:	2200      	movs	r2, #0
 8000da2:	701a      	strb	r2, [r3, #0]
			sensor_izq_min = 32700;
 8000da4:	4b2d      	ldr	r3, [pc, #180]	@ (8000e5c <main+0x2a4>)
 8000da6:	f647 72bc 	movw	r2, #32700	@ 0x7fbc
 8000daa:	801a      	strh	r2, [r3, #0]
			sensor_der_min = 32700;
 8000dac:	4b2c      	ldr	r3, [pc, #176]	@ (8000e60 <main+0x2a8>)
 8000dae:	f647 72bc 	movw	r2, #32700	@ 0x7fbc
 8000db2:	801a      	strh	r2, [r3, #0]
			sensor_izq_max = 0;
 8000db4:	4b2b      	ldr	r3, [pc, #172]	@ (8000e64 <main+0x2ac>)
 8000db6:	2200      	movs	r2, #0
 8000db8:	801a      	strh	r2, [r3, #0]
			sensor_der_max = 0;
 8000dba:	4b2b      	ldr	r3, [pc, #172]	@ (8000e68 <main+0x2b0>)
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	801a      	strh	r2, [r3, #0]
			prueba = 5;
 8000dc0:	4b24      	ldr	r3, [pc, #144]	@ (8000e54 <main+0x29c>)
 8000dc2:	2205      	movs	r2, #5
 8000dc4:	701a      	strb	r2, [r3, #0]
		case 10:
			TIM3->CCR3 = 0;
 8000dc6:	4b21      	ldr	r3, [pc, #132]	@ (8000e4c <main+0x294>)
 8000dc8:	2200      	movs	r2, #0
 8000dca:	63da      	str	r2, [r3, #60]	@ 0x3c
			TIM3->CCR4 = 0;
 8000dcc:	4b1f      	ldr	r3, [pc, #124]	@ (8000e4c <main+0x294>)
 8000dce:	2200      	movs	r2, #0
 8000dd0:	641a      	str	r2, [r3, #64]	@ 0x40
			HAL_GPIO_WritePin(led_verde_GPIO_Port, led_verde_Pin, GPIO_PIN_SET);
 8000dd2:	2201      	movs	r2, #1
 8000dd4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000dd8:	481d      	ldr	r0, [pc, #116]	@ (8000e50 <main+0x298>)
 8000dda:	f003 f9db 	bl	8004194 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(led_naranja_GPIO_Port, led_naranja_Pin, GPIO_PIN_SET);
 8000dde:	2201      	movs	r2, #1
 8000de0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000de4:	481a      	ldr	r0, [pc, #104]	@ (8000e50 <main+0x298>)
 8000de6:	f003 f9d5 	bl	8004194 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(led_rojo_GPIO_Port, led_rojo_Pin, GPIO_PIN_SET);
 8000dea:	2201      	movs	r2, #1
 8000dec:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000df0:	4817      	ldr	r0, [pc, #92]	@ (8000e50 <main+0x298>)
 8000df2:	f003 f9cf 	bl	8004194 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(led_azul_GPIO_Port, led_azul_Pin, GPIO_PIN_SET);
 8000df6:	2201      	movs	r2, #1
 8000df8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000dfc:	4814      	ldr	r0, [pc, #80]	@ (8000e50 <main+0x298>)
 8000dfe:	f003 f9c9 	bl	8004194 <HAL_GPIO_WritePin>
			envio_llegada();
 8000e02:	f001 fbe3 	bl	80025cc <envio_llegada>
			
			break;
 8000e06:	e013      	b.n	8000e30 <main+0x278>
		case 11:
			eliminar_repetidos(camino_solucion,contador_casillas);
 8000e08:	4b18      	ldr	r3, [pc, #96]	@ (8000e6c <main+0x2b4>)
 8000e0a:	781b      	ldrb	r3, [r3, #0]
 8000e0c:	4619      	mov	r1, r3
 8000e0e:	4818      	ldr	r0, [pc, #96]	@ (8000e70 <main+0x2b8>)
 8000e10:	f000 fa86 	bl	8001320 <eliminar_repetidos>
			contador_casillas = contador_casillas - 1;
 8000e14:	4b15      	ldr	r3, [pc, #84]	@ (8000e6c <main+0x2b4>)
 8000e16:	781b      	ldrb	r3, [r3, #0]
 8000e18:	3b01      	subs	r3, #1
 8000e1a:	b2da      	uxtb	r2, r3
 8000e1c:	4b13      	ldr	r3, [pc, #76]	@ (8000e6c <main+0x2b4>)
 8000e1e:	701a      	strb	r2, [r3, #0]
			prueba = 12;
 8000e20:	4b0c      	ldr	r3, [pc, #48]	@ (8000e54 <main+0x29c>)
 8000e22:	220c      	movs	r2, #12
 8000e24:	701a      	strb	r2, [r3, #0]
			break;
 8000e26:	e003      	b.n	8000e30 <main+0x278>
		case 12:
			de_reversa_mami();
 8000e28:	f000 faca 	bl	80013c0 <de_reversa_mami>
			break;
 8000e2c:	bf00      	nop
 8000e2e:	e78b      	b.n	8000d48 <main+0x190>
		switch (prueba) {
 8000e30:	e78a      	b.n	8000d48 <main+0x190>
 8000e32:	bf00      	nop
 8000e34:	2000023c 	.word	0x2000023c
 8000e38:	20000080 	.word	0x20000080
 8000e3c:	200001dc 	.word	0x200001dc
 8000e40:	200001ec 	.word	0x200001ec
 8000e44:	40020400 	.word	0x40020400
 8000e48:	20000128 	.word	0x20000128
 8000e4c:	40000400 	.word	0x40000400
 8000e50:	40020c00 	.word	0x40020c00
 8000e54:	200001fd 	.word	0x200001fd
 8000e58:	20000228 	.word	0x20000228
 8000e5c:	20000002 	.word	0x20000002
 8000e60:	20000004 	.word	0x20000004
 8000e64:	20000200 	.word	0x20000200
 8000e68:	20000202 	.word	0x20000202
 8000e6c:	200001fc 	.word	0x200001fc
 8000e70:	20000208 	.word	0x20000208

08000e74 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8000e74:	b580      	push	{r7, lr}
 8000e76:	b094      	sub	sp, #80	@ 0x50
 8000e78:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8000e7a:	f107 0320 	add.w	r3, r7, #32
 8000e7e:	2230      	movs	r2, #48	@ 0x30
 8000e80:	2100      	movs	r1, #0
 8000e82:	4618      	mov	r0, r3
 8000e84:	f005 fd16 	bl	80068b4 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8000e88:	f107 030c 	add.w	r3, r7, #12
 8000e8c:	2200      	movs	r2, #0
 8000e8e:	601a      	str	r2, [r3, #0]
 8000e90:	605a      	str	r2, [r3, #4]
 8000e92:	609a      	str	r2, [r3, #8]
 8000e94:	60da      	str	r2, [r3, #12]
 8000e96:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8000e98:	2300      	movs	r3, #0
 8000e9a:	60bb      	str	r3, [r7, #8]
 8000e9c:	4b28      	ldr	r3, [pc, #160]	@ (8000f40 <SystemClock_Config+0xcc>)
 8000e9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ea0:	4a27      	ldr	r2, [pc, #156]	@ (8000f40 <SystemClock_Config+0xcc>)
 8000ea2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ea6:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ea8:	4b25      	ldr	r3, [pc, #148]	@ (8000f40 <SystemClock_Config+0xcc>)
 8000eaa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000eac:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000eb0:	60bb      	str	r3, [r7, #8]
 8000eb2:	68bb      	ldr	r3, [r7, #8]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	607b      	str	r3, [r7, #4]
 8000eb8:	4b22      	ldr	r3, [pc, #136]	@ (8000f44 <SystemClock_Config+0xd0>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	4a21      	ldr	r2, [pc, #132]	@ (8000f44 <SystemClock_Config+0xd0>)
 8000ebe:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000ec2:	6013      	str	r3, [r2, #0]
 8000ec4:	4b1f      	ldr	r3, [pc, #124]	@ (8000f44 <SystemClock_Config+0xd0>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000ecc:	607b      	str	r3, [r7, #4]
 8000ece:	687b      	ldr	r3, [r7, #4]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000ed0:	2302      	movs	r3, #2
 8000ed2:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ed4:	2301      	movs	r3, #1
 8000ed6:	62fb      	str	r3, [r7, #44]	@ 0x2c
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ed8:	2310      	movs	r3, #16
 8000eda:	633b      	str	r3, [r7, #48]	@ 0x30
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000edc:	2302      	movs	r3, #2
 8000ede:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLM = 8;
 8000ee4:	2308      	movs	r3, #8
 8000ee6:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLN = 50;
 8000ee8:	2332      	movs	r3, #50	@ 0x32
 8000eea:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8000eec:	2304      	movs	r3, #4
 8000eee:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLQ = 7;
 8000ef0:	2307      	movs	r3, #7
 8000ef2:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8000ef4:	f107 0320 	add.w	r3, r7, #32
 8000ef8:	4618      	mov	r0, r3
 8000efa:	f003 f97d 	bl	80041f8 <HAL_RCC_OscConfig>
 8000efe:	4603      	mov	r3, r0
 8000f00:	2b00      	cmp	r3, #0
 8000f02:	d001      	beq.n	8000f08 <SystemClock_Config+0x94>
		Error_Handler();
 8000f04:	f001 fbb4 	bl	8002670 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8000f08:	230f      	movs	r3, #15
 8000f0a:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f0c:	2302      	movs	r3, #2
 8000f0e:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f10:	2300      	movs	r3, #0
 8000f12:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f14:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000f18:	61bb      	str	r3, [r7, #24]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f1a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f1e:	61fb      	str	r3, [r7, #28]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 8000f20:	f107 030c 	add.w	r3, r7, #12
 8000f24:	2100      	movs	r1, #0
 8000f26:	4618      	mov	r0, r3
 8000f28:	f003 fbde 	bl	80046e8 <HAL_RCC_ClockConfig>
 8000f2c:	4603      	mov	r3, r0
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d001      	beq.n	8000f36 <SystemClock_Config+0xc2>
		Error_Handler();
 8000f32:	f001 fb9d 	bl	8002670 <Error_Handler>
	}
}
 8000f36:	bf00      	nop
 8000f38:	3750      	adds	r7, #80	@ 0x50
 8000f3a:	46bd      	mov	sp, r7
 8000f3c:	bd80      	pop	{r7, pc}
 8000f3e:	bf00      	nop
 8000f40:	40023800 	.word	0x40023800
 8000f44:	40007000 	.word	0x40007000

08000f48 <MX_ADC1_Init>:
/**
 * @brief ADC1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC1_Init(void) {
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b084      	sub	sp, #16
 8000f4c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC1_Init 0 */

	/* USER CODE END ADC1_Init 0 */

	ADC_ChannelConfTypeDef sConfig = { 0 };
 8000f4e:	463b      	mov	r3, r7
 8000f50:	2200      	movs	r2, #0
 8000f52:	601a      	str	r2, [r3, #0]
 8000f54:	605a      	str	r2, [r3, #4]
 8000f56:	609a      	str	r2, [r3, #8]
 8000f58:	60da      	str	r2, [r3, #12]

	/* USER CODE END ADC1_Init 1 */

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc1.Instance = ADC1;
 8000f5a:	4b28      	ldr	r3, [pc, #160]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f5c:	4a28      	ldr	r2, [pc, #160]	@ (8001000 <MX_ADC1_Init+0xb8>)
 8000f5e:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 8000f60:	4b26      	ldr	r3, [pc, #152]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f62:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 8000f66:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000f68:	4b24      	ldr	r3, [pc, #144]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	609a      	str	r2, [r3, #8]
	hadc1.Init.ScanConvMode = ENABLE;
 8000f6e:	4b23      	ldr	r3, [pc, #140]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f70:	2201      	movs	r2, #1
 8000f72:	611a      	str	r2, [r3, #16]
	hadc1.Init.ContinuousConvMode = ENABLE;
 8000f74:	4b21      	ldr	r3, [pc, #132]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f76:	2201      	movs	r2, #1
 8000f78:	761a      	strb	r2, [r3, #24]
	hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000f7a:	4b20      	ldr	r3, [pc, #128]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f7c:	2200      	movs	r2, #0
 8000f7e:	f883 2020 	strb.w	r2, [r3, #32]
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000f82:	4b1e      	ldr	r3, [pc, #120]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f84:	2200      	movs	r2, #0
 8000f86:	62da      	str	r2, [r3, #44]	@ 0x2c
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000f88:	4b1c      	ldr	r3, [pc, #112]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f8a:	4a1e      	ldr	r2, [pc, #120]	@ (8001004 <MX_ADC1_Init+0xbc>)
 8000f8c:	629a      	str	r2, [r3, #40]	@ 0x28
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000f8e:	4b1b      	ldr	r3, [pc, #108]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f90:	2200      	movs	r2, #0
 8000f92:	60da      	str	r2, [r3, #12]
	hadc1.Init.NbrOfConversion = 2;
 8000f94:	4b19      	ldr	r3, [pc, #100]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f96:	2202      	movs	r2, #2
 8000f98:	61da      	str	r2, [r3, #28]
	hadc1.Init.DMAContinuousRequests = ENABLE;
 8000f9a:	4b18      	ldr	r3, [pc, #96]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000f9c:	2201      	movs	r2, #1
 8000f9e:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
	hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 8000fa2:	4b16      	ldr	r3, [pc, #88]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	615a      	str	r2, [r3, #20]
	if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 8000fa8:	4814      	ldr	r0, [pc, #80]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000faa:	f001 fe29 	bl	8002c00 <HAL_ADC_Init>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d001      	beq.n	8000fb8 <MX_ADC1_Init+0x70>
		Error_Handler();
 8000fb4:	f001 fb5c 	bl	8002670 <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_9;
 8000fb8:	2309      	movs	r3, #9
 8000fba:	603b      	str	r3, [r7, #0]
	sConfig.Rank = 1;
 8000fbc:	2301      	movs	r3, #1
 8000fbe:	607b      	str	r3, [r7, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 8000fc4:	463b      	mov	r3, r7
 8000fc6:	4619      	mov	r1, r3
 8000fc8:	480c      	ldr	r0, [pc, #48]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000fca:	f001 ff7b 	bl	8002ec4 <HAL_ADC_ConfigChannel>
 8000fce:	4603      	mov	r3, r0
 8000fd0:	2b00      	cmp	r3, #0
 8000fd2:	d001      	beq.n	8000fd8 <MX_ADC1_Init+0x90>
		Error_Handler();
 8000fd4:	f001 fb4c 	bl	8002670 <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_8;
 8000fd8:	2308      	movs	r3, #8
 8000fda:	603b      	str	r3, [r7, #0]
	sConfig.Rank = 2;
 8000fdc:	2302      	movs	r3, #2
 8000fde:	607b      	str	r3, [r7, #4]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 8000fe0:	463b      	mov	r3, r7
 8000fe2:	4619      	mov	r1, r3
 8000fe4:	4805      	ldr	r0, [pc, #20]	@ (8000ffc <MX_ADC1_Init+0xb4>)
 8000fe6:	f001 ff6d 	bl	8002ec4 <HAL_ADC_ConfigChannel>
 8000fea:	4603      	mov	r3, r0
 8000fec:	2b00      	cmp	r3, #0
 8000fee:	d001      	beq.n	8000ff4 <MX_ADC1_Init+0xac>
		Error_Handler();
 8000ff0:	f001 fb3e 	bl	8002670 <Error_Handler>
	}
	/* USER CODE BEGIN ADC1_Init 2 */

	/* USER CODE END ADC1_Init 2 */

}
 8000ff4:	bf00      	nop
 8000ff6:	3710      	adds	r7, #16
 8000ff8:	46bd      	mov	sp, r7
 8000ffa:	bd80      	pop	{r7, pc}
 8000ffc:	20000080 	.word	0x20000080
 8001000:	40012000 	.word	0x40012000
 8001004:	0f000001 	.word	0x0f000001

08001008 <MX_TIM3_Init>:
/**
 * @brief TIM3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM3_Init(void) {
 8001008:	b580      	push	{r7, lr}
 800100a:	b08e      	sub	sp, #56	@ 0x38
 800100c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 800100e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001012:	2200      	movs	r2, #0
 8001014:	601a      	str	r2, [r3, #0]
 8001016:	605a      	str	r2, [r3, #4]
 8001018:	609a      	str	r2, [r3, #8]
 800101a:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800101c:	f107 0320 	add.w	r3, r7, #32
 8001020:	2200      	movs	r2, #0
 8001022:	601a      	str	r2, [r3, #0]
 8001024:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001026:	1d3b      	adds	r3, r7, #4
 8001028:	2200      	movs	r2, #0
 800102a:	601a      	str	r2, [r3, #0]
 800102c:	605a      	str	r2, [r3, #4]
 800102e:	609a      	str	r2, [r3, #8]
 8001030:	60da      	str	r2, [r3, #12]
 8001032:	611a      	str	r2, [r3, #16]
 8001034:	615a      	str	r2, [r3, #20]
 8001036:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 8001038:	4b32      	ldr	r3, [pc, #200]	@ (8001104 <MX_TIM3_Init+0xfc>)
 800103a:	4a33      	ldr	r2, [pc, #204]	@ (8001108 <MX_TIM3_Init+0x100>)
 800103c:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 0;
 800103e:	4b31      	ldr	r3, [pc, #196]	@ (8001104 <MX_TIM3_Init+0xfc>)
 8001040:	2200      	movs	r2, #0
 8001042:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001044:	4b2f      	ldr	r3, [pc, #188]	@ (8001104 <MX_TIM3_Init+0xfc>)
 8001046:	2200      	movs	r2, #0
 8001048:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 63999;
 800104a:	4b2e      	ldr	r3, [pc, #184]	@ (8001104 <MX_TIM3_Init+0xfc>)
 800104c:	f64f 12ff 	movw	r2, #63999	@ 0xf9ff
 8001050:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001052:	4b2c      	ldr	r3, [pc, #176]	@ (8001104 <MX_TIM3_Init+0xfc>)
 8001054:	2200      	movs	r2, #0
 8001056:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001058:	4b2a      	ldr	r3, [pc, #168]	@ (8001104 <MX_TIM3_Init+0xfc>)
 800105a:	2200      	movs	r2, #0
 800105c:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 800105e:	4829      	ldr	r0, [pc, #164]	@ (8001104 <MX_TIM3_Init+0xfc>)
 8001060:	f003 fd62 	bl	8004b28 <HAL_TIM_Base_Init>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d001      	beq.n	800106e <MX_TIM3_Init+0x66>
		Error_Handler();
 800106a:	f001 fb01 	bl	8002670 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800106e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001072:	62bb      	str	r3, [r7, #40]	@ 0x28
	if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 8001074:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001078:	4619      	mov	r1, r3
 800107a:	4822      	ldr	r0, [pc, #136]	@ (8001104 <MX_TIM3_Init+0xfc>)
 800107c:	f003 ff86 	bl	8004f8c <HAL_TIM_ConfigClockSource>
 8001080:	4603      	mov	r3, r0
 8001082:	2b00      	cmp	r3, #0
 8001084:	d001      	beq.n	800108a <MX_TIM3_Init+0x82>
		Error_Handler();
 8001086:	f001 faf3 	bl	8002670 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 800108a:	481e      	ldr	r0, [pc, #120]	@ (8001104 <MX_TIM3_Init+0xfc>)
 800108c:	f003 fd9b 	bl	8004bc6 <HAL_TIM_PWM_Init>
 8001090:	4603      	mov	r3, r0
 8001092:	2b00      	cmp	r3, #0
 8001094:	d001      	beq.n	800109a <MX_TIM3_Init+0x92>
		Error_Handler();
 8001096:	f001 faeb 	bl	8002670 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800109a:	2300      	movs	r3, #0
 800109c:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800109e:	2300      	movs	r3, #0
 80010a0:	627b      	str	r3, [r7, #36]	@ 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK) {
 80010a2:	f107 0320 	add.w	r3, r7, #32
 80010a6:	4619      	mov	r1, r3
 80010a8:	4816      	ldr	r0, [pc, #88]	@ (8001104 <MX_TIM3_Init+0xfc>)
 80010aa:	f004 fb4d 	bl	8005748 <HAL_TIMEx_MasterConfigSynchronization>
 80010ae:	4603      	mov	r3, r0
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d001      	beq.n	80010b8 <MX_TIM3_Init+0xb0>
		Error_Handler();
 80010b4:	f001 fadc 	bl	8002670 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80010b8:	2360      	movs	r3, #96	@ 0x60
 80010ba:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 80010bc:	2300      	movs	r3, #0
 80010be:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010c0:	2300      	movs	r3, #0
 80010c2:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80010c4:	2300      	movs	r3, #0
 80010c6:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK) {
 80010c8:	1d3b      	adds	r3, r7, #4
 80010ca:	2208      	movs	r2, #8
 80010cc:	4619      	mov	r1, r3
 80010ce:	480d      	ldr	r0, [pc, #52]	@ (8001104 <MX_TIM3_Init+0xfc>)
 80010d0:	f003 fe9a 	bl	8004e08 <HAL_TIM_PWM_ConfigChannel>
 80010d4:	4603      	mov	r3, r0
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d001      	beq.n	80010de <MX_TIM3_Init+0xd6>
		Error_Handler();
 80010da:	f001 fac9 	bl	8002670 <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK) {
 80010de:	1d3b      	adds	r3, r7, #4
 80010e0:	220c      	movs	r2, #12
 80010e2:	4619      	mov	r1, r3
 80010e4:	4807      	ldr	r0, [pc, #28]	@ (8001104 <MX_TIM3_Init+0xfc>)
 80010e6:	f003 fe8f 	bl	8004e08 <HAL_TIM_PWM_ConfigChannel>
 80010ea:	4603      	mov	r3, r0
 80010ec:	2b00      	cmp	r3, #0
 80010ee:	d001      	beq.n	80010f4 <MX_TIM3_Init+0xec>
		Error_Handler();
 80010f0:	f001 fabe 	bl	8002670 <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */
	HAL_TIM_MspPostInit(&htim3);
 80010f4:	4803      	ldr	r0, [pc, #12]	@ (8001104 <MX_TIM3_Init+0xfc>)
 80010f6:	f001 fb83 	bl	8002800 <HAL_TIM_MspPostInit>

}
 80010fa:	bf00      	nop
 80010fc:	3738      	adds	r7, #56	@ 0x38
 80010fe:	46bd      	mov	sp, r7
 8001100:	bd80      	pop	{r7, pc}
 8001102:	bf00      	nop
 8001104:	20000128 	.word	0x20000128
 8001108:	40000400 	.word	0x40000400

0800110c <MX_UART5_Init>:
/**
 * @brief UART5 Initialization Function
 * @param None
 * @retval None
 */
static void MX_UART5_Init(void) {
 800110c:	b580      	push	{r7, lr}
 800110e:	af00      	add	r7, sp, #0
	/* USER CODE END UART5_Init 0 */

	/* USER CODE BEGIN UART5_Init 1 */

	/* USER CODE END UART5_Init 1 */
	huart5.Instance = UART5;
 8001110:	4b11      	ldr	r3, [pc, #68]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001112:	4a12      	ldr	r2, [pc, #72]	@ (800115c <MX_UART5_Init+0x50>)
 8001114:	601a      	str	r2, [r3, #0]
	huart5.Init.BaudRate = 115200;
 8001116:	4b10      	ldr	r3, [pc, #64]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001118:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800111c:	605a      	str	r2, [r3, #4]
	huart5.Init.WordLength = UART_WORDLENGTH_8B;
 800111e:	4b0e      	ldr	r3, [pc, #56]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001120:	2200      	movs	r2, #0
 8001122:	609a      	str	r2, [r3, #8]
	huart5.Init.StopBits = UART_STOPBITS_1;
 8001124:	4b0c      	ldr	r3, [pc, #48]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001126:	2200      	movs	r2, #0
 8001128:	60da      	str	r2, [r3, #12]
	huart5.Init.Parity = UART_PARITY_NONE;
 800112a:	4b0b      	ldr	r3, [pc, #44]	@ (8001158 <MX_UART5_Init+0x4c>)
 800112c:	2200      	movs	r2, #0
 800112e:	611a      	str	r2, [r3, #16]
	huart5.Init.Mode = UART_MODE_TX_RX;
 8001130:	4b09      	ldr	r3, [pc, #36]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001132:	220c      	movs	r2, #12
 8001134:	615a      	str	r2, [r3, #20]
	huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001136:	4b08      	ldr	r3, [pc, #32]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001138:	2200      	movs	r2, #0
 800113a:	619a      	str	r2, [r3, #24]
	huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 800113c:	4b06      	ldr	r3, [pc, #24]	@ (8001158 <MX_UART5_Init+0x4c>)
 800113e:	2200      	movs	r2, #0
 8001140:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart5) != HAL_OK) {
 8001142:	4805      	ldr	r0, [pc, #20]	@ (8001158 <MX_UART5_Init+0x4c>)
 8001144:	f004 fb7c 	bl	8005840 <HAL_UART_Init>
 8001148:	4603      	mov	r3, r0
 800114a:	2b00      	cmp	r3, #0
 800114c:	d001      	beq.n	8001152 <MX_UART5_Init+0x46>
		Error_Handler();
 800114e:	f001 fa8f 	bl	8002670 <Error_Handler>
	}
	/* USER CODE BEGIN UART5_Init 2 */

	/* USER CODE END UART5_Init 2 */

}
 8001152:	bf00      	nop
 8001154:	bd80      	pop	{r7, pc}
 8001156:	bf00      	nop
 8001158:	20000170 	.word	0x20000170
 800115c:	40005000 	.word	0x40005000

08001160 <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 8001160:	b580      	push	{r7, lr}
 8001162:	b082      	sub	sp, #8
 8001164:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA2_CLK_ENABLE();
 8001166:	2300      	movs	r3, #0
 8001168:	607b      	str	r3, [r7, #4]
 800116a:	4b0c      	ldr	r3, [pc, #48]	@ (800119c <MX_DMA_Init+0x3c>)
 800116c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800116e:	4a0b      	ldr	r2, [pc, #44]	@ (800119c <MX_DMA_Init+0x3c>)
 8001170:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001174:	6313      	str	r3, [r2, #48]	@ 0x30
 8001176:	4b09      	ldr	r3, [pc, #36]	@ (800119c <MX_DMA_Init+0x3c>)
 8001178:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800117a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800117e:	607b      	str	r3, [r7, #4]
 8001180:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA2_Stream0_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 8001182:	2200      	movs	r2, #0
 8001184:	2100      	movs	r1, #0
 8001186:	2038      	movs	r0, #56	@ 0x38
 8001188:	f002 fa17 	bl	80035ba <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 800118c:	2038      	movs	r0, #56	@ 0x38
 800118e:	f002 fa30 	bl	80035f2 <HAL_NVIC_EnableIRQ>

}
 8001192:	bf00      	nop
 8001194:	3708      	adds	r7, #8
 8001196:	46bd      	mov	sp, r7
 8001198:	bd80      	pop	{r7, pc}
 800119a:	bf00      	nop
 800119c:	40023800 	.word	0x40023800

080011a0 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b08a      	sub	sp, #40	@ 0x28
 80011a4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 80011a6:	f107 0314 	add.w	r3, r7, #20
 80011aa:	2200      	movs	r2, #0
 80011ac:	601a      	str	r2, [r3, #0]
 80011ae:	605a      	str	r2, [r3, #4]
 80011b0:	609a      	str	r2, [r3, #8]
 80011b2:	60da      	str	r2, [r3, #12]
 80011b4:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */

	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOE_CLK_ENABLE();
 80011b6:	2300      	movs	r3, #0
 80011b8:	613b      	str	r3, [r7, #16]
 80011ba:	4b53      	ldr	r3, [pc, #332]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011be:	4a52      	ldr	r2, [pc, #328]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011c0:	f043 0310 	orr.w	r3, r3, #16
 80011c4:	6313      	str	r3, [r2, #48]	@ 0x30
 80011c6:	4b50      	ldr	r3, [pc, #320]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011ca:	f003 0310 	and.w	r3, r3, #16
 80011ce:	613b      	str	r3, [r7, #16]
 80011d0:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80011d2:	2300      	movs	r3, #0
 80011d4:	60fb      	str	r3, [r7, #12]
 80011d6:	4b4c      	ldr	r3, [pc, #304]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011da:	4a4b      	ldr	r2, [pc, #300]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011dc:	f043 0301 	orr.w	r3, r3, #1
 80011e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80011e2:	4b49      	ldr	r3, [pc, #292]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011e6:	f003 0301 	and.w	r3, r3, #1
 80011ea:	60fb      	str	r3, [r7, #12]
 80011ec:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80011ee:	2300      	movs	r3, #0
 80011f0:	60bb      	str	r3, [r7, #8]
 80011f2:	4b45      	ldr	r3, [pc, #276]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011f6:	4a44      	ldr	r2, [pc, #272]	@ (8001308 <MX_GPIO_Init+0x168>)
 80011f8:	f043 0302 	orr.w	r3, r3, #2
 80011fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80011fe:	4b42      	ldr	r3, [pc, #264]	@ (8001308 <MX_GPIO_Init+0x168>)
 8001200:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001202:	f003 0302 	and.w	r3, r3, #2
 8001206:	60bb      	str	r3, [r7, #8]
 8001208:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 800120a:	2300      	movs	r3, #0
 800120c:	607b      	str	r3, [r7, #4]
 800120e:	4b3e      	ldr	r3, [pc, #248]	@ (8001308 <MX_GPIO_Init+0x168>)
 8001210:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001212:	4a3d      	ldr	r2, [pc, #244]	@ (8001308 <MX_GPIO_Init+0x168>)
 8001214:	f043 0308 	orr.w	r3, r3, #8
 8001218:	6313      	str	r3, [r2, #48]	@ 0x30
 800121a:	4b3b      	ldr	r3, [pc, #236]	@ (8001308 <MX_GPIO_Init+0x168>)
 800121c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800121e:	f003 0308 	and.w	r3, r3, #8
 8001222:	607b      	str	r3, [r7, #4]
 8001224:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8001226:	2300      	movs	r3, #0
 8001228:	603b      	str	r3, [r7, #0]
 800122a:	4b37      	ldr	r3, [pc, #220]	@ (8001308 <MX_GPIO_Init+0x168>)
 800122c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800122e:	4a36      	ldr	r2, [pc, #216]	@ (8001308 <MX_GPIO_Init+0x168>)
 8001230:	f043 0304 	orr.w	r3, r3, #4
 8001234:	6313      	str	r3, [r2, #48]	@ 0x30
 8001236:	4b34      	ldr	r3, [pc, #208]	@ (8001308 <MX_GPIO_Init+0x168>)
 8001238:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800123a:	f003 0304 	and.w	r3, r3, #4
 800123e:	603b      	str	r3, [r7, #0]
 8001240:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 8001242:	2200      	movs	r2, #0
 8001244:	2108      	movs	r1, #8
 8001246:	4831      	ldr	r0, [pc, #196]	@ (800130c <MX_GPIO_Init+0x16c>)
 8001248:	f002 ffa4 	bl	8004194 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB,
 800124c:	2200      	movs	r2, #0
 800124e:	f44f 41f0 	mov.w	r1, #30720	@ 0x7800
 8001252:	482f      	ldr	r0, [pc, #188]	@ (8001310 <MX_GPIO_Init+0x170>)
 8001254:	f002 ff9e 	bl	8004194 <HAL_GPIO_WritePin>
	m0_izquierda_Pin | m1_izquierda_Pin | m0_derecha_Pin | m1_derecha_Pin, GPIO_PIN_RESET);

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOD,
 8001258:	2200      	movs	r2, #0
 800125a:	f44f 4170 	mov.w	r1, #61440	@ 0xf000
 800125e:	482d      	ldr	r0, [pc, #180]	@ (8001314 <MX_GPIO_Init+0x174>)
 8001260:	f002 ff98 	bl	8004194 <HAL_GPIO_WritePin>
	led_verde_Pin | led_naranja_Pin | led_rojo_Pin | led_azul_Pin, GPIO_PIN_RESET);

	/*Configure GPIO pin : CS_I2C_SPI_Pin */
	GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 8001264:	2308      	movs	r3, #8
 8001266:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001268:	2301      	movs	r3, #1
 800126a:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800126c:	2300      	movs	r3, #0
 800126e:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001270:	2300      	movs	r3, #0
 8001272:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 8001274:	f107 0314 	add.w	r3, r7, #20
 8001278:	4619      	mov	r1, r3
 800127a:	4824      	ldr	r0, [pc, #144]	@ (800130c <MX_GPIO_Init+0x16c>)
 800127c:	f002 fdd6 	bl	8003e2c <HAL_GPIO_Init>

	/*Configure GPIO pin : boton_Pin */
	GPIO_InitStruct.Pin = boton_Pin;
 8001280:	2301      	movs	r3, #1
 8001282:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001284:	2300      	movs	r3, #0
 8001286:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001288:	2300      	movs	r3, #0
 800128a:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(boton_GPIO_Port, &GPIO_InitStruct);
 800128c:	f107 0314 	add.w	r3, r7, #20
 8001290:	4619      	mov	r1, r3
 8001292:	4821      	ldr	r0, [pc, #132]	@ (8001318 <MX_GPIO_Init+0x178>)
 8001294:	f002 fdca 	bl	8003e2c <HAL_GPIO_Init>

	/*Configure GPIO pins : m0_izquierda_Pin m1_izquierda_Pin m0_derecha_Pin m1_derecha_Pin */
	GPIO_InitStruct.Pin = m0_izquierda_Pin | m1_izquierda_Pin | m0_derecha_Pin | m1_derecha_Pin;
 8001298:	f44f 43f0 	mov.w	r3, #30720	@ 0x7800
 800129c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800129e:	2301      	movs	r3, #1
 80012a0:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012a2:	2300      	movs	r3, #0
 80012a4:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012a6:	2300      	movs	r3, #0
 80012a8:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012aa:	f107 0314 	add.w	r3, r7, #20
 80012ae:	4619      	mov	r1, r3
 80012b0:	4817      	ldr	r0, [pc, #92]	@ (8001310 <MX_GPIO_Init+0x170>)
 80012b2:	f002 fdbb 	bl	8003e2c <HAL_GPIO_Init>

	/*Configure GPIO pins : led_verde_Pin led_naranja_Pin led_rojo_Pin led_azul_Pin */
	GPIO_InitStruct.Pin = led_verde_Pin | led_naranja_Pin | led_rojo_Pin | led_azul_Pin;
 80012b6:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
 80012ba:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012bc:	2301      	movs	r3, #1
 80012be:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012c0:	2300      	movs	r3, #0
 80012c2:	61fb      	str	r3, [r7, #28]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012c4:	2300      	movs	r3, #0
 80012c6:	623b      	str	r3, [r7, #32]
	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012c8:	f107 0314 	add.w	r3, r7, #20
 80012cc:	4619      	mov	r1, r3
 80012ce:	4811      	ldr	r0, [pc, #68]	@ (8001314 <MX_GPIO_Init+0x174>)
 80012d0:	f002 fdac 	bl	8003e2c <HAL_GPIO_Init>

	/*Configure GPIO pins : sensor_frontal_Pin sensor_linea_Pin */
	GPIO_InitStruct.Pin = sensor_frontal_Pin | sensor_linea_Pin;
 80012d4:	23c0      	movs	r3, #192	@ 0xc0
 80012d6:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80012d8:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80012dc:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012de:	2300      	movs	r3, #0
 80012e0:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012e2:	f107 0314 	add.w	r3, r7, #20
 80012e6:	4619      	mov	r1, r3
 80012e8:	480c      	ldr	r0, [pc, #48]	@ (800131c <MX_GPIO_Init+0x17c>)
 80012ea:	f002 fd9f 	bl	8003e2c <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80012ee:	2200      	movs	r2, #0
 80012f0:	2100      	movs	r1, #0
 80012f2:	2017      	movs	r0, #23
 80012f4:	f002 f961 	bl	80035ba <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80012f8:	2017      	movs	r0, #23
 80012fa:	f002 f97a 	bl	80035f2 <HAL_NVIC_EnableIRQ>

	/* USER CODE BEGIN MX_GPIO_Init_2 */

	/* USER CODE END MX_GPIO_Init_2 */
}
 80012fe:	bf00      	nop
 8001300:	3728      	adds	r7, #40	@ 0x28
 8001302:	46bd      	mov	sp, r7
 8001304:	bd80      	pop	{r7, pc}
 8001306:	bf00      	nop
 8001308:	40023800 	.word	0x40023800
 800130c:	40021000 	.word	0x40021000
 8001310:	40020400 	.word	0x40020400
 8001314:	40020c00 	.word	0x40020c00
 8001318:	40020000 	.word	0x40020000
 800131c:	40020800 	.word	0x40020800

08001320 <eliminar_repetidos>:

/* USER CODE BEGIN 4 */

void eliminar_repetidos(uint8_t *camino_solucion, uint8_t contador_casillas) {
 8001320:	b480      	push	{r7}
 8001322:	b087      	sub	sp, #28
 8001324:	af00      	add	r7, sp, #0
 8001326:	6078      	str	r0, [r7, #4]
 8001328:	460b      	mov	r3, r1
 800132a:	70fb      	strb	r3, [r7, #3]
    for (int i = 0; i < contador_casillas - 1; i++) {
 800132c:	2300      	movs	r3, #0
 800132e:	617b      	str	r3, [r7, #20]
 8001330:	e039      	b.n	80013a6 <eliminar_repetidos+0x86>
        for (int j = i + 1; j < contador_casillas; j++) {
 8001332:	697b      	ldr	r3, [r7, #20]
 8001334:	3301      	adds	r3, #1
 8001336:	613b      	str	r3, [r7, #16]
 8001338:	e02e      	b.n	8001398 <eliminar_repetidos+0x78>
            if (camino_solucion[i] == camino_solucion[j]) {
 800133a:	697b      	ldr	r3, [r7, #20]
 800133c:	687a      	ldr	r2, [r7, #4]
 800133e:	4413      	add	r3, r2
 8001340:	781a      	ldrb	r2, [r3, #0]
 8001342:	693b      	ldr	r3, [r7, #16]
 8001344:	6879      	ldr	r1, [r7, #4]
 8001346:	440b      	add	r3, r1
 8001348:	781b      	ldrb	r3, [r3, #0]
 800134a:	429a      	cmp	r2, r3
 800134c:	d121      	bne.n	8001392 <eliminar_repetidos+0x72>
                // Se encontró repetido: eliminar todo entre i+1 y j inclusive
                int cantidad_a_eliminar = j - i;
 800134e:	693a      	ldr	r2, [r7, #16]
 8001350:	697b      	ldr	r3, [r7, #20]
 8001352:	1ad3      	subs	r3, r2, r3
 8001354:	60bb      	str	r3, [r7, #8]

                for (int k = j; k < contador_casillas; k++) {
 8001356:	693b      	ldr	r3, [r7, #16]
 8001358:	60fb      	str	r3, [r7, #12]
 800135a:	e00d      	b.n	8001378 <eliminar_repetidos+0x58>
                    camino_solucion[k - cantidad_a_eliminar] = camino_solucion[k];
 800135c:	68fb      	ldr	r3, [r7, #12]
 800135e:	687a      	ldr	r2, [r7, #4]
 8001360:	441a      	add	r2, r3
 8001362:	68f9      	ldr	r1, [r7, #12]
 8001364:	68bb      	ldr	r3, [r7, #8]
 8001366:	1acb      	subs	r3, r1, r3
 8001368:	4619      	mov	r1, r3
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	440b      	add	r3, r1
 800136e:	7812      	ldrb	r2, [r2, #0]
 8001370:	701a      	strb	r2, [r3, #0]
                for (int k = j; k < contador_casillas; k++) {
 8001372:	68fb      	ldr	r3, [r7, #12]
 8001374:	3301      	adds	r3, #1
 8001376:	60fb      	str	r3, [r7, #12]
 8001378:	78fb      	ldrb	r3, [r7, #3]
 800137a:	68fa      	ldr	r2, [r7, #12]
 800137c:	429a      	cmp	r2, r3
 800137e:	dbed      	blt.n	800135c <eliminar_repetidos+0x3c>
                }

                contador_casillas =contador_casillas - cantidad_a_eliminar;
 8001380:	68bb      	ldr	r3, [r7, #8]
 8001382:	b2db      	uxtb	r3, r3
 8001384:	78fa      	ldrb	r2, [r7, #3]
 8001386:	1ad3      	subs	r3, r2, r3
 8001388:	70fb      	strb	r3, [r7, #3]
                i = -1;  // Reiniciar para volver a analizar todo desde el inicio
 800138a:	f04f 33ff 	mov.w	r3, #4294967295
 800138e:	617b      	str	r3, [r7, #20]
                break;
 8001390:	e006      	b.n	80013a0 <eliminar_repetidos+0x80>
        for (int j = i + 1; j < contador_casillas; j++) {
 8001392:	693b      	ldr	r3, [r7, #16]
 8001394:	3301      	adds	r3, #1
 8001396:	613b      	str	r3, [r7, #16]
 8001398:	78fb      	ldrb	r3, [r7, #3]
 800139a:	693a      	ldr	r2, [r7, #16]
 800139c:	429a      	cmp	r2, r3
 800139e:	dbcc      	blt.n	800133a <eliminar_repetidos+0x1a>
    for (int i = 0; i < contador_casillas - 1; i++) {
 80013a0:	697b      	ldr	r3, [r7, #20]
 80013a2:	3301      	adds	r3, #1
 80013a4:	617b      	str	r3, [r7, #20]
 80013a6:	78fb      	ldrb	r3, [r7, #3]
 80013a8:	3b01      	subs	r3, #1
 80013aa:	697a      	ldr	r2, [r7, #20]
 80013ac:	429a      	cmp	r2, r3
 80013ae:	dbc0      	blt.n	8001332 <eliminar_repetidos+0x12>
            }
        }
    }
	
}
 80013b0:	bf00      	nop
 80013b2:	bf00      	nop
 80013b4:	371c      	adds	r7, #28
 80013b6:	46bd      	mov	sp, r7
 80013b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013bc:	4770      	bx	lr
	...

080013c0 <de_reversa_mami>:


void de_reversa_mami(void) { //codigo para ir de la casilla 15 a la 0... muy chiche
 80013c0:	b580      	push	{r7, lr}
 80013c2:	af00      	add	r7, sp, #0

	if (solicitud_linea == 1) { //cambio de casilla
 80013c4:	4b2a      	ldr	r3, [pc, #168]	@ (8001470 <de_reversa_mami+0xb0>)
 80013c6:	781b      	ldrb	r3, [r3, #0]
 80013c8:	b2db      	uxtb	r3, r3
 80013ca:	2b01      	cmp	r3, #1
 80013cc:	d13f      	bne.n	800144e <de_reversa_mami+0x8e>
		contador_giros = 0;
 80013ce:	4b29      	ldr	r3, [pc, #164]	@ (8001474 <de_reversa_mami+0xb4>)
 80013d0:	2200      	movs	r2, #0
 80013d2:	701a      	strb	r2, [r3, #0]
		ubicacion = act_ubicacion(ubicacion, orientacion_actual);
 80013d4:	4b28      	ldr	r3, [pc, #160]	@ (8001478 <de_reversa_mami+0xb8>)
 80013d6:	781b      	ldrb	r3, [r3, #0]
 80013d8:	4a28      	ldr	r2, [pc, #160]	@ (800147c <de_reversa_mami+0xbc>)
 80013da:	7812      	ldrb	r2, [r2, #0]
 80013dc:	4611      	mov	r1, r2
 80013de:	4618      	mov	r0, r3
 80013e0:	f000 fa78 	bl	80018d4 <act_ubicacion>
 80013e4:	4603      	mov	r3, r0
 80013e6:	461a      	mov	r2, r3
 80013e8:	4b23      	ldr	r3, [pc, #140]	@ (8001478 <de_reversa_mami+0xb8>)
 80013ea:	701a      	strb	r2, [r3, #0]
		casilla_n = camino_solucion[contador_casillas]; //calcula la casilla a la que hay q ir
 80013ec:	4b24      	ldr	r3, [pc, #144]	@ (8001480 <de_reversa_mami+0xc0>)
 80013ee:	781b      	ldrb	r3, [r3, #0]
 80013f0:	461a      	mov	r2, r3
 80013f2:	4b24      	ldr	r3, [pc, #144]	@ (8001484 <de_reversa_mami+0xc4>)
 80013f4:	5c9a      	ldrb	r2, [r3, r2]
 80013f6:	4b24      	ldr	r3, [pc, #144]	@ (8001488 <de_reversa_mami+0xc8>)
 80013f8:	701a      	strb	r2, [r3, #0]
		orientacion_futura = obtener_orientacion_futura(ubicacion, casilla_n); //obtiene a la orientacion a la que hay que ir con la ubicacion actual y casilla n
 80013fa:	4b1f      	ldr	r3, [pc, #124]	@ (8001478 <de_reversa_mami+0xb8>)
 80013fc:	781b      	ldrb	r3, [r3, #0]
 80013fe:	4a22      	ldr	r2, [pc, #136]	@ (8001488 <de_reversa_mami+0xc8>)
 8001400:	7812      	ldrb	r2, [r2, #0]
 8001402:	4611      	mov	r1, r2
 8001404:	4618      	mov	r0, r3
 8001406:	f000 fa07 	bl	8001818 <obtener_orientacion_futura>
 800140a:	4603      	mov	r3, r0
 800140c:	461a      	mov	r2, r3
 800140e:	4b1f      	ldr	r3, [pc, #124]	@ (800148c <de_reversa_mami+0xcc>)
 8001410:	701a      	strb	r2, [r3, #0]
		giro = obtenerGiro(orientacion_actual, orientacion_futura); //con la orientacion futura (orientación q quiero) y la orientacion actual que giro debo realizar
 8001412:	4b1a      	ldr	r3, [pc, #104]	@ (800147c <de_reversa_mami+0xbc>)
 8001414:	781b      	ldrb	r3, [r3, #0]
 8001416:	4a1d      	ldr	r2, [pc, #116]	@ (800148c <de_reversa_mami+0xcc>)
 8001418:	7812      	ldrb	r2, [r2, #0]
 800141a:	4611      	mov	r1, r2
 800141c:	4618      	mov	r0, r3
 800141e:	f000 fa27 	bl	8001870 <obtenerGiro>
 8001422:	4603      	mov	r3, r0
 8001424:	461a      	mov	r2, r3
 8001426:	4b1a      	ldr	r3, [pc, #104]	@ (8001490 <de_reversa_mami+0xd0>)
 8001428:	701a      	strb	r2, [r3, #0]
		orientacion_actual = orientacion_futura;  //actualizo la orientación
 800142a:	4b18      	ldr	r3, [pc, #96]	@ (800148c <de_reversa_mami+0xcc>)
 800142c:	781a      	ldrb	r2, [r3, #0]
 800142e:	4b13      	ldr	r3, [pc, #76]	@ (800147c <de_reversa_mami+0xbc>)
 8001430:	701a      	strb	r2, [r3, #0]
		ejecutarGiro(giro); //giro y me voy del if
 8001432:	4b17      	ldr	r3, [pc, #92]	@ (8001490 <de_reversa_mami+0xd0>)
 8001434:	781b      	ldrb	r3, [r3, #0]
 8001436:	4618      	mov	r0, r3
 8001438:	f000 fba0 	bl	8001b7c <ejecutarGiro>
		contador_casillas = contador_casillas - 1;
 800143c:	4b10      	ldr	r3, [pc, #64]	@ (8001480 <de_reversa_mami+0xc0>)
 800143e:	781b      	ldrb	r3, [r3, #0]
 8001440:	3b01      	subs	r3, #1
 8001442:	b2da      	uxtb	r2, r3
 8001444:	4b0e      	ldr	r3, [pc, #56]	@ (8001480 <de_reversa_mami+0xc0>)
 8001446:	701a      	strb	r2, [r3, #0]
		solicitud_linea = 0;
 8001448:	4b09      	ldr	r3, [pc, #36]	@ (8001470 <de_reversa_mami+0xb0>)
 800144a:	2200      	movs	r2, #0
 800144c:	701a      	strb	r2, [r3, #0]
	}
	if (filtrado_linea == 1) {
 800144e:	4b11      	ldr	r3, [pc, #68]	@ (8001494 <de_reversa_mami+0xd4>)
 8001450:	781b      	ldrb	r3, [r3, #0]
 8001452:	b2db      	uxtb	r3, r3
 8001454:	2b01      	cmp	r3, #1
 8001456:	d101      	bne.n	800145c <de_reversa_mami+0x9c>
		filtrado_linea_funcion();
 8001458:	f001 f808 	bl	800246c <filtrado_linea_funcion>
	}
	if (ubicacion == 0)
 800145c:	4b06      	ldr	r3, [pc, #24]	@ (8001478 <de_reversa_mami+0xb8>)
 800145e:	781b      	ldrb	r3, [r3, #0]
 8001460:	2b00      	cmp	r3, #0
 8001462:	d102      	bne.n	800146a <de_reversa_mami+0xaa>
		prueba = 10;
 8001464:	4b0c      	ldr	r3, [pc, #48]	@ (8001498 <de_reversa_mami+0xd8>)
 8001466:	220a      	movs	r2, #10
 8001468:	701a      	strb	r2, [r3, #0]
}
 800146a:	bf00      	nop
 800146c:	bd80      	pop	{r7, pc}
 800146e:	bf00      	nop
 8001470:	20000238 	.word	0x20000238
 8001474:	200001fe 	.word	0x200001fe
 8001478:	200001d8 	.word	0x200001d8
 800147c:	200001d9 	.word	0x200001d9
 8001480:	200001fc 	.word	0x200001fc
 8001484:	20000208 	.word	0x20000208
 8001488:	20000000 	.word	0x20000000
 800148c:	200001da 	.word	0x200001da
 8001490:	200001db 	.word	0x200001db
 8001494:	20000239 	.word	0x20000239
 8001498:	200001fd 	.word	0x200001fd
 800149c:	00000000 	.word	0x00000000

080014a0 <ajuste_automatico>:
void ajuste_automatico(void) {
 80014a0:	b5b0      	push	{r4, r5, r7, lr}
 80014a2:	af00      	add	r7, sp, #0
	if ((sensor_der_min == 0) || (sensor_izq_min == 0)) {
 80014a4:	4b56      	ldr	r3, [pc, #344]	@ (8001600 <ajuste_automatico+0x160>)
 80014a6:	881b      	ldrh	r3, [r3, #0]
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d003      	beq.n	80014b4 <ajuste_automatico+0x14>
 80014ac:	4b55      	ldr	r3, [pc, #340]	@ (8001604 <ajuste_automatico+0x164>)
 80014ae:	881b      	ldrh	r3, [r3, #0]
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d107      	bne.n	80014c4 <ajuste_automatico+0x24>
		sensor_der_min = 32000;
 80014b4:	4b52      	ldr	r3, [pc, #328]	@ (8001600 <ajuste_automatico+0x160>)
 80014b6:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 80014ba:	801a      	strh	r2, [r3, #0]
		sensor_izq_min = 32000;
 80014bc:	4b51      	ldr	r3, [pc, #324]	@ (8001604 <ajuste_automatico+0x164>)
 80014be:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 80014c2:	801a      	strh	r2, [r3, #0]
	}
	if (sensor_der_min > sensor_der_avg) {
 80014c4:	4b4e      	ldr	r3, [pc, #312]	@ (8001600 <ajuste_automatico+0x160>)
 80014c6:	881a      	ldrh	r2, [r3, #0]
 80014c8:	4b4f      	ldr	r3, [pc, #316]	@ (8001608 <ajuste_automatico+0x168>)
 80014ca:	881b      	ldrh	r3, [r3, #0]
 80014cc:	b29b      	uxth	r3, r3
 80014ce:	429a      	cmp	r2, r3
 80014d0:	d904      	bls.n	80014dc <ajuste_automatico+0x3c>
		sensor_der_min = sensor_der_avg;
 80014d2:	4b4d      	ldr	r3, [pc, #308]	@ (8001608 <ajuste_automatico+0x168>)
 80014d4:	881b      	ldrh	r3, [r3, #0]
 80014d6:	b29a      	uxth	r2, r3
 80014d8:	4b49      	ldr	r3, [pc, #292]	@ (8001600 <ajuste_automatico+0x160>)
 80014da:	801a      	strh	r2, [r3, #0]
	}
	if (sensor_izq_min > sensor_izq_avg) {
 80014dc:	4b49      	ldr	r3, [pc, #292]	@ (8001604 <ajuste_automatico+0x164>)
 80014de:	881a      	ldrh	r2, [r3, #0]
 80014e0:	4b4a      	ldr	r3, [pc, #296]	@ (800160c <ajuste_automatico+0x16c>)
 80014e2:	881b      	ldrh	r3, [r3, #0]
 80014e4:	b29b      	uxth	r3, r3
 80014e6:	429a      	cmp	r2, r3
 80014e8:	d904      	bls.n	80014f4 <ajuste_automatico+0x54>
		sensor_izq_min = sensor_izq_avg;
 80014ea:	4b48      	ldr	r3, [pc, #288]	@ (800160c <ajuste_automatico+0x16c>)
 80014ec:	881b      	ldrh	r3, [r3, #0]
 80014ee:	b29a      	uxth	r2, r3
 80014f0:	4b44      	ldr	r3, [pc, #272]	@ (8001604 <ajuste_automatico+0x164>)
 80014f2:	801a      	strh	r2, [r3, #0]
	}
	if (sensor_der_max < sensor_der_avg) {
 80014f4:	4b46      	ldr	r3, [pc, #280]	@ (8001610 <ajuste_automatico+0x170>)
 80014f6:	881a      	ldrh	r2, [r3, #0]
 80014f8:	4b43      	ldr	r3, [pc, #268]	@ (8001608 <ajuste_automatico+0x168>)
 80014fa:	881b      	ldrh	r3, [r3, #0]
 80014fc:	b29b      	uxth	r3, r3
 80014fe:	429a      	cmp	r2, r3
 8001500:	d204      	bcs.n	800150c <ajuste_automatico+0x6c>
		sensor_der_max = sensor_der_avg;
 8001502:	4b41      	ldr	r3, [pc, #260]	@ (8001608 <ajuste_automatico+0x168>)
 8001504:	881b      	ldrh	r3, [r3, #0]
 8001506:	b29a      	uxth	r2, r3
 8001508:	4b41      	ldr	r3, [pc, #260]	@ (8001610 <ajuste_automatico+0x170>)
 800150a:	801a      	strh	r2, [r3, #0]
	}
	if (sensor_izq_max < sensor_izq_avg) {
 800150c:	4b41      	ldr	r3, [pc, #260]	@ (8001614 <ajuste_automatico+0x174>)
 800150e:	881a      	ldrh	r2, [r3, #0]
 8001510:	4b3e      	ldr	r3, [pc, #248]	@ (800160c <ajuste_automatico+0x16c>)
 8001512:	881b      	ldrh	r3, [r3, #0]
 8001514:	b29b      	uxth	r3, r3
 8001516:	429a      	cmp	r2, r3
 8001518:	d204      	bcs.n	8001524 <ajuste_automatico+0x84>
		sensor_izq_max = sensor_izq_avg;
 800151a:	4b3c      	ldr	r3, [pc, #240]	@ (800160c <ajuste_automatico+0x16c>)
 800151c:	881b      	ldrh	r3, [r3, #0]
 800151e:	b29a      	uxth	r2, r3
 8001520:	4b3c      	ldr	r3, [pc, #240]	@ (8001614 <ajuste_automatico+0x174>)
 8001522:	801a      	strh	r2, [r3, #0]
	}
	if (HAL_GPIO_ReadPin(boton_GPIO_Port, boton_Pin) == GPIO_PIN_SET) {
 8001524:	2101      	movs	r1, #1
 8001526:	483c      	ldr	r0, [pc, #240]	@ (8001618 <ajuste_automatico+0x178>)
 8001528:	f002 fe1c 	bl	8004164 <HAL_GPIO_ReadPin>
 800152c:	4603      	mov	r3, r0
 800152e:	2b01      	cmp	r3, #1
 8001530:	d15c      	bne.n	80015ec <ajuste_automatico+0x14c>
		HAL_Delay(40);
 8001532:	2028      	movs	r0, #40	@ 0x28
 8001534:	f001 fb40 	bl	8002bb8 <HAL_Delay>
		if (HAL_GPIO_ReadPin(boton_GPIO_Port, boton_Pin) == GPIO_PIN_SET) {
 8001538:	2101      	movs	r1, #1
 800153a:	4837      	ldr	r0, [pc, #220]	@ (8001618 <ajuste_automatico+0x178>)
 800153c:	f002 fe12 	bl	8004164 <HAL_GPIO_ReadPin>
 8001540:	4603      	mov	r3, r0
 8001542:	2b01      	cmp	r3, #1
 8001544:	d152      	bne.n	80015ec <ajuste_automatico+0x14c>
			margen_d = ((sensor_der_max * 0.4) + (sensor_der_min * 0.6));
 8001546:	4b32      	ldr	r3, [pc, #200]	@ (8001610 <ajuste_automatico+0x170>)
 8001548:	881b      	ldrh	r3, [r3, #0]
 800154a:	4618      	mov	r0, r3
 800154c:	f7ff f914 	bl	8000778 <__aeabi_i2d>
 8001550:	a327      	add	r3, pc, #156	@ (adr r3, 80015f0 <ajuste_automatico+0x150>)
 8001552:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001556:	f7fe fe93 	bl	8000280 <__aeabi_dmul>
 800155a:	4602      	mov	r2, r0
 800155c:	460b      	mov	r3, r1
 800155e:	4614      	mov	r4, r2
 8001560:	461d      	mov	r5, r3
 8001562:	4b27      	ldr	r3, [pc, #156]	@ (8001600 <ajuste_automatico+0x160>)
 8001564:	881b      	ldrh	r3, [r3, #0]
 8001566:	4618      	mov	r0, r3
 8001568:	f7ff f906 	bl	8000778 <__aeabi_i2d>
 800156c:	a322      	add	r3, pc, #136	@ (adr r3, 80015f8 <ajuste_automatico+0x158>)
 800156e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001572:	f7fe fe85 	bl	8000280 <__aeabi_dmul>
 8001576:	4602      	mov	r2, r0
 8001578:	460b      	mov	r3, r1
 800157a:	4620      	mov	r0, r4
 800157c:	4629      	mov	r1, r5
 800157e:	f7fe ffaf 	bl	80004e0 <__adddf3>
 8001582:	4602      	mov	r2, r0
 8001584:	460b      	mov	r3, r1
 8001586:	4610      	mov	r0, r2
 8001588:	4619      	mov	r1, r3
 800158a:	f7ff f95f 	bl	800084c <__aeabi_d2uiz>
 800158e:	4603      	mov	r3, r0
 8001590:	b29a      	uxth	r2, r3
 8001592:	4b22      	ldr	r3, [pc, #136]	@ (800161c <ajuste_automatico+0x17c>)
 8001594:	801a      	strh	r2, [r3, #0]
			margen_i = ((sensor_izq_max * 0.4) + (sensor_izq_min * 0.6));
 8001596:	4b1f      	ldr	r3, [pc, #124]	@ (8001614 <ajuste_automatico+0x174>)
 8001598:	881b      	ldrh	r3, [r3, #0]
 800159a:	4618      	mov	r0, r3
 800159c:	f7ff f8ec 	bl	8000778 <__aeabi_i2d>
 80015a0:	a313      	add	r3, pc, #76	@ (adr r3, 80015f0 <ajuste_automatico+0x150>)
 80015a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015a6:	f7fe fe6b 	bl	8000280 <__aeabi_dmul>
 80015aa:	4602      	mov	r2, r0
 80015ac:	460b      	mov	r3, r1
 80015ae:	4614      	mov	r4, r2
 80015b0:	461d      	mov	r5, r3
 80015b2:	4b14      	ldr	r3, [pc, #80]	@ (8001604 <ajuste_automatico+0x164>)
 80015b4:	881b      	ldrh	r3, [r3, #0]
 80015b6:	4618      	mov	r0, r3
 80015b8:	f7ff f8de 	bl	8000778 <__aeabi_i2d>
 80015bc:	a30e      	add	r3, pc, #56	@ (adr r3, 80015f8 <ajuste_automatico+0x158>)
 80015be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015c2:	f7fe fe5d 	bl	8000280 <__aeabi_dmul>
 80015c6:	4602      	mov	r2, r0
 80015c8:	460b      	mov	r3, r1
 80015ca:	4620      	mov	r0, r4
 80015cc:	4629      	mov	r1, r5
 80015ce:	f7fe ff87 	bl	80004e0 <__adddf3>
 80015d2:	4602      	mov	r2, r0
 80015d4:	460b      	mov	r3, r1
 80015d6:	4610      	mov	r0, r2
 80015d8:	4619      	mov	r1, r3
 80015da:	f7ff f937 	bl	800084c <__aeabi_d2uiz>
 80015de:	4603      	mov	r3, r0
 80015e0:	b29a      	uxth	r2, r3
 80015e2:	4b0f      	ldr	r3, [pc, #60]	@ (8001620 <ajuste_automatico+0x180>)
 80015e4:	801a      	strh	r2, [r3, #0]
			prueba = 4;
 80015e6:	4b0f      	ldr	r3, [pc, #60]	@ (8001624 <ajuste_automatico+0x184>)
 80015e8:	2204      	movs	r2, #4
 80015ea:	701a      	strb	r2, [r3, #0]
		}
	}
}
 80015ec:	bf00      	nop
 80015ee:	bdb0      	pop	{r4, r5, r7, pc}
 80015f0:	9999999a 	.word	0x9999999a
 80015f4:	3fd99999 	.word	0x3fd99999
 80015f8:	33333333 	.word	0x33333333
 80015fc:	3fe33333 	.word	0x3fe33333
 8001600:	20000004 	.word	0x20000004
 8001604:	20000002 	.word	0x20000002
 8001608:	200002be 	.word	0x200002be
 800160c:	200002bc 	.word	0x200002bc
 8001610:	20000202 	.word	0x20000202
 8001614:	20000200 	.word	0x20000200
 8001618:	40020000 	.word	0x40020000
 800161c:	20000206 	.word	0x20000206
 8001620:	20000204 	.word	0x20000204
 8001624:	200001fd 	.word	0x200001fd

08001628 <prueba_avanzar>:

void prueba_avanzar(void) {
 8001628:	b580      	push	{r7, lr}
 800162a:	af00      	add	r7, sp, #0
//	correccion_avanzar(); //codigo sencillo para configurar los margenes del ADC y verificacion de las ruedas y pilas
	ejecutarGiro(izquierda);
 800162c:	2001      	movs	r0, #1
 800162e:	f000 faa5 	bl	8001b7c <ejecutarGiro>
	ejecutarGiro(adelante);
 8001632:	2000      	movs	r0, #0
 8001634:	f000 faa2 	bl	8001b7c <ejecutarGiro>

	while (1)
 8001638:	bf00      	nop
 800163a:	e7fd      	b.n	8001638 <prueba_avanzar+0x10>

0800163c <programa_principal>:
		;
}

void programa_principal(void) {
 800163c:	b580      	push	{r7, lr}
 800163e:	af00      	add	r7, sp, #0
	correccion_avanzar();
 8001640:	f000 f9c8 	bl	80019d4 <correccion_avanzar>
	girando = 0;
 8001644:	4b64      	ldr	r3, [pc, #400]	@ (80017d8 <programa_principal+0x19c>)
 8001646:	2200      	movs	r2, #0
 8001648:	701a      	strb	r2, [r3, #0]
	if (solicitud_linea == 1) { //cambio de casilla
 800164a:	4b64      	ldr	r3, [pc, #400]	@ (80017dc <programa_principal+0x1a0>)
 800164c:	781b      	ldrb	r3, [r3, #0]
 800164e:	b2db      	uxtb	r3, r3
 8001650:	2b01      	cmp	r3, #1
 8001652:	d15b      	bne.n	800170c <programa_principal+0xd0>
		contador_giros = 0;
 8001654:	4b62      	ldr	r3, [pc, #392]	@ (80017e0 <programa_principal+0x1a4>)
 8001656:	2200      	movs	r2, #0
 8001658:	701a      	strb	r2, [r3, #0]
		contador_casillas = contador_casillas + 1;
 800165a:	4b62      	ldr	r3, [pc, #392]	@ (80017e4 <programa_principal+0x1a8>)
 800165c:	781b      	ldrb	r3, [r3, #0]
 800165e:	3301      	adds	r3, #1
 8001660:	b2da      	uxtb	r2, r3
 8001662:	4b60      	ldr	r3, [pc, #384]	@ (80017e4 <programa_principal+0x1a8>)
 8001664:	701a      	strb	r2, [r3, #0]
		ubicacion = act_ubicacion(ubicacion, orientacion_actual);
 8001666:	4b60      	ldr	r3, [pc, #384]	@ (80017e8 <programa_principal+0x1ac>)
 8001668:	781b      	ldrb	r3, [r3, #0]
 800166a:	4a60      	ldr	r2, [pc, #384]	@ (80017ec <programa_principal+0x1b0>)
 800166c:	7812      	ldrb	r2, [r2, #0]
 800166e:	4611      	mov	r1, r2
 8001670:	4618      	mov	r0, r3
 8001672:	f000 f92f 	bl	80018d4 <act_ubicacion>
 8001676:	4603      	mov	r3, r0
 8001678:	461a      	mov	r2, r3
 800167a:	4b5b      	ldr	r3, [pc, #364]	@ (80017e8 <programa_principal+0x1ac>)
 800167c:	701a      	strb	r2, [r3, #0]
		envio_ubicacion(ubicacion, casilla_n);
 800167e:	4b5a      	ldr	r3, [pc, #360]	@ (80017e8 <programa_principal+0x1ac>)
 8001680:	781b      	ldrb	r3, [r3, #0]
 8001682:	4a5b      	ldr	r2, [pc, #364]	@ (80017f0 <programa_principal+0x1b4>)
 8001684:	7812      	ldrb	r2, [r2, #0]
 8001686:	4611      	mov	r1, r2
 8001688:	4618      	mov	r0, r3
 800168a:	f000 ff4f 	bl	800252c <envio_ubicacion>
		casilla_n = calculo_minimo_peso(peso, pared, ubicacion, orientacion_actual); //calcula la casilla a la que hay q ir
 800168e:	4b56      	ldr	r3, [pc, #344]	@ (80017e8 <programa_principal+0x1ac>)
 8001690:	781a      	ldrb	r2, [r3, #0]
 8001692:	4b56      	ldr	r3, [pc, #344]	@ (80017ec <programa_principal+0x1b0>)
 8001694:	781b      	ldrb	r3, [r3, #0]
 8001696:	4957      	ldr	r1, [pc, #348]	@ (80017f4 <programa_principal+0x1b8>)
 8001698:	4857      	ldr	r0, [pc, #348]	@ (80017f8 <programa_principal+0x1bc>)
 800169a:	f000 fc59 	bl	8001f50 <calculo_minimo_peso>
 800169e:	4603      	mov	r3, r0
 80016a0:	461a      	mov	r2, r3
 80016a2:	4b53      	ldr	r3, [pc, #332]	@ (80017f0 <programa_principal+0x1b4>)
 80016a4:	701a      	strb	r2, [r3, #0]
		envio_casilla_n(casilla_n);
 80016a6:	4b52      	ldr	r3, [pc, #328]	@ (80017f0 <programa_principal+0x1b4>)
 80016a8:	781b      	ldrb	r3, [r3, #0]
 80016aa:	4618      	mov	r0, r3
 80016ac:	f000 ffb0 	bl	8002610 <envio_casilla_n>
		orientacion_futura = obtener_orientacion_futura(ubicacion, casilla_n); //obtiene a la orientacion a la que hay que ir con la ubicacion actual y casilla n
 80016b0:	4b4d      	ldr	r3, [pc, #308]	@ (80017e8 <programa_principal+0x1ac>)
 80016b2:	781b      	ldrb	r3, [r3, #0]
 80016b4:	4a4e      	ldr	r2, [pc, #312]	@ (80017f0 <programa_principal+0x1b4>)
 80016b6:	7812      	ldrb	r2, [r2, #0]
 80016b8:	4611      	mov	r1, r2
 80016ba:	4618      	mov	r0, r3
 80016bc:	f000 f8ac 	bl	8001818 <obtener_orientacion_futura>
 80016c0:	4603      	mov	r3, r0
 80016c2:	461a      	mov	r2, r3
 80016c4:	4b4d      	ldr	r3, [pc, #308]	@ (80017fc <programa_principal+0x1c0>)
 80016c6:	701a      	strb	r2, [r3, #0]
		giro = obtenerGiro(orientacion_actual, orientacion_futura); //con la orientacion futura (orientación q quiero) y la orientacion actual que giro debo realizar
 80016c8:	4b48      	ldr	r3, [pc, #288]	@ (80017ec <programa_principal+0x1b0>)
 80016ca:	781b      	ldrb	r3, [r3, #0]
 80016cc:	4a4b      	ldr	r2, [pc, #300]	@ (80017fc <programa_principal+0x1c0>)
 80016ce:	7812      	ldrb	r2, [r2, #0]
 80016d0:	4611      	mov	r1, r2
 80016d2:	4618      	mov	r0, r3
 80016d4:	f000 f8cc 	bl	8001870 <obtenerGiro>
 80016d8:	4603      	mov	r3, r0
 80016da:	461a      	mov	r2, r3
 80016dc:	4b48      	ldr	r3, [pc, #288]	@ (8001800 <programa_principal+0x1c4>)
 80016de:	701a      	strb	r2, [r3, #0]
		orientacion_actual = orientacion_futura;  //actualizo la orientación
 80016e0:	4b46      	ldr	r3, [pc, #280]	@ (80017fc <programa_principal+0x1c0>)
 80016e2:	781a      	ldrb	r2, [r3, #0]
 80016e4:	4b41      	ldr	r3, [pc, #260]	@ (80017ec <programa_principal+0x1b0>)
 80016e6:	701a      	strb	r2, [r3, #0]
		ejecutarGiro(giro); //giro y me voy del if
 80016e8:	4b45      	ldr	r3, [pc, #276]	@ (8001800 <programa_principal+0x1c4>)
 80016ea:	781b      	ldrb	r3, [r3, #0]
 80016ec:	4618      	mov	r0, r3
 80016ee:	f000 fa45 	bl	8001b7c <ejecutarGiro>
		girando = 0;
 80016f2:	4b39      	ldr	r3, [pc, #228]	@ (80017d8 <programa_principal+0x19c>)
 80016f4:	2200      	movs	r2, #0
 80016f6:	701a      	strb	r2, [r3, #0]
		camino_solucion[contador_casillas] = ubicacion;
 80016f8:	4b3a      	ldr	r3, [pc, #232]	@ (80017e4 <programa_principal+0x1a8>)
 80016fa:	781b      	ldrb	r3, [r3, #0]
 80016fc:	461a      	mov	r2, r3
 80016fe:	4b3a      	ldr	r3, [pc, #232]	@ (80017e8 <programa_principal+0x1ac>)
 8001700:	7819      	ldrb	r1, [r3, #0]
 8001702:	4b40      	ldr	r3, [pc, #256]	@ (8001804 <programa_principal+0x1c8>)
 8001704:	5499      	strb	r1, [r3, r2]
		solicitud_linea = 0;
 8001706:	4b35      	ldr	r3, [pc, #212]	@ (80017dc <programa_principal+0x1a0>)
 8001708:	2200      	movs	r2, #0
 800170a:	701a      	strb	r2, [r3, #0]
	}
	if (solicitud_pared == 1) {
 800170c:	4b3e      	ldr	r3, [pc, #248]	@ (8001808 <programa_principal+0x1cc>)
 800170e:	781b      	ldrb	r3, [r3, #0]
 8001710:	b2db      	uxtb	r3, r3
 8001712:	2b01      	cmp	r3, #1
 8001714:	d148      	bne.n	80017a8 <programa_principal+0x16c>
		girando = 1;
 8001716:	4b30      	ldr	r3, [pc, #192]	@ (80017d8 <programa_principal+0x19c>)
 8001718:	2201      	movs	r2, #1
 800171a:	701a      	strb	r2, [r3, #0]
		envio_pared();
 800171c:	f000 ff36 	bl	800258c <envio_pared>
		act_pared(pared, ubicacion, orientacion_actual); //primero actualiza la pared encontrada
 8001720:	4b31      	ldr	r3, [pc, #196]	@ (80017e8 <programa_principal+0x1ac>)
 8001722:	781b      	ldrb	r3, [r3, #0]
 8001724:	4a31      	ldr	r2, [pc, #196]	@ (80017ec <programa_principal+0x1b0>)
 8001726:	7812      	ldrb	r2, [r2, #0]
 8001728:	4619      	mov	r1, r3
 800172a:	4832      	ldr	r0, [pc, #200]	@ (80017f4 <programa_principal+0x1b8>)
 800172c:	f000 fb1e 	bl	8001d6c <act_pared>
		act_pesos(pared, peso);  //luego actualiza el peso
 8001730:	4931      	ldr	r1, [pc, #196]	@ (80017f8 <programa_principal+0x1bc>)
 8001732:	4830      	ldr	r0, [pc, #192]	@ (80017f4 <programa_principal+0x1b8>)
 8001734:	f000 fb6c 	bl	8001e10 <act_pesos>
		casilla_n = calculo_minimo_peso(peso, pared, ubicacion, orientacion_actual); //calcula la casilla a la que hay q ir
 8001738:	4b2b      	ldr	r3, [pc, #172]	@ (80017e8 <programa_principal+0x1ac>)
 800173a:	781a      	ldrb	r2, [r3, #0]
 800173c:	4b2b      	ldr	r3, [pc, #172]	@ (80017ec <programa_principal+0x1b0>)
 800173e:	781b      	ldrb	r3, [r3, #0]
 8001740:	492c      	ldr	r1, [pc, #176]	@ (80017f4 <programa_principal+0x1b8>)
 8001742:	482d      	ldr	r0, [pc, #180]	@ (80017f8 <programa_principal+0x1bc>)
 8001744:	f000 fc04 	bl	8001f50 <calculo_minimo_peso>
 8001748:	4603      	mov	r3, r0
 800174a:	461a      	mov	r2, r3
 800174c:	4b28      	ldr	r3, [pc, #160]	@ (80017f0 <programa_principal+0x1b4>)
 800174e:	701a      	strb	r2, [r3, #0]
		envio_casilla_n(casilla_n);
 8001750:	4b27      	ldr	r3, [pc, #156]	@ (80017f0 <programa_principal+0x1b4>)
 8001752:	781b      	ldrb	r3, [r3, #0]
 8001754:	4618      	mov	r0, r3
 8001756:	f000 ff5b 	bl	8002610 <envio_casilla_n>
		orientacion_futura = obtener_orientacion_futura(ubicacion, casilla_n); //obtiene a la orientacion a la que hay que ir con la ubicacion actual y casilla n
 800175a:	4b23      	ldr	r3, [pc, #140]	@ (80017e8 <programa_principal+0x1ac>)
 800175c:	781b      	ldrb	r3, [r3, #0]
 800175e:	4a24      	ldr	r2, [pc, #144]	@ (80017f0 <programa_principal+0x1b4>)
 8001760:	7812      	ldrb	r2, [r2, #0]
 8001762:	4611      	mov	r1, r2
 8001764:	4618      	mov	r0, r3
 8001766:	f000 f857 	bl	8001818 <obtener_orientacion_futura>
 800176a:	4603      	mov	r3, r0
 800176c:	461a      	mov	r2, r3
 800176e:	4b23      	ldr	r3, [pc, #140]	@ (80017fc <programa_principal+0x1c0>)
 8001770:	701a      	strb	r2, [r3, #0]
		giro = obtenerGiro(orientacion_actual, orientacion_futura); //con la orientacion futura (orientación q quiero) y la orientacion actual que giro debo realizar
 8001772:	4b1e      	ldr	r3, [pc, #120]	@ (80017ec <programa_principal+0x1b0>)
 8001774:	781b      	ldrb	r3, [r3, #0]
 8001776:	4a21      	ldr	r2, [pc, #132]	@ (80017fc <programa_principal+0x1c0>)
 8001778:	7812      	ldrb	r2, [r2, #0]
 800177a:	4611      	mov	r1, r2
 800177c:	4618      	mov	r0, r3
 800177e:	f000 f877 	bl	8001870 <obtenerGiro>
 8001782:	4603      	mov	r3, r0
 8001784:	461a      	mov	r2, r3
 8001786:	4b1e      	ldr	r3, [pc, #120]	@ (8001800 <programa_principal+0x1c4>)
 8001788:	701a      	strb	r2, [r3, #0]
		orientacion_actual = orientacion_futura;  //actualizo la orientación
 800178a:	4b1c      	ldr	r3, [pc, #112]	@ (80017fc <programa_principal+0x1c0>)
 800178c:	781a      	ldrb	r2, [r3, #0]
 800178e:	4b17      	ldr	r3, [pc, #92]	@ (80017ec <programa_principal+0x1b0>)
 8001790:	701a      	strb	r2, [r3, #0]
		ejecutarGiro(giro); //giro y me voy del if
 8001792:	4b1b      	ldr	r3, [pc, #108]	@ (8001800 <programa_principal+0x1c4>)
 8001794:	781b      	ldrb	r3, [r3, #0]
 8001796:	4618      	mov	r0, r3
 8001798:	f000 f9f0 	bl	8001b7c <ejecutarGiro>
		girando = 0;
 800179c:	4b0e      	ldr	r3, [pc, #56]	@ (80017d8 <programa_principal+0x19c>)
 800179e:	2200      	movs	r2, #0
 80017a0:	701a      	strb	r2, [r3, #0]
		solicitud_pared = 0;
 80017a2:	4b19      	ldr	r3, [pc, #100]	@ (8001808 <programa_principal+0x1cc>)
 80017a4:	2200      	movs	r2, #0
 80017a6:	701a      	strb	r2, [r3, #0]
	}
	if (filtrado_pared == 1) {
 80017a8:	4b18      	ldr	r3, [pc, #96]	@ (800180c <programa_principal+0x1d0>)
 80017aa:	781b      	ldrb	r3, [r3, #0]
 80017ac:	b2db      	uxtb	r3, r3
 80017ae:	2b01      	cmp	r3, #1
 80017b0:	d101      	bne.n	80017b6 <programa_principal+0x17a>
		filtrado_pared_funcion();
 80017b2:	f000 fe33 	bl	800241c <filtrado_pared_funcion>
	}
	if (filtrado_linea == 1) {
 80017b6:	4b16      	ldr	r3, [pc, #88]	@ (8001810 <programa_principal+0x1d4>)
 80017b8:	781b      	ldrb	r3, [r3, #0]
 80017ba:	b2db      	uxtb	r3, r3
 80017bc:	2b01      	cmp	r3, #1
 80017be:	d101      	bne.n	80017c4 <programa_principal+0x188>
		filtrado_linea_funcion();
 80017c0:	f000 fe54 	bl	800246c <filtrado_linea_funcion>
	}
	if (ubicacion == 15) {
 80017c4:	4b08      	ldr	r3, [pc, #32]	@ (80017e8 <programa_principal+0x1ac>)
 80017c6:	781b      	ldrb	r3, [r3, #0]
 80017c8:	2b0f      	cmp	r3, #15
 80017ca:	d102      	bne.n	80017d2 <programa_principal+0x196>
		prueba = 10;
 80017cc:	4b11      	ldr	r3, [pc, #68]	@ (8001814 <programa_principal+0x1d8>)
 80017ce:	220a      	movs	r2, #10
 80017d0:	701a      	strb	r2, [r3, #0]
	}
}
 80017d2:	bf00      	nop
 80017d4:	bd80      	pop	{r7, pc}
 80017d6:	bf00      	nop
 80017d8:	20000228 	.word	0x20000228
 80017dc:	20000238 	.word	0x20000238
 80017e0:	200001fe 	.word	0x200001fe
 80017e4:	200001fc 	.word	0x200001fc
 80017e8:	200001d8 	.word	0x200001d8
 80017ec:	200001d9 	.word	0x200001d9
 80017f0:	20000000 	.word	0x20000000
 80017f4:	200001ec 	.word	0x200001ec
 80017f8:	200001dc 	.word	0x200001dc
 80017fc:	200001da 	.word	0x200001da
 8001800:	200001db 	.word	0x200001db
 8001804:	20000208 	.word	0x20000208
 8001808:	20000230 	.word	0x20000230
 800180c:	20000231 	.word	0x20000231
 8001810:	20000239 	.word	0x20000239
 8001814:	200001fd 	.word	0x200001fd

08001818 <obtener_orientacion_futura>:
	TIM3->CCR4 = v_media_der; // rueda a velocidad media
	while (1)
		;
}

uint8_t obtener_orientacion_futura(uint8_t ubicacion, uint8_t casilla_n) { // Devuelve la dirección hacia donde hay que ir según la diferencia entre casillas
 8001818:	b480      	push	{r7}
 800181a:	b083      	sub	sp, #12
 800181c:	af00      	add	r7, sp, #0
 800181e:	4603      	mov	r3, r0
 8001820:	460a      	mov	r2, r1
 8001822:	71fb      	strb	r3, [r7, #7]
 8001824:	4613      	mov	r3, r2
 8001826:	71bb      	strb	r3, [r7, #6]

	if (casilla_n == ubicacion + 1)
 8001828:	79ba      	ldrb	r2, [r7, #6]
 800182a:	79fb      	ldrb	r3, [r7, #7]
 800182c:	3301      	adds	r3, #1
 800182e:	429a      	cmp	r2, r3
 8001830:	d101      	bne.n	8001836 <obtener_orientacion_futura+0x1e>
		return oeste;
 8001832:	2303      	movs	r3, #3
 8001834:	e015      	b.n	8001862 <obtener_orientacion_futura+0x4a>
	if (casilla_n == ubicacion - 1)
 8001836:	79ba      	ldrb	r2, [r7, #6]
 8001838:	79fb      	ldrb	r3, [r7, #7]
 800183a:	3b01      	subs	r3, #1
 800183c:	429a      	cmp	r2, r3
 800183e:	d101      	bne.n	8001844 <obtener_orientacion_futura+0x2c>
		return este;
 8001840:	2301      	movs	r3, #1
 8001842:	e00e      	b.n	8001862 <obtener_orientacion_futura+0x4a>
	if (casilla_n == ubicacion + 4)
 8001844:	79ba      	ldrb	r2, [r7, #6]
 8001846:	79fb      	ldrb	r3, [r7, #7]
 8001848:	3304      	adds	r3, #4
 800184a:	429a      	cmp	r2, r3
 800184c:	d101      	bne.n	8001852 <obtener_orientacion_futura+0x3a>
		return norte;
 800184e:	2300      	movs	r3, #0
 8001850:	e007      	b.n	8001862 <obtener_orientacion_futura+0x4a>
	if (casilla_n == ubicacion - 4)
 8001852:	79ba      	ldrb	r2, [r7, #6]
 8001854:	79fb      	ldrb	r3, [r7, #7]
 8001856:	3b04      	subs	r3, #4
 8001858:	429a      	cmp	r2, r3
 800185a:	d101      	bne.n	8001860 <obtener_orientacion_futura+0x48>
		return sur;
 800185c:	2302      	movs	r3, #2
 800185e:	e000      	b.n	8001862 <obtener_orientacion_futura+0x4a>

	return 100; // Movimiento no válido (no adyacente o fuera del tablero)
 8001860:	2364      	movs	r3, #100	@ 0x64
}
 8001862:	4618      	mov	r0, r3
 8001864:	370c      	adds	r7, #12
 8001866:	46bd      	mov	sp, r7
 8001868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800186c:	4770      	bx	lr
	...

08001870 <obtenerGiro>:

uint8_t obtenerGiro(uint8_t orientacion_actual, uint8_t orientacion_futura) { // Calcula el giro que debe hacer el autito para pasar de su orientación actual a la deseada
 8001870:	b480      	push	{r7}
 8001872:	b085      	sub	sp, #20
 8001874:	af00      	add	r7, sp, #0
 8001876:	4603      	mov	r3, r0
 8001878:	460a      	mov	r2, r1
 800187a:	71fb      	strb	r3, [r7, #7]
 800187c:	4613      	mov	r3, r2
 800187e:	71bb      	strb	r3, [r7, #6]
	int diferencia = (orientacion_futura - orientacion_actual + 4) % 4; //el %4 se queda con el resto de la divsion por 4
 8001880:	79ba      	ldrb	r2, [r7, #6]
 8001882:	79fb      	ldrb	r3, [r7, #7]
 8001884:	1ad3      	subs	r3, r2, r3
 8001886:	3304      	adds	r3, #4
 8001888:	425a      	negs	r2, r3
 800188a:	f003 0303 	and.w	r3, r3, #3
 800188e:	f002 0203 	and.w	r2, r2, #3
 8001892:	bf58      	it	pl
 8001894:	4253      	negpl	r3, r2
 8001896:	60fb      	str	r3, [r7, #12]

	switch (diferencia) {
 8001898:	68fb      	ldr	r3, [r7, #12]
 800189a:	2b03      	cmp	r3, #3
 800189c:	d812      	bhi.n	80018c4 <obtenerGiro+0x54>
 800189e:	a201      	add	r2, pc, #4	@ (adr r2, 80018a4 <obtenerGiro+0x34>)
 80018a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018a4:	080018b5 	.word	0x080018b5
 80018a8:	080018b9 	.word	0x080018b9
 80018ac:	080018bd 	.word	0x080018bd
 80018b0:	080018c1 	.word	0x080018c1
	case 0:
		return adelante;
 80018b4:	2300      	movs	r3, #0
 80018b6:	e006      	b.n	80018c6 <obtenerGiro+0x56>
	case 1:
		return derecha;
 80018b8:	2302      	movs	r3, #2
 80018ba:	e004      	b.n	80018c6 <obtenerGiro+0x56>
	case 2:
		return giro_180;
 80018bc:	2303      	movs	r3, #3
 80018be:	e002      	b.n	80018c6 <obtenerGiro+0x56>
	case 3:
		return izquierda;
 80018c0:	2301      	movs	r3, #1
 80018c2:	e000      	b.n	80018c6 <obtenerGiro+0x56>
	default:
		return 100; // Error
 80018c4:	2364      	movs	r3, #100	@ 0x64
	}
}
 80018c6:	4618      	mov	r0, r3
 80018c8:	3714      	adds	r7, #20
 80018ca:	46bd      	mov	sp, r7
 80018cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d0:	4770      	bx	lr
 80018d2:	bf00      	nop

080018d4 <act_ubicacion>:
uint8_t act_ubicacion(uint8_t ubicacion, uint8_t orientacion_actual) {
 80018d4:	b480      	push	{r7}
 80018d6:	b083      	sub	sp, #12
 80018d8:	af00      	add	r7, sp, #0
 80018da:	4603      	mov	r3, r0
 80018dc:	460a      	mov	r2, r1
 80018de:	71fb      	strb	r3, [r7, #7]
 80018e0:	4613      	mov	r3, r2
 80018e2:	71bb      	strb	r3, [r7, #6]

	switch (orientacion_actual) {
 80018e4:	79bb      	ldrb	r3, [r7, #6]
 80018e6:	2b03      	cmp	r3, #3
 80018e8:	d81a      	bhi.n	8001920 <act_ubicacion+0x4c>
 80018ea:	a201      	add	r2, pc, #4	@ (adr r2, 80018f0 <act_ubicacion+0x1c>)
 80018ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018f0:	08001901 	.word	0x08001901
 80018f4:	08001909 	.word	0x08001909
 80018f8:	08001911 	.word	0x08001911
 80018fc:	08001919 	.word	0x08001919
	case 0:
		return ubicacion + 4;
 8001900:	79fb      	ldrb	r3, [r7, #7]
 8001902:	3304      	adds	r3, #4
 8001904:	b2db      	uxtb	r3, r3
 8001906:	e00c      	b.n	8001922 <act_ubicacion+0x4e>
	case 1:
		return ubicacion - 1;
 8001908:	79fb      	ldrb	r3, [r7, #7]
 800190a:	3b01      	subs	r3, #1
 800190c:	b2db      	uxtb	r3, r3
 800190e:	e008      	b.n	8001922 <act_ubicacion+0x4e>
	case 2:
		return ubicacion - 4;
 8001910:	79fb      	ldrb	r3, [r7, #7]
 8001912:	3b04      	subs	r3, #4
 8001914:	b2db      	uxtb	r3, r3
 8001916:	e004      	b.n	8001922 <act_ubicacion+0x4e>
	case 3:
		return ubicacion + 1;
 8001918:	79fb      	ldrb	r3, [r7, #7]
 800191a:	3301      	adds	r3, #1
 800191c:	b2db      	uxtb	r3, r3
 800191e:	e000      	b.n	8001922 <act_ubicacion+0x4e>
	default:
		return 100; // Error
 8001920:	2364      	movs	r3, #100	@ 0x64
	}
}
 8001922:	4618      	mov	r0, r3
 8001924:	370c      	adds	r7, #12
 8001926:	46bd      	mov	sp, r7
 8001928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800192c:	4770      	bx	lr
 800192e:	bf00      	nop

08001930 <promediar>:

void promediar(uint16_t *buffer) {
 8001930:	b480      	push	{r7}
 8001932:	b087      	sub	sp, #28
 8001934:	af00      	add	r7, sp, #0
 8001936:	6078      	str	r0, [r7, #4]
	uint32_t sensor_izq_sum = 0, sensor_der_sum = 0; // Inicializamos variables para acumular la suma de las muestras
 8001938:	2300      	movs	r3, #0
 800193a:	617b      	str	r3, [r7, #20]
 800193c:	2300      	movs	r3, #0
 800193e:	613b      	str	r3, [r7, #16]
	for (int i = 0; i < 16; ++i) { // Ralizamos la suma incrementando el puntero a las muestras
 8001940:	2300      	movs	r3, #0
 8001942:	60fb      	str	r3, [r7, #12]
 8001944:	e012      	b.n	800196c <promediar+0x3c>
		sensor_izq_sum += buffer[0];
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	881b      	ldrh	r3, [r3, #0]
 800194a:	461a      	mov	r2, r3
 800194c:	697b      	ldr	r3, [r7, #20]
 800194e:	4413      	add	r3, r2
 8001950:	617b      	str	r3, [r7, #20]
		sensor_der_sum += buffer[1]; //hago la suma y la guardo (eso significa el +=)
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	3302      	adds	r3, #2
 8001956:	881b      	ldrh	r3, [r3, #0]
 8001958:	461a      	mov	r2, r3
 800195a:	693b      	ldr	r3, [r7, #16]
 800195c:	4413      	add	r3, r2
 800195e:	613b      	str	r3, [r7, #16]
		buffer += 2;  //desplazo el puntero 2
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	3304      	adds	r3, #4
 8001964:	607b      	str	r3, [r7, #4]
	for (int i = 0; i < 16; ++i) { // Ralizamos la suma incrementando el puntero a las muestras
 8001966:	68fb      	ldr	r3, [r7, #12]
 8001968:	3301      	adds	r3, #1
 800196a:	60fb      	str	r3, [r7, #12]
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	2b0f      	cmp	r3, #15
 8001970:	dde9      	ble.n	8001946 <promediar+0x16>
	}
	sensor_izq_avg = sensor_izq_sum / 16; //divido 16 porq son 16 muestras
 8001972:	697b      	ldr	r3, [r7, #20]
 8001974:	091b      	lsrs	r3, r3, #4
 8001976:	b29a      	uxth	r2, r3
 8001978:	4b06      	ldr	r3, [pc, #24]	@ (8001994 <promediar+0x64>)
 800197a:	801a      	strh	r2, [r3, #0]
	sensor_der_avg = sensor_der_sum / 16;
 800197c:	693b      	ldr	r3, [r7, #16]
 800197e:	091b      	lsrs	r3, r3, #4
 8001980:	b29a      	uxth	r2, r3
 8001982:	4b05      	ldr	r3, [pc, #20]	@ (8001998 <promediar+0x68>)
 8001984:	801a      	strh	r2, [r3, #0]
}
 8001986:	bf00      	nop
 8001988:	371c      	adds	r7, #28
 800198a:	46bd      	mov	sp, r7
 800198c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001990:	4770      	bx	lr
 8001992:	bf00      	nop
 8001994:	200002bc 	.word	0x200002bc
 8001998:	200002be 	.word	0x200002be

0800199c <HAL_ADC_ConvHalfCpltCallback>:
void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc) { // Rutina de antención a la interrupción de buffer a mitad
 800199c:	b580      	push	{r7, lr}
 800199e:	b082      	sub	sp, #8
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
// Promediamos la primera mitad del buffer (el primer bloque de tamaño mínimo)
	promediar(&dma_buffer[0]);
 80019a4:	4803      	ldr	r0, [pc, #12]	@ (80019b4 <HAL_ADC_ConvHalfCpltCallback+0x18>)
 80019a6:	f7ff ffc3 	bl	8001930 <promediar>
}
 80019aa:	bf00      	nop
 80019ac:	3708      	adds	r7, #8
 80019ae:	46bd      	mov	sp, r7
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	bf00      	nop
 80019b4:	2000023c 	.word	0x2000023c

080019b8 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) { // Rutina de antención a la interrupción de buffer a tope
 80019b8:	b580      	push	{r7, lr}
 80019ba:	b082      	sub	sp, #8
 80019bc:	af00      	add	r7, sp, #0
 80019be:	6078      	str	r0, [r7, #4]
// Promediamos la segunda mitad del buffer (el segundo bloque de tamaño mínimo)
	promediar(&dma_buffer[32]);
 80019c0:	4803      	ldr	r0, [pc, #12]	@ (80019d0 <HAL_ADC_ConvCpltCallback+0x18>)
 80019c2:	f7ff ffb5 	bl	8001930 <promediar>
}
 80019c6:	bf00      	nop
 80019c8:	3708      	adds	r7, #8
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bd80      	pop	{r7, pc}
 80019ce:	bf00      	nop
 80019d0:	2000027c 	.word	0x2000027c

080019d4 <correccion_avanzar>:
void correccion_avanzar(void) {
 80019d4:	b580      	push	{r7, lr}
 80019d6:	af00      	add	r7, sp, #0
	// corrección para el sensor izquierdo
	if ((sensor_izq_avg < margen_i) && (margen_d < sensor_der_avg)) {
 80019d8:	4b1b      	ldr	r3, [pc, #108]	@ (8001a48 <correccion_avanzar+0x74>)
 80019da:	881b      	ldrh	r3, [r3, #0]
 80019dc:	b29a      	uxth	r2, r3
 80019de:	4b1b      	ldr	r3, [pc, #108]	@ (8001a4c <correccion_avanzar+0x78>)
 80019e0:	881b      	ldrh	r3, [r3, #0]
 80019e2:	429a      	cmp	r2, r3
 80019e4:	d209      	bcs.n	80019fa <correccion_avanzar+0x26>
 80019e6:	4b1a      	ldr	r3, [pc, #104]	@ (8001a50 <correccion_avanzar+0x7c>)
 80019e8:	881a      	ldrh	r2, [r3, #0]
 80019ea:	4b1a      	ldr	r3, [pc, #104]	@ (8001a54 <correccion_avanzar+0x80>)
 80019ec:	881b      	ldrh	r3, [r3, #0]
 80019ee:	b29b      	uxth	r3, r3
 80019f0:	429a      	cmp	r2, r3
 80019f2:	d202      	bcs.n	80019fa <correccion_avanzar+0x26>
		apagar_derecha();  // apagar motor derecho
 80019f4:	f000 f880 	bl	8001af8 <apagar_derecha>
 80019f8:	e024      	b.n	8001a44 <correccion_avanzar+0x70>
	} else if ((margen_i < sensor_izq_avg) && (sensor_der_avg < margen_d)) { // avanzar con ambos motores
 80019fa:	4b14      	ldr	r3, [pc, #80]	@ (8001a4c <correccion_avanzar+0x78>)
 80019fc:	881a      	ldrh	r2, [r3, #0]
 80019fe:	4b12      	ldr	r3, [pc, #72]	@ (8001a48 <correccion_avanzar+0x74>)
 8001a00:	881b      	ldrh	r3, [r3, #0]
 8001a02:	b29b      	uxth	r3, r3
 8001a04:	429a      	cmp	r2, r3
 8001a06:	d209      	bcs.n	8001a1c <correccion_avanzar+0x48>
 8001a08:	4b12      	ldr	r3, [pc, #72]	@ (8001a54 <correccion_avanzar+0x80>)
 8001a0a:	881b      	ldrh	r3, [r3, #0]
 8001a0c:	b29a      	uxth	r2, r3
 8001a0e:	4b10      	ldr	r3, [pc, #64]	@ (8001a50 <correccion_avanzar+0x7c>)
 8001a10:	881b      	ldrh	r3, [r3, #0]
 8001a12:	429a      	cmp	r2, r3
 8001a14:	d202      	bcs.n	8001a1c <correccion_avanzar+0x48>
		apagar_izquierda();  //apaga motor izquierdo
 8001a16:	f000 f847 	bl	8001aa8 <apagar_izquierda>
 8001a1a:	e013      	b.n	8001a44 <correccion_avanzar+0x70>
	} else if (( sensor_izq_avg <margen_i) && (sensor_der_avg < margen_d)) {
 8001a1c:	4b0a      	ldr	r3, [pc, #40]	@ (8001a48 <correccion_avanzar+0x74>)
 8001a1e:	881b      	ldrh	r3, [r3, #0]
 8001a20:	b29a      	uxth	r2, r3
 8001a22:	4b0a      	ldr	r3, [pc, #40]	@ (8001a4c <correccion_avanzar+0x78>)
 8001a24:	881b      	ldrh	r3, [r3, #0]
 8001a26:	429a      	cmp	r2, r3
 8001a28:	d209      	bcs.n	8001a3e <correccion_avanzar+0x6a>
 8001a2a:	4b0a      	ldr	r3, [pc, #40]	@ (8001a54 <correccion_avanzar+0x80>)
 8001a2c:	881b      	ldrh	r3, [r3, #0]
 8001a2e:	b29a      	uxth	r2, r3
 8001a30:	4b07      	ldr	r3, [pc, #28]	@ (8001a50 <correccion_avanzar+0x7c>)
 8001a32:	881b      	ldrh	r3, [r3, #0]
 8001a34:	429a      	cmp	r2, r3
 8001a36:	d202      	bcs.n	8001a3e <correccion_avanzar+0x6a>
		apagar_derecha();
 8001a38:	f000 f85e 	bl	8001af8 <apagar_derecha>
 8001a3c:	e002      	b.n	8001a44 <correccion_avanzar+0x70>
	} else {
		avanzar();
 8001a3e:	f000 f80b 	bl	8001a58 <avanzar>
	}
}
 8001a42:	bf00      	nop
 8001a44:	bf00      	nop
 8001a46:	bd80      	pop	{r7, pc}
 8001a48:	200002bc 	.word	0x200002bc
 8001a4c:	20000204 	.word	0x20000204
 8001a50:	20000206 	.word	0x20000206
 8001a54:	200002be 	.word	0x200002be

08001a58 <avanzar>:
void avanzar(void) {
 8001a58:	b580      	push	{r7, lr}
 8001a5a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8001a5c:	2200      	movs	r2, #0
 8001a5e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001a62:	480f      	ldr	r0, [pc, #60]	@ (8001aa0 <avanzar+0x48>)
 8001a64:	f002 fb96 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8001a68:	2201      	movs	r2, #1
 8001a6a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001a6e:	480c      	ldr	r0, [pc, #48]	@ (8001aa0 <avanzar+0x48>)
 8001a70:	f002 fb90 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8001a74:	2200      	movs	r2, #0
 8001a76:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001a7a:	4809      	ldr	r0, [pc, #36]	@ (8001aa0 <avanzar+0x48>)
 8001a7c:	f002 fb8a 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8001a80:	2201      	movs	r2, #1
 8001a82:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001a86:	4806      	ldr	r0, [pc, #24]	@ (8001aa0 <avanzar+0x48>)
 8001a88:	f002 fb84 	bl	8004194 <HAL_GPIO_WritePin>
	TIM3->CCR3 = v_media_izq; // rueda a velocidad media (condigurable)
 8001a8c:	4b05      	ldr	r3, [pc, #20]	@ (8001aa4 <avanzar+0x4c>)
 8001a8e:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8001a92:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4 = v_media_der; // rueda a velocidad media
 8001a94:	4b03      	ldr	r3, [pc, #12]	@ (8001aa4 <avanzar+0x4c>)
 8001a96:	f248 42d0 	movw	r2, #34000	@ 0x84d0
 8001a9a:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001a9c:	bf00      	nop
 8001a9e:	bd80      	pop	{r7, pc}
 8001aa0:	40020400 	.word	0x40020400
 8001aa4:	40000400 	.word	0x40000400

08001aa8 <apagar_izquierda>:

void apagar_izquierda(void) {
 8001aa8:	b580      	push	{r7, lr}
 8001aaa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8001aac:	2200      	movs	r2, #0
 8001aae:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001ab2:	480f      	ldr	r0, [pc, #60]	@ (8001af0 <apagar_izquierda+0x48>)
 8001ab4:	f002 fb6e 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8001ab8:	2201      	movs	r2, #1
 8001aba:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001abe:	480c      	ldr	r0, [pc, #48]	@ (8001af0 <apagar_izquierda+0x48>)
 8001ac0:	f002 fb68 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8001ac4:	2200      	movs	r2, #0
 8001ac6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001aca:	4809      	ldr	r0, [pc, #36]	@ (8001af0 <apagar_izquierda+0x48>)
 8001acc:	f002 fb62 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_RESET);
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001ad6:	4806      	ldr	r0, [pc, #24]	@ (8001af0 <apagar_izquierda+0x48>)
 8001ad8:	f002 fb5c 	bl	8004194 <HAL_GPIO_WritePin>
	TIM3->CCR3 = v_media; // rueda a velocidad media (condigurable)
 8001adc:	4b05      	ldr	r3, [pc, #20]	@ (8001af4 <apagar_izquierda+0x4c>)
 8001ade:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8001ae2:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4 = 0; // rueda a velocidad media
 8001ae4:	4b03      	ldr	r3, [pc, #12]	@ (8001af4 <apagar_izquierda+0x4c>)
 8001ae6:	2200      	movs	r2, #0
 8001ae8:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001aea:	bf00      	nop
 8001aec:	bd80      	pop	{r7, pc}
 8001aee:	bf00      	nop
 8001af0:	40020400 	.word	0x40020400
 8001af4:	40000400 	.word	0x40000400

08001af8 <apagar_derecha>:

void apagar_derecha(void) {
 8001af8:	b580      	push	{r7, lr}
 8001afa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8001afc:	2200      	movs	r2, #0
 8001afe:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001b02:	480f      	ldr	r0, [pc, #60]	@ (8001b40 <apagar_derecha+0x48>)
 8001b04:	f002 fb46 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_RESET);
 8001b08:	2200      	movs	r2, #0
 8001b0a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001b0e:	480c      	ldr	r0, [pc, #48]	@ (8001b40 <apagar_derecha+0x48>)
 8001b10:	f002 fb40 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8001b14:	2200      	movs	r2, #0
 8001b16:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001b1a:	4809      	ldr	r0, [pc, #36]	@ (8001b40 <apagar_derecha+0x48>)
 8001b1c:	f002 fb3a 	bl	8004194 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8001b20:	2201      	movs	r2, #1
 8001b22:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001b26:	4806      	ldr	r0, [pc, #24]	@ (8001b40 <apagar_derecha+0x48>)
 8001b28:	f002 fb34 	bl	8004194 <HAL_GPIO_WritePin>
	TIM3->CCR3 = 0; // rueda a velocidad media (condigurable)
 8001b2c:	4b05      	ldr	r3, [pc, #20]	@ (8001b44 <apagar_derecha+0x4c>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4 = v_media; // rueda a velocidad media
 8001b32:	4b04      	ldr	r3, [pc, #16]	@ (8001b44 <apagar_derecha+0x4c>)
 8001b34:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8001b38:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001b3a:	bf00      	nop
 8001b3c:	bd80      	pop	{r7, pc}
 8001b3e:	bf00      	nop
 8001b40:	40020400 	.word	0x40020400
 8001b44:	40000400 	.word	0x40000400

08001b48 <mini_retroceso>:

void mini_retroceso(void) {
 8001b48:	b580      	push	{r7, lr}
 8001b4a:	af00      	add	r7, sp, #0
	setMotorIzquierdo(retroceso);
 8001b4c:	2002      	movs	r0, #2
 8001b4e:	f000 f8a9 	bl	8001ca4 <setMotorIzquierdo>
	setMotorDerecho(retroceso);
 8001b52:	2002      	movs	r0, #2
 8001b54:	f000 f8d8 	bl	8001d08 <setMotorDerecho>
	HAL_Delay(tiempo_muerto_retroceso);
 8001b58:	2064      	movs	r0, #100	@ 0x64
 8001b5a:	f001 f82d 	bl	8002bb8 <HAL_Delay>
}
 8001b5e:	bf00      	nop
 8001b60:	bd80      	pop	{r7, pc}

08001b62 <mini_avance>:
void mini_avance(void) {
 8001b62:	b580      	push	{r7, lr}
 8001b64:	af00      	add	r7, sp, #0
	setMotorIzquierdo(avance);
 8001b66:	2001      	movs	r0, #1
 8001b68:	f000 f89c 	bl	8001ca4 <setMotorIzquierdo>
	setMotorDerecho(avance);
 8001b6c:	2001      	movs	r0, #1
 8001b6e:	f000 f8cb 	bl	8001d08 <setMotorDerecho>
	HAL_Delay(tiempo_muerto);
 8001b72:	2096      	movs	r0, #150	@ 0x96
 8001b74:	f001 f820 	bl	8002bb8 <HAL_Delay>
}
 8001b78:	bf00      	nop
 8001b7a:	bd80      	pop	{r7, pc}

08001b7c <ejecutarGiro>:

void ejecutarGiro(uint8_t giro) {
 8001b7c:	b580      	push	{r7, lr}
 8001b7e:	b082      	sub	sp, #8
 8001b80:	af00      	add	r7, sp, #0
 8001b82:	4603      	mov	r3, r0
 8001b84:	71fb      	strb	r3, [r7, #7]
	switch (giro) {
 8001b86:	79fb      	ldrb	r3, [r7, #7]
 8001b88:	2b03      	cmp	r3, #3
 8001b8a:	f200 8084 	bhi.w	8001c96 <ejecutarGiro+0x11a>
 8001b8e:	a201      	add	r2, pc, #4	@ (adr r2, 8001b94 <ejecutarGiro+0x18>)
 8001b90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b94:	08001ba5 	.word	0x08001ba5
 8001b98:	08001c0d 	.word	0x08001c0d
 8001b9c:	08001bab 	.word	0x08001bab
 8001ba0:	08001c71 	.word	0x08001c71
	case adelante:
		mini_avance(); //este es para q siga recto y no corrija mal
 8001ba4:	f7ff ffdd 	bl	8001b62 <mini_avance>
		break;
 8001ba8:	e075      	b.n	8001c96 <ejecutarGiro+0x11a>
	case derecha:
		if (contador_giros == 0) {
 8001baa:	4b3d      	ldr	r3, [pc, #244]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001bac:	781b      	ldrb	r3, [r3, #0]
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d119      	bne.n	8001be6 <ejecutarGiro+0x6a>
			contador_giros = contador_giros + 1;
 8001bb2:	4b3b      	ldr	r3, [pc, #236]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001bb4:	781b      	ldrb	r3, [r3, #0]
 8001bb6:	3301      	adds	r3, #1
 8001bb8:	b2da      	uxtb	r2, r3
 8001bba:	4b39      	ldr	r3, [pc, #228]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001bbc:	701a      	strb	r2, [r3, #0]
			setMotorIzquierdo(avance);
 8001bbe:	2001      	movs	r0, #1
 8001bc0:	f000 f870 	bl	8001ca4 <setMotorIzquierdo>
			setMotorDerecho(avance);
 8001bc4:	2001      	movs	r0, #1
 8001bc6:	f000 f89f 	bl	8001d08 <setMotorDerecho>
			HAL_Delay(tiempo_muerto_avanzar);;
 8001bca:	200a      	movs	r0, #10
 8001bcc:	f000 fff4 	bl	8002bb8 <HAL_Delay>
			setMotorIzquierdo(avance);
 8001bd0:	2001      	movs	r0, #1
 8001bd2:	f000 f867 	bl	8001ca4 <setMotorIzquierdo>
			setMotorDerecho(retroceso);
 8001bd6:	2002      	movs	r0, #2
 8001bd8:	f000 f896 	bl	8001d08 <setMotorDerecho>
			HAL_Delay(tiempo_giro90_der);
 8001bdc:	f44f 701b 	mov.w	r0, #620	@ 0x26c
 8001be0:	f000 ffea 	bl	8002bb8 <HAL_Delay>
			setMotorIzquierdo(avance);
			setMotorDerecho(retroceso);
			HAL_Delay(tiempo_giro90_2);
//			mini_avance();
		}
		break;
 8001be4:	e057      	b.n	8001c96 <ejecutarGiro+0x11a>
			contador_giros = contador_giros + 1;
 8001be6:	4b2e      	ldr	r3, [pc, #184]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001be8:	781b      	ldrb	r3, [r3, #0]
 8001bea:	3301      	adds	r3, #1
 8001bec:	b2da      	uxtb	r2, r3
 8001bee:	4b2c      	ldr	r3, [pc, #176]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001bf0:	701a      	strb	r2, [r3, #0]
			mini_retroceso();
 8001bf2:	f7ff ffa9 	bl	8001b48 <mini_retroceso>
			setMotorIzquierdo(avance);
 8001bf6:	2001      	movs	r0, #1
 8001bf8:	f000 f854 	bl	8001ca4 <setMotorIzquierdo>
			setMotorDerecho(retroceso);
 8001bfc:	2002      	movs	r0, #2
 8001bfe:	f000 f883 	bl	8001d08 <setMotorDerecho>
			HAL_Delay(tiempo_giro90_2);
 8001c02:	f44f 7061 	mov.w	r0, #900	@ 0x384
 8001c06:	f000 ffd7 	bl	8002bb8 <HAL_Delay>
		break;
 8001c0a:	e044      	b.n	8001c96 <ejecutarGiro+0x11a>
	case izquierda:
		if (contador_giros == 0) {
 8001c0c:	4b24      	ldr	r3, [pc, #144]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c0e:	781b      	ldrb	r3, [r3, #0]
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	d119      	bne.n	8001c48 <ejecutarGiro+0xcc>
			contador_giros = contador_giros + 1;
 8001c14:	4b22      	ldr	r3, [pc, #136]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c16:	781b      	ldrb	r3, [r3, #0]
 8001c18:	3301      	adds	r3, #1
 8001c1a:	b2da      	uxtb	r2, r3
 8001c1c:	4b20      	ldr	r3, [pc, #128]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c1e:	701a      	strb	r2, [r3, #0]
			setMotorIzquierdo(avance);
 8001c20:	2001      	movs	r0, #1
 8001c22:	f000 f83f 	bl	8001ca4 <setMotorIzquierdo>
			setMotorDerecho(avance);
 8001c26:	2001      	movs	r0, #1
 8001c28:	f000 f86e 	bl	8001d08 <setMotorDerecho>
			HAL_Delay(tiempo_muerto_avanzar);
 8001c2c:	200a      	movs	r0, #10
 8001c2e:	f000 ffc3 	bl	8002bb8 <HAL_Delay>

			setMotorIzquierdo(retroceso);
 8001c32:	2002      	movs	r0, #2
 8001c34:	f000 f836 	bl	8001ca4 <setMotorIzquierdo>
			setMotorDerecho(avance);
 8001c38:	2001      	movs	r0, #1
 8001c3a:	f000 f865 	bl	8001d08 <setMotorDerecho>
			HAL_Delay(tiempo_giro90_izq);
 8001c3e:	f240 209e 	movw	r0, #670	@ 0x29e
 8001c42:	f000 ffb9 	bl	8002bb8 <HAL_Delay>
			setMotorDerecho(avance);
			HAL_Delay(tiempo_giro90_2);
/*			mini_avance();
 */
		}
		break;
 8001c46:	e026      	b.n	8001c96 <ejecutarGiro+0x11a>
			contador_giros = contador_giros + 1;
 8001c48:	4b15      	ldr	r3, [pc, #84]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c4a:	781b      	ldrb	r3, [r3, #0]
 8001c4c:	3301      	adds	r3, #1
 8001c4e:	b2da      	uxtb	r2, r3
 8001c50:	4b13      	ldr	r3, [pc, #76]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c52:	701a      	strb	r2, [r3, #0]
			HAL_Delay(tiempo_muerto_avanzar);
 8001c54:	200a      	movs	r0, #10
 8001c56:	f000 ffaf 	bl	8002bb8 <HAL_Delay>
			setMotorIzquierdo(retroceso);
 8001c5a:	2002      	movs	r0, #2
 8001c5c:	f000 f822 	bl	8001ca4 <setMotorIzquierdo>
			setMotorDerecho(avance);
 8001c60:	2001      	movs	r0, #1
 8001c62:	f000 f851 	bl	8001d08 <setMotorDerecho>
			HAL_Delay(tiempo_giro90_2);
 8001c66:	f44f 7061 	mov.w	r0, #900	@ 0x384
 8001c6a:	f000 ffa5 	bl	8002bb8 <HAL_Delay>
		break;
 8001c6e:	e012      	b.n	8001c96 <ejecutarGiro+0x11a>

	case giro_180:
		contador_giros = contador_giros + 1;
 8001c70:	4b0b      	ldr	r3, [pc, #44]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c72:	781b      	ldrb	r3, [r3, #0]
 8001c74:	3301      	adds	r3, #1
 8001c76:	b2da      	uxtb	r2, r3
 8001c78:	4b09      	ldr	r3, [pc, #36]	@ (8001ca0 <ejecutarGiro+0x124>)
 8001c7a:	701a      	strb	r2, [r3, #0]
		setMotorIzquierdo(avance);
 8001c7c:	2001      	movs	r0, #1
 8001c7e:	f000 f811 	bl	8001ca4 <setMotorIzquierdo>
		setMotorDerecho(retroceso);
 8001c82:	2002      	movs	r0, #2
 8001c84:	f000 f840 	bl	8001d08 <setMotorDerecho>
		HAL_Delay(tiempo_giro180);
 8001c88:	f240 404c 	movw	r0, #1100	@ 0x44c
 8001c8c:	f000 ff94 	bl	8002bb8 <HAL_Delay>
		mini_avance();
 8001c90:	f7ff ff67 	bl	8001b62 <mini_avance>
		break;
 8001c94:	bf00      	nop

	}
}
 8001c96:	bf00      	nop
 8001c98:	3708      	adds	r7, #8
 8001c9a:	46bd      	mov	sp, r7
 8001c9c:	bd80      	pop	{r7, pc}
 8001c9e:	bf00      	nop
 8001ca0:	200001fe 	.word	0x200001fe

08001ca4 <setMotorIzquierdo>:

void setMotorIzquierdo(uint8_t modo) {
 8001ca4:	b580      	push	{r7, lr}
 8001ca6:	b082      	sub	sp, #8
 8001ca8:	af00      	add	r7, sp, #0
 8001caa:	4603      	mov	r3, r0
 8001cac:	71fb      	strb	r3, [r7, #7]

	TIM3->CCR3 = v_media; // rueda a velocidad media
 8001cae:	4b14      	ldr	r3, [pc, #80]	@ (8001d00 <setMotorIzquierdo+0x5c>)
 8001cb0:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8001cb4:	63da      	str	r2, [r3, #60]	@ 0x3c

	switch (modo) {
 8001cb6:	79fb      	ldrb	r3, [r7, #7]
 8001cb8:	2b01      	cmp	r3, #1
 8001cba:	d002      	beq.n	8001cc2 <setMotorIzquierdo+0x1e>
 8001cbc:	2b02      	cmp	r3, #2
 8001cbe:	d00d      	beq.n	8001cdc <setMotorIzquierdo+0x38>
	case retroceso:
		HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_RESET);
		break;
	}
}
 8001cc0:	e019      	b.n	8001cf6 <setMotorIzquierdo+0x52>
		HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001cc8:	480e      	ldr	r0, [pc, #56]	@ (8001d04 <setMotorIzquierdo+0x60>)
 8001cca:	f002 fa63 	bl	8004194 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8001cce:	2201      	movs	r2, #1
 8001cd0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001cd4:	480b      	ldr	r0, [pc, #44]	@ (8001d04 <setMotorIzquierdo+0x60>)
 8001cd6:	f002 fa5d 	bl	8004194 <HAL_GPIO_WritePin>
		break;
 8001cda:	e00c      	b.n	8001cf6 <setMotorIzquierdo+0x52>
		HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_SET);
 8001cdc:	2201      	movs	r2, #1
 8001cde:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001ce2:	4808      	ldr	r0, [pc, #32]	@ (8001d04 <setMotorIzquierdo+0x60>)
 8001ce4:	f002 fa56 	bl	8004194 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_RESET);
 8001ce8:	2200      	movs	r2, #0
 8001cea:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001cee:	4805      	ldr	r0, [pc, #20]	@ (8001d04 <setMotorIzquierdo+0x60>)
 8001cf0:	f002 fa50 	bl	8004194 <HAL_GPIO_WritePin>
		break;
 8001cf4:	bf00      	nop
}
 8001cf6:	bf00      	nop
 8001cf8:	3708      	adds	r7, #8
 8001cfa:	46bd      	mov	sp, r7
 8001cfc:	bd80      	pop	{r7, pc}
 8001cfe:	bf00      	nop
 8001d00:	40000400 	.word	0x40000400
 8001d04:	40020400 	.word	0x40020400

08001d08 <setMotorDerecho>:

void setMotorDerecho(uint8_t modo) {
 8001d08:	b580      	push	{r7, lr}
 8001d0a:	b082      	sub	sp, #8
 8001d0c:	af00      	add	r7, sp, #0
 8001d0e:	4603      	mov	r3, r0
 8001d10:	71fb      	strb	r3, [r7, #7]

	TIM3->CCR4 = v_media; // rueda a velocidad media
 8001d12:	4b14      	ldr	r3, [pc, #80]	@ (8001d64 <setMotorDerecho+0x5c>)
 8001d14:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8001d18:	641a      	str	r2, [r3, #64]	@ 0x40

	switch (modo) {
 8001d1a:	79fb      	ldrb	r3, [r7, #7]
 8001d1c:	2b01      	cmp	r3, #1
 8001d1e:	d002      	beq.n	8001d26 <setMotorDerecho+0x1e>
 8001d20:	2b02      	cmp	r3, #2
 8001d22:	d00d      	beq.n	8001d40 <setMotorDerecho+0x38>
		HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_RESET);
		break;

	}
}
 8001d24:	e019      	b.n	8001d5a <setMotorDerecho+0x52>
		HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8001d26:	2200      	movs	r2, #0
 8001d28:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001d2c:	480e      	ldr	r0, [pc, #56]	@ (8001d68 <setMotorDerecho+0x60>)
 8001d2e:	f002 fa31 	bl	8004194 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8001d32:	2201      	movs	r2, #1
 8001d34:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001d38:	480b      	ldr	r0, [pc, #44]	@ (8001d68 <setMotorDerecho+0x60>)
 8001d3a:	f002 fa2b 	bl	8004194 <HAL_GPIO_WritePin>
		break;
 8001d3e:	e00c      	b.n	8001d5a <setMotorDerecho+0x52>
		HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_SET);
 8001d40:	2201      	movs	r2, #1
 8001d42:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001d46:	4808      	ldr	r0, [pc, #32]	@ (8001d68 <setMotorDerecho+0x60>)
 8001d48:	f002 fa24 	bl	8004194 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_RESET);
 8001d4c:	2200      	movs	r2, #0
 8001d4e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001d52:	4805      	ldr	r0, [pc, #20]	@ (8001d68 <setMotorDerecho+0x60>)
 8001d54:	f002 fa1e 	bl	8004194 <HAL_GPIO_WritePin>
		break;
 8001d58:	bf00      	nop
}
 8001d5a:	bf00      	nop
 8001d5c:	3708      	adds	r7, #8
 8001d5e:	46bd      	mov	sp, r7
 8001d60:	bd80      	pop	{r7, pc}
 8001d62:	bf00      	nop
 8001d64:	40000400 	.word	0x40000400
 8001d68:	40020400 	.word	0x40020400

08001d6c <act_pared>:

uint8_t act_pared(uint8_t *pared, uint8_t ubicacion, uint8_t orientacion_actual) { // este CODIGO ES SUPONIENDO Q YA SE DETECTO LA PARED
 8001d6c:	b480      	push	{r7}
 8001d6e:	b083      	sub	sp, #12
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	6078      	str	r0, [r7, #4]
 8001d74:	460b      	mov	r3, r1
 8001d76:	70fb      	strb	r3, [r7, #3]
 8001d78:	4613      	mov	r3, r2
 8001d7a:	70bb      	strb	r3, [r7, #2]

	// actualizamos el valor de pared según la orientación
	switch (orientacion_actual) { //SE PONE 0X08 PORQ ES HEXADECIMAL, SI NO LO PONES ESTA EN OTRA BASE, ME HIZO RE CONFUNDIR
 8001d7c:	78bb      	ldrb	r3, [r7, #2]
 8001d7e:	2b03      	cmp	r3, #3
 8001d80:	d83a      	bhi.n	8001df8 <act_pared+0x8c>
 8001d82:	a201      	add	r2, pc, #4	@ (adr r2, 8001d88 <act_pared+0x1c>)
 8001d84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001d88:	08001d99 	.word	0x08001d99
 8001d8c:	08001db1 	.word	0x08001db1
 8001d90:	08001dc9 	.word	0x08001dc9
 8001d94:	08001de1 	.word	0x08001de1
	case norte: // TAMBIEN USO EL |= PARA Q SI DETECTA UNA PARED YA INICIALIZADA NO LA SUME Y ACUMULE UN CARRY , SI NO Q HAGA LA OR
		pared[ubicacion] |= 0x08;  // suma 8 (1000 en binario)
 8001d98:	78fb      	ldrb	r3, [r7, #3]
 8001d9a:	687a      	ldr	r2, [r7, #4]
 8001d9c:	4413      	add	r3, r2
 8001d9e:	781a      	ldrb	r2, [r3, #0]
 8001da0:	78fb      	ldrb	r3, [r7, #3]
 8001da2:	6879      	ldr	r1, [r7, #4]
 8001da4:	440b      	add	r3, r1
 8001da6:	f042 0208 	orr.w	r2, r2, #8
 8001daa:	b2d2      	uxtb	r2, r2
 8001dac:	701a      	strb	r2, [r3, #0]
		break;
 8001dae:	e025      	b.n	8001dfc <act_pared+0x90>
	case este:
		pared[ubicacion] |= 0x04;  // suma 4 (0100 en binario)
 8001db0:	78fb      	ldrb	r3, [r7, #3]
 8001db2:	687a      	ldr	r2, [r7, #4]
 8001db4:	4413      	add	r3, r2
 8001db6:	781a      	ldrb	r2, [r3, #0]
 8001db8:	78fb      	ldrb	r3, [r7, #3]
 8001dba:	6879      	ldr	r1, [r7, #4]
 8001dbc:	440b      	add	r3, r1
 8001dbe:	f042 0204 	orr.w	r2, r2, #4
 8001dc2:	b2d2      	uxtb	r2, r2
 8001dc4:	701a      	strb	r2, [r3, #0]
		break;
 8001dc6:	e019      	b.n	8001dfc <act_pared+0x90>
	case sur:
		pared[ubicacion] |= 0x02;  // suma 2 (0010 en binario)
 8001dc8:	78fb      	ldrb	r3, [r7, #3]
 8001dca:	687a      	ldr	r2, [r7, #4]
 8001dcc:	4413      	add	r3, r2
 8001dce:	781a      	ldrb	r2, [r3, #0]
 8001dd0:	78fb      	ldrb	r3, [r7, #3]
 8001dd2:	6879      	ldr	r1, [r7, #4]
 8001dd4:	440b      	add	r3, r1
 8001dd6:	f042 0202 	orr.w	r2, r2, #2
 8001dda:	b2d2      	uxtb	r2, r2
 8001ddc:	701a      	strb	r2, [r3, #0]
		break;
 8001dde:	e00d      	b.n	8001dfc <act_pared+0x90>
	case oeste:
		pared[ubicacion] |= 0x01;  // suma 1 (0001 en binario)
 8001de0:	78fb      	ldrb	r3, [r7, #3]
 8001de2:	687a      	ldr	r2, [r7, #4]
 8001de4:	4413      	add	r3, r2
 8001de6:	781a      	ldrb	r2, [r3, #0]
 8001de8:	78fb      	ldrb	r3, [r7, #3]
 8001dea:	6879      	ldr	r1, [r7, #4]
 8001dec:	440b      	add	r3, r1
 8001dee:	f042 0201 	orr.w	r2, r2, #1
 8001df2:	b2d2      	uxtb	r2, r2
 8001df4:	701a      	strb	r2, [r3, #0]
		break;
 8001df6:	e001      	b.n	8001dfc <act_pared+0x90>
	default:
		return 0; // Orientación no válida
 8001df8:	2300      	movs	r3, #0
 8001dfa:	e003      	b.n	8001e04 <act_pared+0x98>
	}
	return pared[ubicacion];  // devolvés el valor actualizado
 8001dfc:	78fb      	ldrb	r3, [r7, #3]
 8001dfe:	687a      	ldr	r2, [r7, #4]
 8001e00:	4413      	add	r3, r2
 8001e02:	781b      	ldrb	r3, [r3, #0]
}
 8001e04:	4618      	mov	r0, r3
 8001e06:	370c      	adds	r7, #12
 8001e08:	46bd      	mov	sp, r7
 8001e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e0e:	4770      	bx	lr

08001e10 <act_pesos>:

void act_pesos(uint8_t *pared, uint8_t *peso) {
 8001e10:	b480      	push	{r7}
 8001e12:	b087      	sub	sp, #28
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	6078      	str	r0, [r7, #4]
 8001e18:	6039      	str	r1, [r7, #0]
	uint8_t minimo_peso_vecino;
	for (int j = 0; j < 15; j++) {
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	613b      	str	r3, [r7, #16]
 8001e1e:	e08b      	b.n	8001f38 <act_pesos+0x128>
		for (int i = 0; i < cant_casilleros - 1; i++) {
 8001e20:	2300      	movs	r3, #0
 8001e22:	60fb      	str	r3, [r7, #12]
 8001e24:	e081      	b.n	8001f2a <act_pesos+0x11a>
			minimo_peso_vecino = 100;
 8001e26:	2364      	movs	r3, #100	@ 0x64
 8001e28:	75fb      	strb	r3, [r7, #23]
			if (((i + 4 < cant_casilleros) && (pared[i] & 0x08) == 0)) { //mirar la el vecino de arriba si el bit 3 es 0 y si i es menor a 12 (es decir q no tiene pared superior) PORQUE SI NO NO PUEDE CALCULAR EL VECINO DE ARRIBA PORQ SERIA I+4 Y SI I ES 12 O MAS, I+4 VA A DAR 16 O MAS, Q NO EXISTE
 8001e2a:	68fb      	ldr	r3, [r7, #12]
 8001e2c:	2b0b      	cmp	r3, #11
 8001e2e:	dc15      	bgt.n	8001e5c <act_pesos+0x4c>
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	687a      	ldr	r2, [r7, #4]
 8001e34:	4413      	add	r3, r2
 8001e36:	781b      	ldrb	r3, [r3, #0]
 8001e38:	f003 0308 	and.w	r3, r3, #8
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d10d      	bne.n	8001e5c <act_pesos+0x4c>
				if (peso[i + 4] < minimo_peso_vecino)
 8001e40:	68fb      	ldr	r3, [r7, #12]
 8001e42:	3304      	adds	r3, #4
 8001e44:	683a      	ldr	r2, [r7, #0]
 8001e46:	4413      	add	r3, r2
 8001e48:	781b      	ldrb	r3, [r3, #0]
 8001e4a:	7dfa      	ldrb	r2, [r7, #23]
 8001e4c:	429a      	cmp	r2, r3
 8001e4e:	d905      	bls.n	8001e5c <act_pesos+0x4c>
					minimo_peso_vecino = peso[i + 4];
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	3304      	adds	r3, #4
 8001e54:	683a      	ldr	r2, [r7, #0]
 8001e56:	4413      	add	r3, r2
 8001e58:	781b      	ldrb	r3, [r3, #0]
 8001e5a:	75fb      	strb	r3, [r7, #23]
			}

			if (((!(i == 3 || i == 7 || i == 11 || i == 15)) && (pared[i] & 0x01) == 0)) { //ideam mirar el vecino derecha si el bit 2 es 0 y si el numero es distinto a 3 7 11 y 15 PORQ EN ESE CASO NO TIENE VECINO A LA derecha (LIMITE DEL MAPA)
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	2b03      	cmp	r3, #3
 8001e60:	d01e      	beq.n	8001ea0 <act_pesos+0x90>
 8001e62:	68fb      	ldr	r3, [r7, #12]
 8001e64:	2b07      	cmp	r3, #7
 8001e66:	d01b      	beq.n	8001ea0 <act_pesos+0x90>
 8001e68:	68fb      	ldr	r3, [r7, #12]
 8001e6a:	2b0b      	cmp	r3, #11
 8001e6c:	d018      	beq.n	8001ea0 <act_pesos+0x90>
 8001e6e:	68fb      	ldr	r3, [r7, #12]
 8001e70:	2b0f      	cmp	r3, #15
 8001e72:	d015      	beq.n	8001ea0 <act_pesos+0x90>
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	687a      	ldr	r2, [r7, #4]
 8001e78:	4413      	add	r3, r2
 8001e7a:	781b      	ldrb	r3, [r3, #0]
 8001e7c:	f003 0301 	and.w	r3, r3, #1
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	d10d      	bne.n	8001ea0 <act_pesos+0x90>
				if (peso[i + 1] < minimo_peso_vecino)
 8001e84:	68fb      	ldr	r3, [r7, #12]
 8001e86:	3301      	adds	r3, #1
 8001e88:	683a      	ldr	r2, [r7, #0]
 8001e8a:	4413      	add	r3, r2
 8001e8c:	781b      	ldrb	r3, [r3, #0]
 8001e8e:	7dfa      	ldrb	r2, [r7, #23]
 8001e90:	429a      	cmp	r2, r3
 8001e92:	d905      	bls.n	8001ea0 <act_pesos+0x90>
					minimo_peso_vecino = peso[i + 1];
 8001e94:	68fb      	ldr	r3, [r7, #12]
 8001e96:	3301      	adds	r3, #1
 8001e98:	683a      	ldr	r2, [r7, #0]
 8001e9a:	4413      	add	r3, r2
 8001e9c:	781b      	ldrb	r3, [r3, #0]
 8001e9e:	75fb      	strb	r3, [r7, #23]
			}

			if (((i >= 4) && (pared[i] & 0x02) == 0)) { //ideam al primero, mira el vecino de abajo en el caso de q i sea mayor o igual a 4
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	2b03      	cmp	r3, #3
 8001ea4:	dd15      	ble.n	8001ed2 <act_pesos+0xc2>
 8001ea6:	68fb      	ldr	r3, [r7, #12]
 8001ea8:	687a      	ldr	r2, [r7, #4]
 8001eaa:	4413      	add	r3, r2
 8001eac:	781b      	ldrb	r3, [r3, #0]
 8001eae:	f003 0302 	and.w	r3, r3, #2
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d10d      	bne.n	8001ed2 <act_pesos+0xc2>
				if (peso[i - 4] < minimo_peso_vecino)
 8001eb6:	68fb      	ldr	r3, [r7, #12]
 8001eb8:	3b04      	subs	r3, #4
 8001eba:	683a      	ldr	r2, [r7, #0]
 8001ebc:	4413      	add	r3, r2
 8001ebe:	781b      	ldrb	r3, [r3, #0]
 8001ec0:	7dfa      	ldrb	r2, [r7, #23]
 8001ec2:	429a      	cmp	r2, r3
 8001ec4:	d905      	bls.n	8001ed2 <act_pesos+0xc2>
					minimo_peso_vecino = peso[i - 4];
 8001ec6:	68fb      	ldr	r3, [r7, #12]
 8001ec8:	3b04      	subs	r3, #4
 8001eca:	683a      	ldr	r2, [r7, #0]
 8001ecc:	4413      	add	r3, r2
 8001ece:	781b      	ldrb	r3, [r3, #0]
 8001ed0:	75fb      	strb	r3, [r7, #23]
			}

			if (((pared[i] & 0x04) == 0) && (!(i == 0 || i == 4 || i == 8 || i == 12))) { //ideam al dos
 8001ed2:	68fb      	ldr	r3, [r7, #12]
 8001ed4:	687a      	ldr	r2, [r7, #4]
 8001ed6:	4413      	add	r3, r2
 8001ed8:	781b      	ldrb	r3, [r3, #0]
 8001eda:	f003 0304 	and.w	r3, r3, #4
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	d119      	bne.n	8001f16 <act_pesos+0x106>
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	2b00      	cmp	r3, #0
 8001ee6:	d016      	beq.n	8001f16 <act_pesos+0x106>
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	2b04      	cmp	r3, #4
 8001eec:	d013      	beq.n	8001f16 <act_pesos+0x106>
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	2b08      	cmp	r3, #8
 8001ef2:	d010      	beq.n	8001f16 <act_pesos+0x106>
 8001ef4:	68fb      	ldr	r3, [r7, #12]
 8001ef6:	2b0c      	cmp	r3, #12
 8001ef8:	d00d      	beq.n	8001f16 <act_pesos+0x106>
				if (peso[i - 1] < minimo_peso_vecino)
 8001efa:	68fb      	ldr	r3, [r7, #12]
 8001efc:	3b01      	subs	r3, #1
 8001efe:	683a      	ldr	r2, [r7, #0]
 8001f00:	4413      	add	r3, r2
 8001f02:	781b      	ldrb	r3, [r3, #0]
 8001f04:	7dfa      	ldrb	r2, [r7, #23]
 8001f06:	429a      	cmp	r2, r3
 8001f08:	d905      	bls.n	8001f16 <act_pesos+0x106>
					minimo_peso_vecino = peso[i - 1];
 8001f0a:	68fb      	ldr	r3, [r7, #12]
 8001f0c:	3b01      	subs	r3, #1
 8001f0e:	683a      	ldr	r2, [r7, #0]
 8001f10:	4413      	add	r3, r2
 8001f12:	781b      	ldrb	r3, [r3, #0]
 8001f14:	75fb      	strb	r3, [r7, #23]
			}

			peso[i] = minimo_peso_vecino + 1;
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	683a      	ldr	r2, [r7, #0]
 8001f1a:	4413      	add	r3, r2
 8001f1c:	7dfa      	ldrb	r2, [r7, #23]
 8001f1e:	3201      	adds	r2, #1
 8001f20:	b2d2      	uxtb	r2, r2
 8001f22:	701a      	strb	r2, [r3, #0]
		for (int i = 0; i < cant_casilleros - 1; i++) {
 8001f24:	68fb      	ldr	r3, [r7, #12]
 8001f26:	3301      	adds	r3, #1
 8001f28:	60fb      	str	r3, [r7, #12]
 8001f2a:	68fb      	ldr	r3, [r7, #12]
 8001f2c:	2b0e      	cmp	r3, #14
 8001f2e:	f77f af7a 	ble.w	8001e26 <act_pesos+0x16>
	for (int j = 0; j < 15; j++) {
 8001f32:	693b      	ldr	r3, [r7, #16]
 8001f34:	3301      	adds	r3, #1
 8001f36:	613b      	str	r3, [r7, #16]
 8001f38:	693b      	ldr	r3, [r7, #16]
 8001f3a:	2b0e      	cmp	r3, #14
 8001f3c:	f77f af70 	ble.w	8001e20 <act_pesos+0x10>
		}
	}
}
 8001f40:	bf00      	nop
 8001f42:	bf00      	nop
 8001f44:	371c      	adds	r7, #28
 8001f46:	46bd      	mov	sp, r7
 8001f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f4c:	4770      	bx	lr
	...

08001f50 <calculo_minimo_peso>:

uint8_t calculo_minimo_peso(uint8_t *peso, uint8_t *pared, uint8_t ubicacion, uint8_t orientacion_actual) {
 8001f50:	b480      	push	{r7}
 8001f52:	b087      	sub	sp, #28
 8001f54:	af00      	add	r7, sp, #0
 8001f56:	60f8      	str	r0, [r7, #12]
 8001f58:	60b9      	str	r1, [r7, #8]
 8001f5a:	4611      	mov	r1, r2
 8001f5c:	461a      	mov	r2, r3
 8001f5e:	460b      	mov	r3, r1
 8001f60:	71fb      	strb	r3, [r7, #7]
 8001f62:	4613      	mov	r3, r2
 8001f64:	71bb      	strb	r3, [r7, #6]
	uint8_t minimo_peso = 15;
 8001f66:	230f      	movs	r3, #15
 8001f68:	75fb      	strb	r3, [r7, #23]
	if (ubicacion == 15){
 8001f6a:	79fb      	ldrb	r3, [r7, #7]
 8001f6c:	2b0f      	cmp	r3, #15
 8001f6e:	d105      	bne.n	8001f7c <calculo_minimo_peso+0x2c>
		casilla_n = 15;
 8001f70:	4b97      	ldr	r3, [pc, #604]	@ (80021d0 <calculo_minimo_peso+0x280>)
 8001f72:	220f      	movs	r2, #15
 8001f74:	701a      	strb	r2, [r3, #0]
		return casilla_n;
 8001f76:	4b96      	ldr	r3, [pc, #600]	@ (80021d0 <calculo_minimo_peso+0x280>)
 8001f78:	781b      	ldrb	r3, [r3, #0]
 8001f7a:	e246      	b.n	800240a <calculo_minimo_peso+0x4ba>
	}
		else
		switch (orientacion_actual) {
 8001f7c:	79bb      	ldrb	r3, [r7, #6]
 8001f7e:	2b03      	cmp	r3, #3
 8001f80:	f200 8242 	bhi.w	8002408 <calculo_minimo_peso+0x4b8>
 8001f84:	a201      	add	r2, pc, #4	@ (adr r2, 8001f8c <calculo_minimo_peso+0x3c>)
 8001f86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f8a:	bf00      	nop
 8001f8c:	08001f9d 	.word	0x08001f9d
 8001f90:	080022ef 	.word	0x080022ef
 8001f94:	080020b7 	.word	0x080020b7
 8001f98:	080021d5 	.word	0x080021d5
		case norte:
			if (((peso[ubicacion + 4] < minimo_peso) && ((pared[ubicacion] & 0x08) == 0) && (ubicacion + 4 < cant_casilleros))) {
 8001f9c:	79fb      	ldrb	r3, [r7, #7]
 8001f9e:	3304      	adds	r3, #4
 8001fa0:	68fa      	ldr	r2, [r7, #12]
 8001fa2:	4413      	add	r3, r2
 8001fa4:	781b      	ldrb	r3, [r3, #0]
 8001fa6:	7dfa      	ldrb	r2, [r7, #23]
 8001fa8:	429a      	cmp	r2, r3
 8001faa:	d915      	bls.n	8001fd8 <calculo_minimo_peso+0x88>
 8001fac:	79fb      	ldrb	r3, [r7, #7]
 8001fae:	68ba      	ldr	r2, [r7, #8]
 8001fb0:	4413      	add	r3, r2
 8001fb2:	781b      	ldrb	r3, [r3, #0]
 8001fb4:	f003 0308 	and.w	r3, r3, #8
 8001fb8:	2b00      	cmp	r3, #0
 8001fba:	d10d      	bne.n	8001fd8 <calculo_minimo_peso+0x88>
 8001fbc:	79fb      	ldrb	r3, [r7, #7]
 8001fbe:	2b0b      	cmp	r3, #11
 8001fc0:	d80a      	bhi.n	8001fd8 <calculo_minimo_peso+0x88>
				minimo_peso = peso[ubicacion + 4];
 8001fc2:	79fb      	ldrb	r3, [r7, #7]
 8001fc4:	3304      	adds	r3, #4
 8001fc6:	68fa      	ldr	r2, [r7, #12]
 8001fc8:	4413      	add	r3, r2
 8001fca:	781b      	ldrb	r3, [r3, #0]
 8001fcc:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 4;
 8001fce:	79fb      	ldrb	r3, [r7, #7]
 8001fd0:	3304      	adds	r3, #4
 8001fd2:	b2da      	uxtb	r2, r3
 8001fd4:	4b7e      	ldr	r3, [pc, #504]	@ (80021d0 <calculo_minimo_peso+0x280>)
 8001fd6:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion + 1] < minimo_peso) && ((pared[ubicacion] & 0x01) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) { // el signo de admiracion niega y convierte en booleana ubicacion
 8001fd8:	79fb      	ldrb	r3, [r7, #7]
 8001fda:	3301      	adds	r3, #1
 8001fdc:	68fa      	ldr	r2, [r7, #12]
 8001fde:	4413      	add	r3, r2
 8001fe0:	781b      	ldrb	r3, [r3, #0]
 8001fe2:	7dfa      	ldrb	r2, [r7, #23]
 8001fe4:	429a      	cmp	r2, r3
 8001fe6:	d91e      	bls.n	8002026 <calculo_minimo_peso+0xd6>
 8001fe8:	79fb      	ldrb	r3, [r7, #7]
 8001fea:	68ba      	ldr	r2, [r7, #8]
 8001fec:	4413      	add	r3, r2
 8001fee:	781b      	ldrb	r3, [r3, #0]
 8001ff0:	f003 0301 	and.w	r3, r3, #1
 8001ff4:	2b00      	cmp	r3, #0
 8001ff6:	d116      	bne.n	8002026 <calculo_minimo_peso+0xd6>
 8001ff8:	79fb      	ldrb	r3, [r7, #7]
 8001ffa:	2b03      	cmp	r3, #3
 8001ffc:	d013      	beq.n	8002026 <calculo_minimo_peso+0xd6>
 8001ffe:	79fb      	ldrb	r3, [r7, #7]
 8002000:	2b07      	cmp	r3, #7
 8002002:	d010      	beq.n	8002026 <calculo_minimo_peso+0xd6>
 8002004:	79fb      	ldrb	r3, [r7, #7]
 8002006:	2b0b      	cmp	r3, #11
 8002008:	d00d      	beq.n	8002026 <calculo_minimo_peso+0xd6>
 800200a:	79fb      	ldrb	r3, [r7, #7]
 800200c:	2b0f      	cmp	r3, #15
 800200e:	d00a      	beq.n	8002026 <calculo_minimo_peso+0xd6>
				minimo_peso = peso[ubicacion + 1];
 8002010:	79fb      	ldrb	r3, [r7, #7]
 8002012:	3301      	adds	r3, #1
 8002014:	68fa      	ldr	r2, [r7, #12]
 8002016:	4413      	add	r3, r2
 8002018:	781b      	ldrb	r3, [r3, #0]
 800201a:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 1;
 800201c:	79fb      	ldrb	r3, [r7, #7]
 800201e:	3301      	adds	r3, #1
 8002020:	b2da      	uxtb	r2, r3
 8002022:	4b6b      	ldr	r3, [pc, #428]	@ (80021d0 <calculo_minimo_peso+0x280>)
 8002024:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion - 1] < minimo_peso) && ((pared[ubicacion] & 0x04) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) {
 8002026:	79fb      	ldrb	r3, [r7, #7]
 8002028:	3b01      	subs	r3, #1
 800202a:	68fa      	ldr	r2, [r7, #12]
 800202c:	4413      	add	r3, r2
 800202e:	781b      	ldrb	r3, [r3, #0]
 8002030:	7dfa      	ldrb	r2, [r7, #23]
 8002032:	429a      	cmp	r2, r3
 8002034:	d91e      	bls.n	8002074 <calculo_minimo_peso+0x124>
 8002036:	79fb      	ldrb	r3, [r7, #7]
 8002038:	68ba      	ldr	r2, [r7, #8]
 800203a:	4413      	add	r3, r2
 800203c:	781b      	ldrb	r3, [r3, #0]
 800203e:	f003 0304 	and.w	r3, r3, #4
 8002042:	2b00      	cmp	r3, #0
 8002044:	d116      	bne.n	8002074 <calculo_minimo_peso+0x124>
 8002046:	79fb      	ldrb	r3, [r7, #7]
 8002048:	2b03      	cmp	r3, #3
 800204a:	d013      	beq.n	8002074 <calculo_minimo_peso+0x124>
 800204c:	79fb      	ldrb	r3, [r7, #7]
 800204e:	2b07      	cmp	r3, #7
 8002050:	d010      	beq.n	8002074 <calculo_minimo_peso+0x124>
 8002052:	79fb      	ldrb	r3, [r7, #7]
 8002054:	2b0b      	cmp	r3, #11
 8002056:	d00d      	beq.n	8002074 <calculo_minimo_peso+0x124>
 8002058:	79fb      	ldrb	r3, [r7, #7]
 800205a:	2b0f      	cmp	r3, #15
 800205c:	d00a      	beq.n	8002074 <calculo_minimo_peso+0x124>
				minimo_peso = peso[ubicacion - 1];
 800205e:	79fb      	ldrb	r3, [r7, #7]
 8002060:	3b01      	subs	r3, #1
 8002062:	68fa      	ldr	r2, [r7, #12]
 8002064:	4413      	add	r3, r2
 8002066:	781b      	ldrb	r3, [r3, #0]
 8002068:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 1;
 800206a:	79fb      	ldrb	r3, [r7, #7]
 800206c:	3b01      	subs	r3, #1
 800206e:	b2da      	uxtb	r2, r3
 8002070:	4b57      	ldr	r3, [pc, #348]	@ (80021d0 <calculo_minimo_peso+0x280>)
 8002072:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion - 4] < minimo_peso) && ((pared[ubicacion] & 0x02) == 0) && (4 <= ubicacion))) {
 8002074:	79fb      	ldrb	r3, [r7, #7]
 8002076:	3b04      	subs	r3, #4
 8002078:	68fa      	ldr	r2, [r7, #12]
 800207a:	4413      	add	r3, r2
 800207c:	781b      	ldrb	r3, [r3, #0]
 800207e:	7dfa      	ldrb	r2, [r7, #23]
 8002080:	429a      	cmp	r2, r3
 8002082:	d915      	bls.n	80020b0 <calculo_minimo_peso+0x160>
 8002084:	79fb      	ldrb	r3, [r7, #7]
 8002086:	68ba      	ldr	r2, [r7, #8]
 8002088:	4413      	add	r3, r2
 800208a:	781b      	ldrb	r3, [r3, #0]
 800208c:	f003 0302 	and.w	r3, r3, #2
 8002090:	2b00      	cmp	r3, #0
 8002092:	d10d      	bne.n	80020b0 <calculo_minimo_peso+0x160>
 8002094:	79fb      	ldrb	r3, [r7, #7]
 8002096:	2b03      	cmp	r3, #3
 8002098:	d90a      	bls.n	80020b0 <calculo_minimo_peso+0x160>
				minimo_peso = peso[ubicacion - 4];
 800209a:	79fb      	ldrb	r3, [r7, #7]
 800209c:	3b04      	subs	r3, #4
 800209e:	68fa      	ldr	r2, [r7, #12]
 80020a0:	4413      	add	r3, r2
 80020a2:	781b      	ldrb	r3, [r3, #0]
 80020a4:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 4;
 80020a6:	79fb      	ldrb	r3, [r7, #7]
 80020a8:	3b04      	subs	r3, #4
 80020aa:	b2da      	uxtb	r2, r3
 80020ac:	4b48      	ldr	r3, [pc, #288]	@ (80021d0 <calculo_minimo_peso+0x280>)
 80020ae:	701a      	strb	r2, [r3, #0]
			}
			return casilla_n;
 80020b0:	4b47      	ldr	r3, [pc, #284]	@ (80021d0 <calculo_minimo_peso+0x280>)
 80020b2:	781b      	ldrb	r3, [r3, #0]
 80020b4:	e1a9      	b.n	800240a <calculo_minimo_peso+0x4ba>
			break;
		case sur:
			if (((peso[ubicacion - 4] < minimo_peso) && ((pared[ubicacion] & 0x02) == 0) && (4 <= ubicacion))) {
 80020b6:	79fb      	ldrb	r3, [r7, #7]
 80020b8:	3b04      	subs	r3, #4
 80020ba:	68fa      	ldr	r2, [r7, #12]
 80020bc:	4413      	add	r3, r2
 80020be:	781b      	ldrb	r3, [r3, #0]
 80020c0:	7dfa      	ldrb	r2, [r7, #23]
 80020c2:	429a      	cmp	r2, r3
 80020c4:	d915      	bls.n	80020f2 <calculo_minimo_peso+0x1a2>
 80020c6:	79fb      	ldrb	r3, [r7, #7]
 80020c8:	68ba      	ldr	r2, [r7, #8]
 80020ca:	4413      	add	r3, r2
 80020cc:	781b      	ldrb	r3, [r3, #0]
 80020ce:	f003 0302 	and.w	r3, r3, #2
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d10d      	bne.n	80020f2 <calculo_minimo_peso+0x1a2>
 80020d6:	79fb      	ldrb	r3, [r7, #7]
 80020d8:	2b03      	cmp	r3, #3
 80020da:	d90a      	bls.n	80020f2 <calculo_minimo_peso+0x1a2>
				minimo_peso = peso[ubicacion - 4];
 80020dc:	79fb      	ldrb	r3, [r7, #7]
 80020de:	3b04      	subs	r3, #4
 80020e0:	68fa      	ldr	r2, [r7, #12]
 80020e2:	4413      	add	r3, r2
 80020e4:	781b      	ldrb	r3, [r3, #0]
 80020e6:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 4;
 80020e8:	79fb      	ldrb	r3, [r7, #7]
 80020ea:	3b04      	subs	r3, #4
 80020ec:	b2da      	uxtb	r2, r3
 80020ee:	4b38      	ldr	r3, [pc, #224]	@ (80021d0 <calculo_minimo_peso+0x280>)
 80020f0:	701a      	strb	r2, [r3, #0]
			}

			if (((peso[ubicacion + 1] < minimo_peso) && ((pared[ubicacion] & 0x01) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) { // el signo de admiracion niega y convierte en booleana ubicacion
 80020f2:	79fb      	ldrb	r3, [r7, #7]
 80020f4:	3301      	adds	r3, #1
 80020f6:	68fa      	ldr	r2, [r7, #12]
 80020f8:	4413      	add	r3, r2
 80020fa:	781b      	ldrb	r3, [r3, #0]
 80020fc:	7dfa      	ldrb	r2, [r7, #23]
 80020fe:	429a      	cmp	r2, r3
 8002100:	d91e      	bls.n	8002140 <calculo_minimo_peso+0x1f0>
 8002102:	79fb      	ldrb	r3, [r7, #7]
 8002104:	68ba      	ldr	r2, [r7, #8]
 8002106:	4413      	add	r3, r2
 8002108:	781b      	ldrb	r3, [r3, #0]
 800210a:	f003 0301 	and.w	r3, r3, #1
 800210e:	2b00      	cmp	r3, #0
 8002110:	d116      	bne.n	8002140 <calculo_minimo_peso+0x1f0>
 8002112:	79fb      	ldrb	r3, [r7, #7]
 8002114:	2b03      	cmp	r3, #3
 8002116:	d013      	beq.n	8002140 <calculo_minimo_peso+0x1f0>
 8002118:	79fb      	ldrb	r3, [r7, #7]
 800211a:	2b07      	cmp	r3, #7
 800211c:	d010      	beq.n	8002140 <calculo_minimo_peso+0x1f0>
 800211e:	79fb      	ldrb	r3, [r7, #7]
 8002120:	2b0b      	cmp	r3, #11
 8002122:	d00d      	beq.n	8002140 <calculo_minimo_peso+0x1f0>
 8002124:	79fb      	ldrb	r3, [r7, #7]
 8002126:	2b0f      	cmp	r3, #15
 8002128:	d00a      	beq.n	8002140 <calculo_minimo_peso+0x1f0>
				minimo_peso = peso[ubicacion + 1];
 800212a:	79fb      	ldrb	r3, [r7, #7]
 800212c:	3301      	adds	r3, #1
 800212e:	68fa      	ldr	r2, [r7, #12]
 8002130:	4413      	add	r3, r2
 8002132:	781b      	ldrb	r3, [r3, #0]
 8002134:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 1;
 8002136:	79fb      	ldrb	r3, [r7, #7]
 8002138:	3301      	adds	r3, #1
 800213a:	b2da      	uxtb	r2, r3
 800213c:	4b24      	ldr	r3, [pc, #144]	@ (80021d0 <calculo_minimo_peso+0x280>)
 800213e:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion - 1] < minimo_peso) && ((pared[ubicacion] & 0x04) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) {
 8002140:	79fb      	ldrb	r3, [r7, #7]
 8002142:	3b01      	subs	r3, #1
 8002144:	68fa      	ldr	r2, [r7, #12]
 8002146:	4413      	add	r3, r2
 8002148:	781b      	ldrb	r3, [r3, #0]
 800214a:	7dfa      	ldrb	r2, [r7, #23]
 800214c:	429a      	cmp	r2, r3
 800214e:	d91e      	bls.n	800218e <calculo_minimo_peso+0x23e>
 8002150:	79fb      	ldrb	r3, [r7, #7]
 8002152:	68ba      	ldr	r2, [r7, #8]
 8002154:	4413      	add	r3, r2
 8002156:	781b      	ldrb	r3, [r3, #0]
 8002158:	f003 0304 	and.w	r3, r3, #4
 800215c:	2b00      	cmp	r3, #0
 800215e:	d116      	bne.n	800218e <calculo_minimo_peso+0x23e>
 8002160:	79fb      	ldrb	r3, [r7, #7]
 8002162:	2b03      	cmp	r3, #3
 8002164:	d013      	beq.n	800218e <calculo_minimo_peso+0x23e>
 8002166:	79fb      	ldrb	r3, [r7, #7]
 8002168:	2b07      	cmp	r3, #7
 800216a:	d010      	beq.n	800218e <calculo_minimo_peso+0x23e>
 800216c:	79fb      	ldrb	r3, [r7, #7]
 800216e:	2b0b      	cmp	r3, #11
 8002170:	d00d      	beq.n	800218e <calculo_minimo_peso+0x23e>
 8002172:	79fb      	ldrb	r3, [r7, #7]
 8002174:	2b0f      	cmp	r3, #15
 8002176:	d00a      	beq.n	800218e <calculo_minimo_peso+0x23e>
				minimo_peso = peso[ubicacion - 1];
 8002178:	79fb      	ldrb	r3, [r7, #7]
 800217a:	3b01      	subs	r3, #1
 800217c:	68fa      	ldr	r2, [r7, #12]
 800217e:	4413      	add	r3, r2
 8002180:	781b      	ldrb	r3, [r3, #0]
 8002182:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 1;
 8002184:	79fb      	ldrb	r3, [r7, #7]
 8002186:	3b01      	subs	r3, #1
 8002188:	b2da      	uxtb	r2, r3
 800218a:	4b11      	ldr	r3, [pc, #68]	@ (80021d0 <calculo_minimo_peso+0x280>)
 800218c:	701a      	strb	r2, [r3, #0]
			}

			if (((peso[ubicacion + 4] < minimo_peso) && ((pared[ubicacion] & 0x08) == 0) && (ubicacion + 4 < cant_casilleros))) {
 800218e:	79fb      	ldrb	r3, [r7, #7]
 8002190:	3304      	adds	r3, #4
 8002192:	68fa      	ldr	r2, [r7, #12]
 8002194:	4413      	add	r3, r2
 8002196:	781b      	ldrb	r3, [r3, #0]
 8002198:	7dfa      	ldrb	r2, [r7, #23]
 800219a:	429a      	cmp	r2, r3
 800219c:	d915      	bls.n	80021ca <calculo_minimo_peso+0x27a>
 800219e:	79fb      	ldrb	r3, [r7, #7]
 80021a0:	68ba      	ldr	r2, [r7, #8]
 80021a2:	4413      	add	r3, r2
 80021a4:	781b      	ldrb	r3, [r3, #0]
 80021a6:	f003 0308 	and.w	r3, r3, #8
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d10d      	bne.n	80021ca <calculo_minimo_peso+0x27a>
 80021ae:	79fb      	ldrb	r3, [r7, #7]
 80021b0:	2b0b      	cmp	r3, #11
 80021b2:	d80a      	bhi.n	80021ca <calculo_minimo_peso+0x27a>
				minimo_peso = peso[ubicacion + 4];
 80021b4:	79fb      	ldrb	r3, [r7, #7]
 80021b6:	3304      	adds	r3, #4
 80021b8:	68fa      	ldr	r2, [r7, #12]
 80021ba:	4413      	add	r3, r2
 80021bc:	781b      	ldrb	r3, [r3, #0]
 80021be:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 4;
 80021c0:	79fb      	ldrb	r3, [r7, #7]
 80021c2:	3304      	adds	r3, #4
 80021c4:	b2da      	uxtb	r2, r3
 80021c6:	4b02      	ldr	r3, [pc, #8]	@ (80021d0 <calculo_minimo_peso+0x280>)
 80021c8:	701a      	strb	r2, [r3, #0]
			}
			return casilla_n;
 80021ca:	4b01      	ldr	r3, [pc, #4]	@ (80021d0 <calculo_minimo_peso+0x280>)
 80021cc:	781b      	ldrb	r3, [r3, #0]
 80021ce:	e11c      	b.n	800240a <calculo_minimo_peso+0x4ba>
 80021d0:	20000000 	.word	0x20000000
			break;
		case oeste:
			if (((peso[ubicacion + 1] < minimo_peso) && ((pared[ubicacion] & 0x01) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) { // el signo de admiracion niega y convierte en booleana ubicacion
 80021d4:	79fb      	ldrb	r3, [r7, #7]
 80021d6:	3301      	adds	r3, #1
 80021d8:	68fa      	ldr	r2, [r7, #12]
 80021da:	4413      	add	r3, r2
 80021dc:	781b      	ldrb	r3, [r3, #0]
 80021de:	7dfa      	ldrb	r2, [r7, #23]
 80021e0:	429a      	cmp	r2, r3
 80021e2:	d91e      	bls.n	8002222 <calculo_minimo_peso+0x2d2>
 80021e4:	79fb      	ldrb	r3, [r7, #7]
 80021e6:	68ba      	ldr	r2, [r7, #8]
 80021e8:	4413      	add	r3, r2
 80021ea:	781b      	ldrb	r3, [r3, #0]
 80021ec:	f003 0301 	and.w	r3, r3, #1
 80021f0:	2b00      	cmp	r3, #0
 80021f2:	d116      	bne.n	8002222 <calculo_minimo_peso+0x2d2>
 80021f4:	79fb      	ldrb	r3, [r7, #7]
 80021f6:	2b03      	cmp	r3, #3
 80021f8:	d013      	beq.n	8002222 <calculo_minimo_peso+0x2d2>
 80021fa:	79fb      	ldrb	r3, [r7, #7]
 80021fc:	2b07      	cmp	r3, #7
 80021fe:	d010      	beq.n	8002222 <calculo_minimo_peso+0x2d2>
 8002200:	79fb      	ldrb	r3, [r7, #7]
 8002202:	2b0b      	cmp	r3, #11
 8002204:	d00d      	beq.n	8002222 <calculo_minimo_peso+0x2d2>
 8002206:	79fb      	ldrb	r3, [r7, #7]
 8002208:	2b0f      	cmp	r3, #15
 800220a:	d00a      	beq.n	8002222 <calculo_minimo_peso+0x2d2>
				minimo_peso = peso[ubicacion + 1];
 800220c:	79fb      	ldrb	r3, [r7, #7]
 800220e:	3301      	adds	r3, #1
 8002210:	68fa      	ldr	r2, [r7, #12]
 8002212:	4413      	add	r3, r2
 8002214:	781b      	ldrb	r3, [r3, #0]
 8002216:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 1;
 8002218:	79fb      	ldrb	r3, [r7, #7]
 800221a:	3301      	adds	r3, #1
 800221c:	b2da      	uxtb	r2, r3
 800221e:	4b7e      	ldr	r3, [pc, #504]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 8002220:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion + 4] < minimo_peso) && ((pared[ubicacion] & 0x08) == 0) && (ubicacion + 4 < cant_casilleros))) {
 8002222:	79fb      	ldrb	r3, [r7, #7]
 8002224:	3304      	adds	r3, #4
 8002226:	68fa      	ldr	r2, [r7, #12]
 8002228:	4413      	add	r3, r2
 800222a:	781b      	ldrb	r3, [r3, #0]
 800222c:	7dfa      	ldrb	r2, [r7, #23]
 800222e:	429a      	cmp	r2, r3
 8002230:	d915      	bls.n	800225e <calculo_minimo_peso+0x30e>
 8002232:	79fb      	ldrb	r3, [r7, #7]
 8002234:	68ba      	ldr	r2, [r7, #8]
 8002236:	4413      	add	r3, r2
 8002238:	781b      	ldrb	r3, [r3, #0]
 800223a:	f003 0308 	and.w	r3, r3, #8
 800223e:	2b00      	cmp	r3, #0
 8002240:	d10d      	bne.n	800225e <calculo_minimo_peso+0x30e>
 8002242:	79fb      	ldrb	r3, [r7, #7]
 8002244:	2b0b      	cmp	r3, #11
 8002246:	d80a      	bhi.n	800225e <calculo_minimo_peso+0x30e>
				minimo_peso = peso[ubicacion + 4];
 8002248:	79fb      	ldrb	r3, [r7, #7]
 800224a:	3304      	adds	r3, #4
 800224c:	68fa      	ldr	r2, [r7, #12]
 800224e:	4413      	add	r3, r2
 8002250:	781b      	ldrb	r3, [r3, #0]
 8002252:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 4;
 8002254:	79fb      	ldrb	r3, [r7, #7]
 8002256:	3304      	adds	r3, #4
 8002258:	b2da      	uxtb	r2, r3
 800225a:	4b6f      	ldr	r3, [pc, #444]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 800225c:	701a      	strb	r2, [r3, #0]
			}

			if (((peso[ubicacion - 4] < minimo_peso) && ((pared[ubicacion] & 0x02) == 0) && (4 <= ubicacion))) {
 800225e:	79fb      	ldrb	r3, [r7, #7]
 8002260:	3b04      	subs	r3, #4
 8002262:	68fa      	ldr	r2, [r7, #12]
 8002264:	4413      	add	r3, r2
 8002266:	781b      	ldrb	r3, [r3, #0]
 8002268:	7dfa      	ldrb	r2, [r7, #23]
 800226a:	429a      	cmp	r2, r3
 800226c:	d915      	bls.n	800229a <calculo_minimo_peso+0x34a>
 800226e:	79fb      	ldrb	r3, [r7, #7]
 8002270:	68ba      	ldr	r2, [r7, #8]
 8002272:	4413      	add	r3, r2
 8002274:	781b      	ldrb	r3, [r3, #0]
 8002276:	f003 0302 	and.w	r3, r3, #2
 800227a:	2b00      	cmp	r3, #0
 800227c:	d10d      	bne.n	800229a <calculo_minimo_peso+0x34a>
 800227e:	79fb      	ldrb	r3, [r7, #7]
 8002280:	2b03      	cmp	r3, #3
 8002282:	d90a      	bls.n	800229a <calculo_minimo_peso+0x34a>
				minimo_peso = peso[ubicacion - 4];
 8002284:	79fb      	ldrb	r3, [r7, #7]
 8002286:	3b04      	subs	r3, #4
 8002288:	68fa      	ldr	r2, [r7, #12]
 800228a:	4413      	add	r3, r2
 800228c:	781b      	ldrb	r3, [r3, #0]
 800228e:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 4;
 8002290:	79fb      	ldrb	r3, [r7, #7]
 8002292:	3b04      	subs	r3, #4
 8002294:	b2da      	uxtb	r2, r3
 8002296:	4b60      	ldr	r3, [pc, #384]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 8002298:	701a      	strb	r2, [r3, #0]
			}

			if (((peso[ubicacion - 1] < minimo_peso) && ((pared[ubicacion] & 0x04) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) {
 800229a:	79fb      	ldrb	r3, [r7, #7]
 800229c:	3b01      	subs	r3, #1
 800229e:	68fa      	ldr	r2, [r7, #12]
 80022a0:	4413      	add	r3, r2
 80022a2:	781b      	ldrb	r3, [r3, #0]
 80022a4:	7dfa      	ldrb	r2, [r7, #23]
 80022a6:	429a      	cmp	r2, r3
 80022a8:	d91e      	bls.n	80022e8 <calculo_minimo_peso+0x398>
 80022aa:	79fb      	ldrb	r3, [r7, #7]
 80022ac:	68ba      	ldr	r2, [r7, #8]
 80022ae:	4413      	add	r3, r2
 80022b0:	781b      	ldrb	r3, [r3, #0]
 80022b2:	f003 0304 	and.w	r3, r3, #4
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d116      	bne.n	80022e8 <calculo_minimo_peso+0x398>
 80022ba:	79fb      	ldrb	r3, [r7, #7]
 80022bc:	2b03      	cmp	r3, #3
 80022be:	d013      	beq.n	80022e8 <calculo_minimo_peso+0x398>
 80022c0:	79fb      	ldrb	r3, [r7, #7]
 80022c2:	2b07      	cmp	r3, #7
 80022c4:	d010      	beq.n	80022e8 <calculo_minimo_peso+0x398>
 80022c6:	79fb      	ldrb	r3, [r7, #7]
 80022c8:	2b0b      	cmp	r3, #11
 80022ca:	d00d      	beq.n	80022e8 <calculo_minimo_peso+0x398>
 80022cc:	79fb      	ldrb	r3, [r7, #7]
 80022ce:	2b0f      	cmp	r3, #15
 80022d0:	d00a      	beq.n	80022e8 <calculo_minimo_peso+0x398>
				minimo_peso = peso[ubicacion - 1];
 80022d2:	79fb      	ldrb	r3, [r7, #7]
 80022d4:	3b01      	subs	r3, #1
 80022d6:	68fa      	ldr	r2, [r7, #12]
 80022d8:	4413      	add	r3, r2
 80022da:	781b      	ldrb	r3, [r3, #0]
 80022dc:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 1;
 80022de:	79fb      	ldrb	r3, [r7, #7]
 80022e0:	3b01      	subs	r3, #1
 80022e2:	b2da      	uxtb	r2, r3
 80022e4:	4b4c      	ldr	r3, [pc, #304]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 80022e6:	701a      	strb	r2, [r3, #0]
			}
			return casilla_n;
 80022e8:	4b4b      	ldr	r3, [pc, #300]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 80022ea:	781b      	ldrb	r3, [r3, #0]
 80022ec:	e08d      	b.n	800240a <calculo_minimo_peso+0x4ba>
			break;
		case este:
			if (((peso[ubicacion - 1] < minimo_peso) && ((pared[ubicacion] & 0x04) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) {
 80022ee:	79fb      	ldrb	r3, [r7, #7]
 80022f0:	3b01      	subs	r3, #1
 80022f2:	68fa      	ldr	r2, [r7, #12]
 80022f4:	4413      	add	r3, r2
 80022f6:	781b      	ldrb	r3, [r3, #0]
 80022f8:	7dfa      	ldrb	r2, [r7, #23]
 80022fa:	429a      	cmp	r2, r3
 80022fc:	d91e      	bls.n	800233c <calculo_minimo_peso+0x3ec>
 80022fe:	79fb      	ldrb	r3, [r7, #7]
 8002300:	68ba      	ldr	r2, [r7, #8]
 8002302:	4413      	add	r3, r2
 8002304:	781b      	ldrb	r3, [r3, #0]
 8002306:	f003 0304 	and.w	r3, r3, #4
 800230a:	2b00      	cmp	r3, #0
 800230c:	d116      	bne.n	800233c <calculo_minimo_peso+0x3ec>
 800230e:	79fb      	ldrb	r3, [r7, #7]
 8002310:	2b03      	cmp	r3, #3
 8002312:	d013      	beq.n	800233c <calculo_minimo_peso+0x3ec>
 8002314:	79fb      	ldrb	r3, [r7, #7]
 8002316:	2b07      	cmp	r3, #7
 8002318:	d010      	beq.n	800233c <calculo_minimo_peso+0x3ec>
 800231a:	79fb      	ldrb	r3, [r7, #7]
 800231c:	2b0b      	cmp	r3, #11
 800231e:	d00d      	beq.n	800233c <calculo_minimo_peso+0x3ec>
 8002320:	79fb      	ldrb	r3, [r7, #7]
 8002322:	2b0f      	cmp	r3, #15
 8002324:	d00a      	beq.n	800233c <calculo_minimo_peso+0x3ec>
				minimo_peso = peso[ubicacion - 1];
 8002326:	79fb      	ldrb	r3, [r7, #7]
 8002328:	3b01      	subs	r3, #1
 800232a:	68fa      	ldr	r2, [r7, #12]
 800232c:	4413      	add	r3, r2
 800232e:	781b      	ldrb	r3, [r3, #0]
 8002330:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 1;
 8002332:	79fb      	ldrb	r3, [r7, #7]
 8002334:	3b01      	subs	r3, #1
 8002336:	b2da      	uxtb	r2, r3
 8002338:	4b37      	ldr	r3, [pc, #220]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 800233a:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion + 4] < minimo_peso) && ((pared[ubicacion] & 0x08) == 0) && (ubicacion + 4 < cant_casilleros))) {
 800233c:	79fb      	ldrb	r3, [r7, #7]
 800233e:	3304      	adds	r3, #4
 8002340:	68fa      	ldr	r2, [r7, #12]
 8002342:	4413      	add	r3, r2
 8002344:	781b      	ldrb	r3, [r3, #0]
 8002346:	7dfa      	ldrb	r2, [r7, #23]
 8002348:	429a      	cmp	r2, r3
 800234a:	d915      	bls.n	8002378 <calculo_minimo_peso+0x428>
 800234c:	79fb      	ldrb	r3, [r7, #7]
 800234e:	68ba      	ldr	r2, [r7, #8]
 8002350:	4413      	add	r3, r2
 8002352:	781b      	ldrb	r3, [r3, #0]
 8002354:	f003 0308 	and.w	r3, r3, #8
 8002358:	2b00      	cmp	r3, #0
 800235a:	d10d      	bne.n	8002378 <calculo_minimo_peso+0x428>
 800235c:	79fb      	ldrb	r3, [r7, #7]
 800235e:	2b0b      	cmp	r3, #11
 8002360:	d80a      	bhi.n	8002378 <calculo_minimo_peso+0x428>
				minimo_peso = peso[ubicacion + 4];
 8002362:	79fb      	ldrb	r3, [r7, #7]
 8002364:	3304      	adds	r3, #4
 8002366:	68fa      	ldr	r2, [r7, #12]
 8002368:	4413      	add	r3, r2
 800236a:	781b      	ldrb	r3, [r3, #0]
 800236c:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 4;
 800236e:	79fb      	ldrb	r3, [r7, #7]
 8002370:	3304      	adds	r3, #4
 8002372:	b2da      	uxtb	r2, r3
 8002374:	4b28      	ldr	r3, [pc, #160]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 8002376:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion - 4] < minimo_peso) && ((pared[ubicacion] & 0x02) == 0) && (4 <= ubicacion))) {
 8002378:	79fb      	ldrb	r3, [r7, #7]
 800237a:	3b04      	subs	r3, #4
 800237c:	68fa      	ldr	r2, [r7, #12]
 800237e:	4413      	add	r3, r2
 8002380:	781b      	ldrb	r3, [r3, #0]
 8002382:	7dfa      	ldrb	r2, [r7, #23]
 8002384:	429a      	cmp	r2, r3
 8002386:	d915      	bls.n	80023b4 <calculo_minimo_peso+0x464>
 8002388:	79fb      	ldrb	r3, [r7, #7]
 800238a:	68ba      	ldr	r2, [r7, #8]
 800238c:	4413      	add	r3, r2
 800238e:	781b      	ldrb	r3, [r3, #0]
 8002390:	f003 0302 	and.w	r3, r3, #2
 8002394:	2b00      	cmp	r3, #0
 8002396:	d10d      	bne.n	80023b4 <calculo_minimo_peso+0x464>
 8002398:	79fb      	ldrb	r3, [r7, #7]
 800239a:	2b03      	cmp	r3, #3
 800239c:	d90a      	bls.n	80023b4 <calculo_minimo_peso+0x464>
				minimo_peso = peso[ubicacion - 4];
 800239e:	79fb      	ldrb	r3, [r7, #7]
 80023a0:	3b04      	subs	r3, #4
 80023a2:	68fa      	ldr	r2, [r7, #12]
 80023a4:	4413      	add	r3, r2
 80023a6:	781b      	ldrb	r3, [r3, #0]
 80023a8:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion - 4;
 80023aa:	79fb      	ldrb	r3, [r7, #7]
 80023ac:	3b04      	subs	r3, #4
 80023ae:	b2da      	uxtb	r2, r3
 80023b0:	4b19      	ldr	r3, [pc, #100]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 80023b2:	701a      	strb	r2, [r3, #0]
			}
			if (((peso[ubicacion + 1] < minimo_peso) && ((pared[ubicacion] & 0x01) == 0) && !(ubicacion == 3 || ubicacion == 7 || ubicacion == 11 || ubicacion == 15))) { // el signo de admiracion niega y convierte en booleana ubicacion
 80023b4:	79fb      	ldrb	r3, [r7, #7]
 80023b6:	3301      	adds	r3, #1
 80023b8:	68fa      	ldr	r2, [r7, #12]
 80023ba:	4413      	add	r3, r2
 80023bc:	781b      	ldrb	r3, [r3, #0]
 80023be:	7dfa      	ldrb	r2, [r7, #23]
 80023c0:	429a      	cmp	r2, r3
 80023c2:	d91e      	bls.n	8002402 <calculo_minimo_peso+0x4b2>
 80023c4:	79fb      	ldrb	r3, [r7, #7]
 80023c6:	68ba      	ldr	r2, [r7, #8]
 80023c8:	4413      	add	r3, r2
 80023ca:	781b      	ldrb	r3, [r3, #0]
 80023cc:	f003 0301 	and.w	r3, r3, #1
 80023d0:	2b00      	cmp	r3, #0
 80023d2:	d116      	bne.n	8002402 <calculo_minimo_peso+0x4b2>
 80023d4:	79fb      	ldrb	r3, [r7, #7]
 80023d6:	2b03      	cmp	r3, #3
 80023d8:	d013      	beq.n	8002402 <calculo_minimo_peso+0x4b2>
 80023da:	79fb      	ldrb	r3, [r7, #7]
 80023dc:	2b07      	cmp	r3, #7
 80023de:	d010      	beq.n	8002402 <calculo_minimo_peso+0x4b2>
 80023e0:	79fb      	ldrb	r3, [r7, #7]
 80023e2:	2b0b      	cmp	r3, #11
 80023e4:	d00d      	beq.n	8002402 <calculo_minimo_peso+0x4b2>
 80023e6:	79fb      	ldrb	r3, [r7, #7]
 80023e8:	2b0f      	cmp	r3, #15
 80023ea:	d00a      	beq.n	8002402 <calculo_minimo_peso+0x4b2>
				minimo_peso = peso[ubicacion + 1];
 80023ec:	79fb      	ldrb	r3, [r7, #7]
 80023ee:	3301      	adds	r3, #1
 80023f0:	68fa      	ldr	r2, [r7, #12]
 80023f2:	4413      	add	r3, r2
 80023f4:	781b      	ldrb	r3, [r3, #0]
 80023f6:	75fb      	strb	r3, [r7, #23]
				casilla_n = ubicacion + 1;
 80023f8:	79fb      	ldrb	r3, [r7, #7]
 80023fa:	3301      	adds	r3, #1
 80023fc:	b2da      	uxtb	r2, r3
 80023fe:	4b06      	ldr	r3, [pc, #24]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 8002400:	701a      	strb	r2, [r3, #0]
			}
			return casilla_n;
 8002402:	4b05      	ldr	r3, [pc, #20]	@ (8002418 <calculo_minimo_peso+0x4c8>)
 8002404:	781b      	ldrb	r3, [r3, #0]
 8002406:	e000      	b.n	800240a <calculo_minimo_peso+0x4ba>
			break;
		default:
			return 100;
 8002408:	2364      	movs	r3, #100	@ 0x64
		}
	}
 800240a:	4618      	mov	r0, r3
 800240c:	371c      	adds	r7, #28
 800240e:	46bd      	mov	sp, r7
 8002410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002414:	4770      	bx	lr
 8002416:	bf00      	nop
 8002418:	20000000 	.word	0x20000000

0800241c <filtrado_pared_funcion>:
void filtrado_pared_funcion(void) {
 800241c:	b580      	push	{r7, lr}
 800241e:	b082      	sub	sp, #8
 8002420:	af00      	add	r7, sp, #0
	uint32_t tiempo_actual = HAL_GetTick();
 8002422:	f000 fbbd 	bl	8002ba0 <HAL_GetTick>
 8002426:	6078      	str	r0, [r7, #4]
	if (200 <= (tiempo_actual - tiempo_inicio) /*&& (girando == 0)*/ ) {
 8002428:	4b0c      	ldr	r3, [pc, #48]	@ (800245c <filtrado_pared_funcion+0x40>)
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	687a      	ldr	r2, [r7, #4]
 800242e:	1ad3      	subs	r3, r2, r3
 8002430:	2bc7      	cmp	r3, #199	@ 0xc7
 8002432:	d90e      	bls.n	8002452 <filtrado_pared_funcion+0x36>
		GPIO_PinState estado_sensor = HAL_GPIO_ReadPin(sensor_frontal_GPIO_Port,
 8002434:	2140      	movs	r1, #64	@ 0x40
 8002436:	480a      	ldr	r0, [pc, #40]	@ (8002460 <filtrado_pared_funcion+0x44>)
 8002438:	f001 fe94 	bl	8004164 <HAL_GPIO_ReadPin>
 800243c:	4603      	mov	r3, r0
 800243e:	70fb      	strb	r3, [r7, #3]
		sensor_frontal_Pin);
		if (GPIO_PIN_RESET == estado_sensor) {
 8002440:	78fb      	ldrb	r3, [r7, #3]
 8002442:	2b00      	cmp	r3, #0
 8002444:	d102      	bne.n	800244c <filtrado_pared_funcion+0x30>
			solicitud_pared = 1;
 8002446:	4b07      	ldr	r3, [pc, #28]	@ (8002464 <filtrado_pared_funcion+0x48>)
 8002448:	2201      	movs	r2, #1
 800244a:	701a      	strb	r2, [r3, #0]
		}
		filtrado_pared = 0;
 800244c:	4b06      	ldr	r3, [pc, #24]	@ (8002468 <filtrado_pared_funcion+0x4c>)
 800244e:	2200      	movs	r2, #0
 8002450:	701a      	strb	r2, [r3, #0]
	}
}
 8002452:	bf00      	nop
 8002454:	3708      	adds	r7, #8
 8002456:	46bd      	mov	sp, r7
 8002458:	bd80      	pop	{r7, pc}
 800245a:	bf00      	nop
 800245c:	2000022c 	.word	0x2000022c
 8002460:	40020800 	.word	0x40020800
 8002464:	20000230 	.word	0x20000230
 8002468:	20000231 	.word	0x20000231

0800246c <filtrado_linea_funcion>:
void filtrado_linea_funcion(void) {
 800246c:	b580      	push	{r7, lr}
 800246e:	b082      	sub	sp, #8
 8002470:	af00      	add	r7, sp, #0
	uint32_t tiempo_actual_2 = HAL_GetTick();
 8002472:	f000 fb95 	bl	8002ba0 <HAL_GetTick>
 8002476:	6078      	str	r0, [r7, #4]
	if (tiempo_rebotes <= (tiempo_actual_2 - tiempo_inicio_2)) {
 8002478:	4b0c      	ldr	r3, [pc, #48]	@ (80024ac <filtrado_linea_funcion+0x40>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	687a      	ldr	r2, [r7, #4]
 800247e:	1ad3      	subs	r3, r2, r3
 8002480:	2b1d      	cmp	r3, #29
 8002482:	d90e      	bls.n	80024a2 <filtrado_linea_funcion+0x36>
		GPIO_PinState estado_sensor_2 = HAL_GPIO_ReadPin(sensor_linea_GPIO_Port,
 8002484:	2180      	movs	r1, #128	@ 0x80
 8002486:	480a      	ldr	r0, [pc, #40]	@ (80024b0 <filtrado_linea_funcion+0x44>)
 8002488:	f001 fe6c 	bl	8004164 <HAL_GPIO_ReadPin>
 800248c:	4603      	mov	r3, r0
 800248e:	70fb      	strb	r3, [r7, #3]
		sensor_linea_Pin);
		if (GPIO_PIN_RESET == estado_sensor_2) {
 8002490:	78fb      	ldrb	r3, [r7, #3]
 8002492:	2b00      	cmp	r3, #0
 8002494:	d102      	bne.n	800249c <filtrado_linea_funcion+0x30>
			solicitud_linea = 1;
 8002496:	4b07      	ldr	r3, [pc, #28]	@ (80024b4 <filtrado_linea_funcion+0x48>)
 8002498:	2201      	movs	r2, #1
 800249a:	701a      	strb	r2, [r3, #0]
		}
		filtrado_linea = 0;
 800249c:	4b06      	ldr	r3, [pc, #24]	@ (80024b8 <filtrado_linea_funcion+0x4c>)
 800249e:	2200      	movs	r2, #0
 80024a0:	701a      	strb	r2, [r3, #0]
	}
}
 80024a2:	bf00      	nop
 80024a4:	3708      	adds	r7, #8
 80024a6:	46bd      	mov	sp, r7
 80024a8:	bd80      	pop	{r7, pc}
 80024aa:	bf00      	nop
 80024ac:	20000234 	.word	0x20000234
 80024b0:	40020800 	.word	0x40020800
 80024b4:	20000238 	.word	0x20000238
 80024b8:	20000239 	.word	0x20000239

080024bc <HAL_GPIO_EXTI_Callback>:
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 80024bc:	b580      	push	{r7, lr}
 80024be:	b082      	sub	sp, #8
 80024c0:	af00      	add	r7, sp, #0
 80024c2:	4603      	mov	r3, r0
 80024c4:	80fb      	strh	r3, [r7, #6]
	if ((GPIO_Pin == sensor_frontal_Pin) && (filtrado_pared == 0) && (girando == 0)) {
 80024c6:	88fb      	ldrh	r3, [r7, #6]
 80024c8:	2b40      	cmp	r3, #64	@ 0x40
 80024ca:	d110      	bne.n	80024ee <HAL_GPIO_EXTI_Callback+0x32>
 80024cc:	4b12      	ldr	r3, [pc, #72]	@ (8002518 <HAL_GPIO_EXTI_Callback+0x5c>)
 80024ce:	781b      	ldrb	r3, [r3, #0]
 80024d0:	b2db      	uxtb	r3, r3
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d10b      	bne.n	80024ee <HAL_GPIO_EXTI_Callback+0x32>
 80024d6:	4b11      	ldr	r3, [pc, #68]	@ (800251c <HAL_GPIO_EXTI_Callback+0x60>)
 80024d8:	781b      	ldrb	r3, [r3, #0]
 80024da:	2b00      	cmp	r3, #0
 80024dc:	d107      	bne.n	80024ee <HAL_GPIO_EXTI_Callback+0x32>
		tiempo_inicio = HAL_GetTick();
 80024de:	f000 fb5f 	bl	8002ba0 <HAL_GetTick>
 80024e2:	4603      	mov	r3, r0
 80024e4:	4a0e      	ldr	r2, [pc, #56]	@ (8002520 <HAL_GPIO_EXTI_Callback+0x64>)
 80024e6:	6013      	str	r3, [r2, #0]
		filtrado_pared = 1;
 80024e8:	4b0b      	ldr	r3, [pc, #44]	@ (8002518 <HAL_GPIO_EXTI_Callback+0x5c>)
 80024ea:	2201      	movs	r2, #1
 80024ec:	701a      	strb	r2, [r3, #0]
	}
	if ((GPIO_Pin == sensor_linea_Pin) && (filtrado_linea == 0)) {
 80024ee:	88fb      	ldrh	r3, [r7, #6]
 80024f0:	2b80      	cmp	r3, #128	@ 0x80
 80024f2:	d10c      	bne.n	800250e <HAL_GPIO_EXTI_Callback+0x52>
 80024f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002524 <HAL_GPIO_EXTI_Callback+0x68>)
 80024f6:	781b      	ldrb	r3, [r3, #0]
 80024f8:	b2db      	uxtb	r3, r3
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d107      	bne.n	800250e <HAL_GPIO_EXTI_Callback+0x52>
		tiempo_inicio_2 = HAL_GetTick();
 80024fe:	f000 fb4f 	bl	8002ba0 <HAL_GetTick>
 8002502:	4603      	mov	r3, r0
 8002504:	4a08      	ldr	r2, [pc, #32]	@ (8002528 <HAL_GPIO_EXTI_Callback+0x6c>)
 8002506:	6013      	str	r3, [r2, #0]
		filtrado_linea = 1;
 8002508:	4b06      	ldr	r3, [pc, #24]	@ (8002524 <HAL_GPIO_EXTI_Callback+0x68>)
 800250a:	2201      	movs	r2, #1
 800250c:	701a      	strb	r2, [r3, #0]
	}
}
 800250e:	bf00      	nop
 8002510:	3708      	adds	r7, #8
 8002512:	46bd      	mov	sp, r7
 8002514:	bd80      	pop	{r7, pc}
 8002516:	bf00      	nop
 8002518:	20000231 	.word	0x20000231
 800251c:	20000228 	.word	0x20000228
 8002520:	2000022c 	.word	0x2000022c
 8002524:	20000239 	.word	0x20000239
 8002528:	20000234 	.word	0x20000234

0800252c <envio_ubicacion>:

void envio_ubicacion(uint8_t ubicacion, uint8_t casilla_n) {
 800252c:	b580      	push	{r7, lr}
 800252e:	b082      	sub	sp, #8
 8002530:	af00      	add	r7, sp, #0
 8002532:	4603      	mov	r3, r0
 8002534:	460a      	mov	r2, r1
 8002536:	71fb      	strb	r3, [r7, #7]
 8002538:	4613      	mov	r3, r2
 800253a:	71bb      	strb	r3, [r7, #6]
	if (casilla_n == ubicacion) {
 800253c:	79ba      	ldrb	r2, [r7, #6]
 800253e:	79fb      	ldrb	r3, [r7, #7]
 8002540:	429a      	cmp	r2, r3
 8002542:	d117      	bne.n	8002574 <envio_ubicacion+0x48>
		sprintf(mensaje, "%d", ubicacion);
 8002544:	79fb      	ldrb	r3, [r7, #7]
 8002546:	461a      	mov	r2, r3
 8002548:	490c      	ldr	r1, [pc, #48]	@ (800257c <envio_ubicacion+0x50>)
 800254a:	480d      	ldr	r0, [pc, #52]	@ (8002580 <envio_ubicacion+0x54>)
 800254c:	f004 f990 	bl	8006870 <siprintf>
		strcat(mensaje, "\r\n");
 8002550:	480b      	ldr	r0, [pc, #44]	@ (8002580 <envio_ubicacion+0x54>)
 8002552:	f7fd fe3d 	bl	80001d0 <strlen>
 8002556:	4603      	mov	r3, r0
 8002558:	461a      	mov	r2, r3
 800255a:	4b09      	ldr	r3, [pc, #36]	@ (8002580 <envio_ubicacion+0x54>)
 800255c:	4413      	add	r3, r2
 800255e:	4a09      	ldr	r2, [pc, #36]	@ (8002584 <envio_ubicacion+0x58>)
 8002560:	8811      	ldrh	r1, [r2, #0]
 8002562:	7892      	ldrb	r2, [r2, #2]
 8002564:	8019      	strh	r1, [r3, #0]
 8002566:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(&huart5, (uint8_t*) mensaje, sizeof(mensaje), delay);
 8002568:	2332      	movs	r3, #50	@ 0x32
 800256a:	2220      	movs	r2, #32
 800256c:	4904      	ldr	r1, [pc, #16]	@ (8002580 <envio_ubicacion+0x54>)
 800256e:	4806      	ldr	r0, [pc, #24]	@ (8002588 <envio_ubicacion+0x5c>)
 8002570:	f003 f9b6 	bl	80058e0 <HAL_UART_Transmit>
	}

}
 8002574:	bf00      	nop
 8002576:	3708      	adds	r7, #8
 8002578:	46bd      	mov	sp, r7
 800257a:	bd80      	pop	{r7, pc}
 800257c:	080071c8 	.word	0x080071c8
 8002580:	200001b8 	.word	0x200001b8
 8002584:	080071cc 	.word	0x080071cc
 8002588:	20000170 	.word	0x20000170

0800258c <envio_pared>:

void envio_pared(void) {
 800258c:	b5b0      	push	{r4, r5, r7, lr}
 800258e:	af00      	add	r7, sp, #0
		strcat(mensaje, "Choque pared \r\n");
 8002590:	480b      	ldr	r0, [pc, #44]	@ (80025c0 <envio_pared+0x34>)
 8002592:	f7fd fe1d 	bl	80001d0 <strlen>
 8002596:	4603      	mov	r3, r0
 8002598:	461a      	mov	r2, r3
 800259a:	4b09      	ldr	r3, [pc, #36]	@ (80025c0 <envio_pared+0x34>)
 800259c:	4413      	add	r3, r2
 800259e:	4a09      	ldr	r2, [pc, #36]	@ (80025c4 <envio_pared+0x38>)
 80025a0:	461c      	mov	r4, r3
 80025a2:	4615      	mov	r5, r2
 80025a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80025a6:	6020      	str	r0, [r4, #0]
 80025a8:	6061      	str	r1, [r4, #4]
 80025aa:	60a2      	str	r2, [r4, #8]
 80025ac:	60e3      	str	r3, [r4, #12]
		HAL_UART_Transmit(&huart5, (uint8_t*) mensaje, sizeof(mensaje), delay);
 80025ae:	2332      	movs	r3, #50	@ 0x32
 80025b0:	2220      	movs	r2, #32
 80025b2:	4903      	ldr	r1, [pc, #12]	@ (80025c0 <envio_pared+0x34>)
 80025b4:	4804      	ldr	r0, [pc, #16]	@ (80025c8 <envio_pared+0x3c>)
 80025b6:	f003 f993 	bl	80058e0 <HAL_UART_Transmit>
}
 80025ba:	bf00      	nop
 80025bc:	bdb0      	pop	{r4, r5, r7, pc}
 80025be:	bf00      	nop
 80025c0:	200001b8 	.word	0x200001b8
 80025c4:	080071d0 	.word	0x080071d0
 80025c8:	20000170 	.word	0x20000170

080025cc <envio_llegada>:

void envio_llegada(void) {
 80025cc:	b5b0      	push	{r4, r5, r7, lr}
 80025ce:	af00      	add	r7, sp, #0
		strcat(mensaje, "Llegue a la meta \r\n");
 80025d0:	480c      	ldr	r0, [pc, #48]	@ (8002604 <envio_llegada+0x38>)
 80025d2:	f7fd fdfd 	bl	80001d0 <strlen>
 80025d6:	4603      	mov	r3, r0
 80025d8:	461a      	mov	r2, r3
 80025da:	4b0a      	ldr	r3, [pc, #40]	@ (8002604 <envio_llegada+0x38>)
 80025dc:	4413      	add	r3, r2
 80025de:	4a0a      	ldr	r2, [pc, #40]	@ (8002608 <envio_llegada+0x3c>)
 80025e0:	461d      	mov	r5, r3
 80025e2:	4614      	mov	r4, r2
 80025e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80025e6:	6028      	str	r0, [r5, #0]
 80025e8:	6069      	str	r1, [r5, #4]
 80025ea:	60aa      	str	r2, [r5, #8]
 80025ec:	60eb      	str	r3, [r5, #12]
 80025ee:	6820      	ldr	r0, [r4, #0]
 80025f0:	6128      	str	r0, [r5, #16]
		HAL_UART_Transmit(&huart5, (uint8_t*) mensaje, sizeof(mensaje), delay);
 80025f2:	2332      	movs	r3, #50	@ 0x32
 80025f4:	2220      	movs	r2, #32
 80025f6:	4903      	ldr	r1, [pc, #12]	@ (8002604 <envio_llegada+0x38>)
 80025f8:	4804      	ldr	r0, [pc, #16]	@ (800260c <envio_llegada+0x40>)
 80025fa:	f003 f971 	bl	80058e0 <HAL_UART_Transmit>
}
 80025fe:	bf00      	nop
 8002600:	bdb0      	pop	{r4, r5, r7, pc}
 8002602:	bf00      	nop
 8002604:	200001b8 	.word	0x200001b8
 8002608:	080071e0 	.word	0x080071e0
 800260c:	20000170 	.word	0x20000170

08002610 <envio_casilla_n>:
void envio_casilla_n(uint8_t casilla_n) {
 8002610:	b5b0      	push	{r4, r5, r7, lr}
 8002612:	b082      	sub	sp, #8
 8002614:	af00      	add	r7, sp, #0
 8002616:	4603      	mov	r3, r0
 8002618:	71fb      	strb	r3, [r7, #7]
	sprintf(mensaje, "%d", casilla_n);
 800261a:	79fb      	ldrb	r3, [r7, #7]
 800261c:	461a      	mov	r2, r3
 800261e:	4910      	ldr	r1, [pc, #64]	@ (8002660 <envio_casilla_n+0x50>)
 8002620:	4810      	ldr	r0, [pc, #64]	@ (8002664 <envio_casilla_n+0x54>)
 8002622:	f004 f925 	bl	8006870 <siprintf>
	strcat(mensaje, "Siguiente casilla: \r\n");
 8002626:	480f      	ldr	r0, [pc, #60]	@ (8002664 <envio_casilla_n+0x54>)
 8002628:	f7fd fdd2 	bl	80001d0 <strlen>
 800262c:	4603      	mov	r3, r0
 800262e:	461a      	mov	r2, r3
 8002630:	4b0c      	ldr	r3, [pc, #48]	@ (8002664 <envio_casilla_n+0x54>)
 8002632:	4413      	add	r3, r2
 8002634:	4a0c      	ldr	r2, [pc, #48]	@ (8002668 <envio_casilla_n+0x58>)
 8002636:	461d      	mov	r5, r3
 8002638:	4614      	mov	r4, r2
 800263a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800263c:	6028      	str	r0, [r5, #0]
 800263e:	6069      	str	r1, [r5, #4]
 8002640:	60aa      	str	r2, [r5, #8]
 8002642:	60eb      	str	r3, [r5, #12]
 8002644:	6820      	ldr	r0, [r4, #0]
 8002646:	6128      	str	r0, [r5, #16]
 8002648:	88a3      	ldrh	r3, [r4, #4]
 800264a:	82ab      	strh	r3, [r5, #20]
	HAL_UART_Transmit(&huart5, (uint8_t*) mensaje, sizeof(mensaje), delay);
 800264c:	2332      	movs	r3, #50	@ 0x32
 800264e:	2220      	movs	r2, #32
 8002650:	4904      	ldr	r1, [pc, #16]	@ (8002664 <envio_casilla_n+0x54>)
 8002652:	4806      	ldr	r0, [pc, #24]	@ (800266c <envio_casilla_n+0x5c>)
 8002654:	f003 f944 	bl	80058e0 <HAL_UART_Transmit>
}
 8002658:	bf00      	nop
 800265a:	3708      	adds	r7, #8
 800265c:	46bd      	mov	sp, r7
 800265e:	bdb0      	pop	{r4, r5, r7, pc}
 8002660:	080071c8 	.word	0x080071c8
 8002664:	200001b8 	.word	0x200001b8
 8002668:	080071f4 	.word	0x080071f4
 800266c:	20000170 	.word	0x20000170

08002670 <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 8002670:	b480      	push	{r7}
 8002672:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002674:	b672      	cpsid	i
}
 8002676:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002678:	bf00      	nop
 800267a:	e7fd      	b.n	8002678 <Error_Handler+0x8>

0800267c <HAL_MspInit>:
 800267c:	b580      	push	{r7, lr}
 800267e:	b082      	sub	sp, #8
 8002680:	af00      	add	r7, sp, #0
 8002682:	2300      	movs	r3, #0
 8002684:	607b      	str	r3, [r7, #4]
 8002686:	4b10      	ldr	r3, [pc, #64]	@ (80026c8 <HAL_MspInit+0x4c>)
 8002688:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800268a:	4a0f      	ldr	r2, [pc, #60]	@ (80026c8 <HAL_MspInit+0x4c>)
 800268c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002690:	6453      	str	r3, [r2, #68]	@ 0x44
 8002692:	4b0d      	ldr	r3, [pc, #52]	@ (80026c8 <HAL_MspInit+0x4c>)
 8002694:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002696:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800269a:	607b      	str	r3, [r7, #4]
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	2300      	movs	r3, #0
 80026a0:	603b      	str	r3, [r7, #0]
 80026a2:	4b09      	ldr	r3, [pc, #36]	@ (80026c8 <HAL_MspInit+0x4c>)
 80026a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026a6:	4a08      	ldr	r2, [pc, #32]	@ (80026c8 <HAL_MspInit+0x4c>)
 80026a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80026ac:	6413      	str	r3, [r2, #64]	@ 0x40
 80026ae:	4b06      	ldr	r3, [pc, #24]	@ (80026c8 <HAL_MspInit+0x4c>)
 80026b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026b2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80026b6:	603b      	str	r3, [r7, #0]
 80026b8:	683b      	ldr	r3, [r7, #0]
 80026ba:	2007      	movs	r0, #7
 80026bc:	f000 ff72 	bl	80035a4 <HAL_NVIC_SetPriorityGrouping>
 80026c0:	bf00      	nop
 80026c2:	3708      	adds	r7, #8
 80026c4:	46bd      	mov	sp, r7
 80026c6:	bd80      	pop	{r7, pc}
 80026c8:	40023800 	.word	0x40023800

080026cc <HAL_ADC_MspInit>:
 80026cc:	b580      	push	{r7, lr}
 80026ce:	b08a      	sub	sp, #40	@ 0x28
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	6078      	str	r0, [r7, #4]
 80026d4:	f107 0314 	add.w	r3, r7, #20
 80026d8:	2200      	movs	r2, #0
 80026da:	601a      	str	r2, [r3, #0]
 80026dc:	605a      	str	r2, [r3, #4]
 80026de:	609a      	str	r2, [r3, #8]
 80026e0:	60da      	str	r2, [r3, #12]
 80026e2:	611a      	str	r2, [r3, #16]
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	4a2f      	ldr	r2, [pc, #188]	@ (80027a8 <HAL_ADC_MspInit+0xdc>)
 80026ea:	4293      	cmp	r3, r2
 80026ec:	d158      	bne.n	80027a0 <HAL_ADC_MspInit+0xd4>
 80026ee:	2300      	movs	r3, #0
 80026f0:	613b      	str	r3, [r7, #16]
 80026f2:	4b2e      	ldr	r3, [pc, #184]	@ (80027ac <HAL_ADC_MspInit+0xe0>)
 80026f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026f6:	4a2d      	ldr	r2, [pc, #180]	@ (80027ac <HAL_ADC_MspInit+0xe0>)
 80026f8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80026fc:	6453      	str	r3, [r2, #68]	@ 0x44
 80026fe:	4b2b      	ldr	r3, [pc, #172]	@ (80027ac <HAL_ADC_MspInit+0xe0>)
 8002700:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002702:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002706:	613b      	str	r3, [r7, #16]
 8002708:	693b      	ldr	r3, [r7, #16]
 800270a:	2300      	movs	r3, #0
 800270c:	60fb      	str	r3, [r7, #12]
 800270e:	4b27      	ldr	r3, [pc, #156]	@ (80027ac <HAL_ADC_MspInit+0xe0>)
 8002710:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002712:	4a26      	ldr	r2, [pc, #152]	@ (80027ac <HAL_ADC_MspInit+0xe0>)
 8002714:	f043 0302 	orr.w	r3, r3, #2
 8002718:	6313      	str	r3, [r2, #48]	@ 0x30
 800271a:	4b24      	ldr	r3, [pc, #144]	@ (80027ac <HAL_ADC_MspInit+0xe0>)
 800271c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800271e:	f003 0302 	and.w	r3, r3, #2
 8002722:	60fb      	str	r3, [r7, #12]
 8002724:	68fb      	ldr	r3, [r7, #12]
 8002726:	2303      	movs	r3, #3
 8002728:	617b      	str	r3, [r7, #20]
 800272a:	2303      	movs	r3, #3
 800272c:	61bb      	str	r3, [r7, #24]
 800272e:	2300      	movs	r3, #0
 8002730:	61fb      	str	r3, [r7, #28]
 8002732:	f107 0314 	add.w	r3, r7, #20
 8002736:	4619      	mov	r1, r3
 8002738:	481d      	ldr	r0, [pc, #116]	@ (80027b0 <HAL_ADC_MspInit+0xe4>)
 800273a:	f001 fb77 	bl	8003e2c <HAL_GPIO_Init>
 800273e:	4b1d      	ldr	r3, [pc, #116]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002740:	4a1d      	ldr	r2, [pc, #116]	@ (80027b8 <HAL_ADC_MspInit+0xec>)
 8002742:	601a      	str	r2, [r3, #0]
 8002744:	4b1b      	ldr	r3, [pc, #108]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002746:	2200      	movs	r2, #0
 8002748:	605a      	str	r2, [r3, #4]
 800274a:	4b1a      	ldr	r3, [pc, #104]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 800274c:	2200      	movs	r2, #0
 800274e:	609a      	str	r2, [r3, #8]
 8002750:	4b18      	ldr	r3, [pc, #96]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002752:	2200      	movs	r2, #0
 8002754:	60da      	str	r2, [r3, #12]
 8002756:	4b17      	ldr	r3, [pc, #92]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002758:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800275c:	611a      	str	r2, [r3, #16]
 800275e:	4b15      	ldr	r3, [pc, #84]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002760:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8002764:	615a      	str	r2, [r3, #20]
 8002766:	4b13      	ldr	r3, [pc, #76]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002768:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800276c:	619a      	str	r2, [r3, #24]
 800276e:	4b11      	ldr	r3, [pc, #68]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002770:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002774:	61da      	str	r2, [r3, #28]
 8002776:	4b0f      	ldr	r3, [pc, #60]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002778:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800277c:	621a      	str	r2, [r3, #32]
 800277e:	4b0d      	ldr	r3, [pc, #52]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002780:	2200      	movs	r2, #0
 8002782:	625a      	str	r2, [r3, #36]	@ 0x24
 8002784:	480b      	ldr	r0, [pc, #44]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002786:	f000 ff4f 	bl	8003628 <HAL_DMA_Init>
 800278a:	4603      	mov	r3, r0
 800278c:	2b00      	cmp	r3, #0
 800278e:	d001      	beq.n	8002794 <HAL_ADC_MspInit+0xc8>
 8002790:	f7ff ff6e 	bl	8002670 <Error_Handler>
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	4a07      	ldr	r2, [pc, #28]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 8002798:	639a      	str	r2, [r3, #56]	@ 0x38
 800279a:	4a06      	ldr	r2, [pc, #24]	@ (80027b4 <HAL_ADC_MspInit+0xe8>)
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	6393      	str	r3, [r2, #56]	@ 0x38
 80027a0:	bf00      	nop
 80027a2:	3728      	adds	r7, #40	@ 0x28
 80027a4:	46bd      	mov	sp, r7
 80027a6:	bd80      	pop	{r7, pc}
 80027a8:	40012000 	.word	0x40012000
 80027ac:	40023800 	.word	0x40023800
 80027b0:	40020400 	.word	0x40020400
 80027b4:	200000c8 	.word	0x200000c8
 80027b8:	40026410 	.word	0x40026410

080027bc <HAL_TIM_Base_MspInit>:
 80027bc:	b480      	push	{r7}
 80027be:	b085      	sub	sp, #20
 80027c0:	af00      	add	r7, sp, #0
 80027c2:	6078      	str	r0, [r7, #4]
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	4a0b      	ldr	r2, [pc, #44]	@ (80027f8 <HAL_TIM_Base_MspInit+0x3c>)
 80027ca:	4293      	cmp	r3, r2
 80027cc:	d10d      	bne.n	80027ea <HAL_TIM_Base_MspInit+0x2e>
 80027ce:	2300      	movs	r3, #0
 80027d0:	60fb      	str	r3, [r7, #12]
 80027d2:	4b0a      	ldr	r3, [pc, #40]	@ (80027fc <HAL_TIM_Base_MspInit+0x40>)
 80027d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027d6:	4a09      	ldr	r2, [pc, #36]	@ (80027fc <HAL_TIM_Base_MspInit+0x40>)
 80027d8:	f043 0302 	orr.w	r3, r3, #2
 80027dc:	6413      	str	r3, [r2, #64]	@ 0x40
 80027de:	4b07      	ldr	r3, [pc, #28]	@ (80027fc <HAL_TIM_Base_MspInit+0x40>)
 80027e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027e2:	f003 0302 	and.w	r3, r3, #2
 80027e6:	60fb      	str	r3, [r7, #12]
 80027e8:	68fb      	ldr	r3, [r7, #12]
 80027ea:	bf00      	nop
 80027ec:	3714      	adds	r7, #20
 80027ee:	46bd      	mov	sp, r7
 80027f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f4:	4770      	bx	lr
 80027f6:	bf00      	nop
 80027f8:	40000400 	.word	0x40000400
 80027fc:	40023800 	.word	0x40023800

08002800 <HAL_TIM_MspPostInit>:
 8002800:	b580      	push	{r7, lr}
 8002802:	b088      	sub	sp, #32
 8002804:	af00      	add	r7, sp, #0
 8002806:	6078      	str	r0, [r7, #4]
 8002808:	f107 030c 	add.w	r3, r7, #12
 800280c:	2200      	movs	r2, #0
 800280e:	601a      	str	r2, [r3, #0]
 8002810:	605a      	str	r2, [r3, #4]
 8002812:	609a      	str	r2, [r3, #8]
 8002814:	60da      	str	r2, [r3, #12]
 8002816:	611a      	str	r2, [r3, #16]
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	4a12      	ldr	r2, [pc, #72]	@ (8002868 <HAL_TIM_MspPostInit+0x68>)
 800281e:	4293      	cmp	r3, r2
 8002820:	d11e      	bne.n	8002860 <HAL_TIM_MspPostInit+0x60>
 8002822:	2300      	movs	r3, #0
 8002824:	60bb      	str	r3, [r7, #8]
 8002826:	4b11      	ldr	r3, [pc, #68]	@ (800286c <HAL_TIM_MspPostInit+0x6c>)
 8002828:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800282a:	4a10      	ldr	r2, [pc, #64]	@ (800286c <HAL_TIM_MspPostInit+0x6c>)
 800282c:	f043 0304 	orr.w	r3, r3, #4
 8002830:	6313      	str	r3, [r2, #48]	@ 0x30
 8002832:	4b0e      	ldr	r3, [pc, #56]	@ (800286c <HAL_TIM_MspPostInit+0x6c>)
 8002834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002836:	f003 0304 	and.w	r3, r3, #4
 800283a:	60bb      	str	r3, [r7, #8]
 800283c:	68bb      	ldr	r3, [r7, #8]
 800283e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002842:	60fb      	str	r3, [r7, #12]
 8002844:	2302      	movs	r3, #2
 8002846:	613b      	str	r3, [r7, #16]
 8002848:	2300      	movs	r3, #0
 800284a:	617b      	str	r3, [r7, #20]
 800284c:	2300      	movs	r3, #0
 800284e:	61bb      	str	r3, [r7, #24]
 8002850:	2302      	movs	r3, #2
 8002852:	61fb      	str	r3, [r7, #28]
 8002854:	f107 030c 	add.w	r3, r7, #12
 8002858:	4619      	mov	r1, r3
 800285a:	4805      	ldr	r0, [pc, #20]	@ (8002870 <HAL_TIM_MspPostInit+0x70>)
 800285c:	f001 fae6 	bl	8003e2c <HAL_GPIO_Init>
 8002860:	bf00      	nop
 8002862:	3720      	adds	r7, #32
 8002864:	46bd      	mov	sp, r7
 8002866:	bd80      	pop	{r7, pc}
 8002868:	40000400 	.word	0x40000400
 800286c:	40023800 	.word	0x40023800
 8002870:	40020800 	.word	0x40020800

08002874 <HAL_UART_MspInit>:
 8002874:	b580      	push	{r7, lr}
 8002876:	b08a      	sub	sp, #40	@ 0x28
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
 800287c:	f107 0314 	add.w	r3, r7, #20
 8002880:	2200      	movs	r2, #0
 8002882:	601a      	str	r2, [r3, #0]
 8002884:	605a      	str	r2, [r3, #4]
 8002886:	609a      	str	r2, [r3, #8]
 8002888:	60da      	str	r2, [r3, #12]
 800288a:	611a      	str	r2, [r3, #16]
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a2c      	ldr	r2, [pc, #176]	@ (8002944 <HAL_UART_MspInit+0xd0>)
 8002892:	4293      	cmp	r3, r2
 8002894:	d152      	bne.n	800293c <HAL_UART_MspInit+0xc8>
 8002896:	2300      	movs	r3, #0
 8002898:	613b      	str	r3, [r7, #16]
 800289a:	4b2b      	ldr	r3, [pc, #172]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 800289c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800289e:	4a2a      	ldr	r2, [pc, #168]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028a0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80028a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80028a6:	4b28      	ldr	r3, [pc, #160]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028aa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80028ae:	613b      	str	r3, [r7, #16]
 80028b0:	693b      	ldr	r3, [r7, #16]
 80028b2:	2300      	movs	r3, #0
 80028b4:	60fb      	str	r3, [r7, #12]
 80028b6:	4b24      	ldr	r3, [pc, #144]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028ba:	4a23      	ldr	r2, [pc, #140]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028bc:	f043 0304 	orr.w	r3, r3, #4
 80028c0:	6313      	str	r3, [r2, #48]	@ 0x30
 80028c2:	4b21      	ldr	r3, [pc, #132]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028c6:	f003 0304 	and.w	r3, r3, #4
 80028ca:	60fb      	str	r3, [r7, #12]
 80028cc:	68fb      	ldr	r3, [r7, #12]
 80028ce:	2300      	movs	r3, #0
 80028d0:	60bb      	str	r3, [r7, #8]
 80028d2:	4b1d      	ldr	r3, [pc, #116]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028d6:	4a1c      	ldr	r2, [pc, #112]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028d8:	f043 0308 	orr.w	r3, r3, #8
 80028dc:	6313      	str	r3, [r2, #48]	@ 0x30
 80028de:	4b1a      	ldr	r3, [pc, #104]	@ (8002948 <HAL_UART_MspInit+0xd4>)
 80028e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028e2:	f003 0308 	and.w	r3, r3, #8
 80028e6:	60bb      	str	r3, [r7, #8]
 80028e8:	68bb      	ldr	r3, [r7, #8]
 80028ea:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80028ee:	617b      	str	r3, [r7, #20]
 80028f0:	2302      	movs	r3, #2
 80028f2:	61bb      	str	r3, [r7, #24]
 80028f4:	2300      	movs	r3, #0
 80028f6:	61fb      	str	r3, [r7, #28]
 80028f8:	2303      	movs	r3, #3
 80028fa:	623b      	str	r3, [r7, #32]
 80028fc:	2308      	movs	r3, #8
 80028fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8002900:	f107 0314 	add.w	r3, r7, #20
 8002904:	4619      	mov	r1, r3
 8002906:	4811      	ldr	r0, [pc, #68]	@ (800294c <HAL_UART_MspInit+0xd8>)
 8002908:	f001 fa90 	bl	8003e2c <HAL_GPIO_Init>
 800290c:	2304      	movs	r3, #4
 800290e:	617b      	str	r3, [r7, #20]
 8002910:	2302      	movs	r3, #2
 8002912:	61bb      	str	r3, [r7, #24]
 8002914:	2300      	movs	r3, #0
 8002916:	61fb      	str	r3, [r7, #28]
 8002918:	2303      	movs	r3, #3
 800291a:	623b      	str	r3, [r7, #32]
 800291c:	2308      	movs	r3, #8
 800291e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002920:	f107 0314 	add.w	r3, r7, #20
 8002924:	4619      	mov	r1, r3
 8002926:	480a      	ldr	r0, [pc, #40]	@ (8002950 <HAL_UART_MspInit+0xdc>)
 8002928:	f001 fa80 	bl	8003e2c <HAL_GPIO_Init>
 800292c:	2200      	movs	r2, #0
 800292e:	2100      	movs	r1, #0
 8002930:	2035      	movs	r0, #53	@ 0x35
 8002932:	f000 fe42 	bl	80035ba <HAL_NVIC_SetPriority>
 8002936:	2035      	movs	r0, #53	@ 0x35
 8002938:	f000 fe5b 	bl	80035f2 <HAL_NVIC_EnableIRQ>
 800293c:	bf00      	nop
 800293e:	3728      	adds	r7, #40	@ 0x28
 8002940:	46bd      	mov	sp, r7
 8002942:	bd80      	pop	{r7, pc}
 8002944:	40005000 	.word	0x40005000
 8002948:	40023800 	.word	0x40023800
 800294c:	40020800 	.word	0x40020800
 8002950:	40020c00 	.word	0x40020c00

08002954 <NMI_Handler>:
 8002954:	b480      	push	{r7}
 8002956:	af00      	add	r7, sp, #0
 8002958:	bf00      	nop
 800295a:	e7fd      	b.n	8002958 <NMI_Handler+0x4>

0800295c <HardFault_Handler>:
 800295c:	b480      	push	{r7}
 800295e:	af00      	add	r7, sp, #0
 8002960:	bf00      	nop
 8002962:	e7fd      	b.n	8002960 <HardFault_Handler+0x4>

08002964 <MemManage_Handler>:
 8002964:	b480      	push	{r7}
 8002966:	af00      	add	r7, sp, #0
 8002968:	bf00      	nop
 800296a:	e7fd      	b.n	8002968 <MemManage_Handler+0x4>

0800296c <BusFault_Handler>:
 800296c:	b480      	push	{r7}
 800296e:	af00      	add	r7, sp, #0
 8002970:	bf00      	nop
 8002972:	e7fd      	b.n	8002970 <BusFault_Handler+0x4>

08002974 <UsageFault_Handler>:
 8002974:	b480      	push	{r7}
 8002976:	af00      	add	r7, sp, #0
 8002978:	bf00      	nop
 800297a:	e7fd      	b.n	8002978 <UsageFault_Handler+0x4>

0800297c <SVC_Handler>:
 800297c:	b480      	push	{r7}
 800297e:	af00      	add	r7, sp, #0
 8002980:	bf00      	nop
 8002982:	46bd      	mov	sp, r7
 8002984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002988:	4770      	bx	lr

0800298a <DebugMon_Handler>:
 800298a:	b480      	push	{r7}
 800298c:	af00      	add	r7, sp, #0
 800298e:	bf00      	nop
 8002990:	46bd      	mov	sp, r7
 8002992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002996:	4770      	bx	lr

08002998 <PendSV_Handler>:
 8002998:	b480      	push	{r7}
 800299a:	af00      	add	r7, sp, #0
 800299c:	bf00      	nop
 800299e:	46bd      	mov	sp, r7
 80029a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029a4:	4770      	bx	lr

080029a6 <SysTick_Handler>:
 80029a6:	b580      	push	{r7, lr}
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	f000 f8e5 	bl	8002b78 <HAL_IncTick>
 80029ae:	bf00      	nop
 80029b0:	bd80      	pop	{r7, pc}

080029b2 <EXTI9_5_IRQHandler>:
 80029b2:	b580      	push	{r7, lr}
 80029b4:	af00      	add	r7, sp, #0
 80029b6:	2040      	movs	r0, #64	@ 0x40
 80029b8:	f001 fc06 	bl	80041c8 <HAL_GPIO_EXTI_IRQHandler>
 80029bc:	2080      	movs	r0, #128	@ 0x80
 80029be:	f001 fc03 	bl	80041c8 <HAL_GPIO_EXTI_IRQHandler>
 80029c2:	bf00      	nop
 80029c4:	bd80      	pop	{r7, pc}
	...

080029c8 <UART5_IRQHandler>:
 80029c8:	b580      	push	{r7, lr}
 80029ca:	af00      	add	r7, sp, #0
 80029cc:	4802      	ldr	r0, [pc, #8]	@ (80029d8 <UART5_IRQHandler+0x10>)
 80029ce:	f003 f813 	bl	80059f8 <HAL_UART_IRQHandler>
 80029d2:	bf00      	nop
 80029d4:	bd80      	pop	{r7, pc}
 80029d6:	bf00      	nop
 80029d8:	20000170 	.word	0x20000170

080029dc <DMA2_Stream0_IRQHandler>:
 80029dc:	b580      	push	{r7, lr}
 80029de:	af00      	add	r7, sp, #0
 80029e0:	4802      	ldr	r0, [pc, #8]	@ (80029ec <DMA2_Stream0_IRQHandler+0x10>)
 80029e2:	f000 ffb9 	bl	8003958 <HAL_DMA_IRQHandler>
 80029e6:	bf00      	nop
 80029e8:	bd80      	pop	{r7, pc}
 80029ea:	bf00      	nop
 80029ec:	200000c8 	.word	0x200000c8

080029f0 <_sbrk>:
 80029f0:	b580      	push	{r7, lr}
 80029f2:	b086      	sub	sp, #24
 80029f4:	af00      	add	r7, sp, #0
 80029f6:	6078      	str	r0, [r7, #4]
 80029f8:	4a14      	ldr	r2, [pc, #80]	@ (8002a4c <_sbrk+0x5c>)
 80029fa:	4b15      	ldr	r3, [pc, #84]	@ (8002a50 <_sbrk+0x60>)
 80029fc:	1ad3      	subs	r3, r2, r3
 80029fe:	617b      	str	r3, [r7, #20]
 8002a00:	697b      	ldr	r3, [r7, #20]
 8002a02:	613b      	str	r3, [r7, #16]
 8002a04:	4b13      	ldr	r3, [pc, #76]	@ (8002a54 <_sbrk+0x64>)
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d102      	bne.n	8002a12 <_sbrk+0x22>
 8002a0c:	4b11      	ldr	r3, [pc, #68]	@ (8002a54 <_sbrk+0x64>)
 8002a0e:	4a12      	ldr	r2, [pc, #72]	@ (8002a58 <_sbrk+0x68>)
 8002a10:	601a      	str	r2, [r3, #0]
 8002a12:	4b10      	ldr	r3, [pc, #64]	@ (8002a54 <_sbrk+0x64>)
 8002a14:	681a      	ldr	r2, [r3, #0]
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	4413      	add	r3, r2
 8002a1a:	693a      	ldr	r2, [r7, #16]
 8002a1c:	429a      	cmp	r2, r3
 8002a1e:	d207      	bcs.n	8002a30 <_sbrk+0x40>
 8002a20:	f003 ff50 	bl	80068c4 <__errno>
 8002a24:	4603      	mov	r3, r0
 8002a26:	220c      	movs	r2, #12
 8002a28:	601a      	str	r2, [r3, #0]
 8002a2a:	f04f 33ff 	mov.w	r3, #4294967295
 8002a2e:	e009      	b.n	8002a44 <_sbrk+0x54>
 8002a30:	4b08      	ldr	r3, [pc, #32]	@ (8002a54 <_sbrk+0x64>)
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	60fb      	str	r3, [r7, #12]
 8002a36:	4b07      	ldr	r3, [pc, #28]	@ (8002a54 <_sbrk+0x64>)
 8002a38:	681a      	ldr	r2, [r3, #0]
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	4413      	add	r3, r2
 8002a3e:	4a05      	ldr	r2, [pc, #20]	@ (8002a54 <_sbrk+0x64>)
 8002a40:	6013      	str	r3, [r2, #0]
 8002a42:	68fb      	ldr	r3, [r7, #12]
 8002a44:	4618      	mov	r0, r3
 8002a46:	3718      	adds	r7, #24
 8002a48:	46bd      	mov	sp, r7
 8002a4a:	bd80      	pop	{r7, pc}
 8002a4c:	20020000 	.word	0x20020000
 8002a50:	00000400 	.word	0x00000400
 8002a54:	200002c0 	.word	0x200002c0
 8002a58:	20000410 	.word	0x20000410

08002a5c <SystemInit>:
 8002a5c:	b480      	push	{r7}
 8002a5e:	af00      	add	r7, sp, #0
 8002a60:	4b06      	ldr	r3, [pc, #24]	@ (8002a7c <SystemInit+0x20>)
 8002a62:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002a66:	4a05      	ldr	r2, [pc, #20]	@ (8002a7c <SystemInit+0x20>)
 8002a68:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002a6c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8002a70:	bf00      	nop
 8002a72:	46bd      	mov	sp, r7
 8002a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a78:	4770      	bx	lr
 8002a7a:	bf00      	nop
 8002a7c:	e000ed00 	.word	0xe000ed00

08002a80 <Reset_Handler>:
 8002a80:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002ab8 <LoopFillZerobss+0xe>
 8002a84:	f7ff ffea 	bl	8002a5c <SystemInit>
 8002a88:	480c      	ldr	r0, [pc, #48]	@ (8002abc <LoopFillZerobss+0x12>)
 8002a8a:	490d      	ldr	r1, [pc, #52]	@ (8002ac0 <LoopFillZerobss+0x16>)
 8002a8c:	4a0d      	ldr	r2, [pc, #52]	@ (8002ac4 <LoopFillZerobss+0x1a>)
 8002a8e:	2300      	movs	r3, #0
 8002a90:	e002      	b.n	8002a98 <LoopCopyDataInit>

08002a92 <CopyDataInit>:
 8002a92:	58d4      	ldr	r4, [r2, r3]
 8002a94:	50c4      	str	r4, [r0, r3]
 8002a96:	3304      	adds	r3, #4

08002a98 <LoopCopyDataInit>:
 8002a98:	18c4      	adds	r4, r0, r3
 8002a9a:	428c      	cmp	r4, r1
 8002a9c:	d3f9      	bcc.n	8002a92 <CopyDataInit>
 8002a9e:	4a0a      	ldr	r2, [pc, #40]	@ (8002ac8 <LoopFillZerobss+0x1e>)
 8002aa0:	4c0a      	ldr	r4, [pc, #40]	@ (8002acc <LoopFillZerobss+0x22>)
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	e001      	b.n	8002aaa <LoopFillZerobss>

08002aa6 <FillZerobss>:
 8002aa6:	6013      	str	r3, [r2, #0]
 8002aa8:	3204      	adds	r2, #4

08002aaa <LoopFillZerobss>:
 8002aaa:	42a2      	cmp	r2, r4
 8002aac:	d3fb      	bcc.n	8002aa6 <FillZerobss>
 8002aae:	f003 ff0f 	bl	80068d0 <__libc_init_array>
 8002ab2:	f7fe f881 	bl	8000bb8 <main>
 8002ab6:	4770      	bx	lr
 8002ab8:	20020000 	.word	0x20020000
 8002abc:	20000000 	.word	0x20000000
 8002ac0:	20000064 	.word	0x20000064
 8002ac4:	08007270 	.word	0x08007270
 8002ac8:	20000064 	.word	0x20000064
 8002acc:	20000410 	.word	0x20000410

08002ad0 <ADC_IRQHandler>:
 8002ad0:	e7fe      	b.n	8002ad0 <ADC_IRQHandler>
	...

08002ad4 <HAL_Init>:
 8002ad4:	b580      	push	{r7, lr}
 8002ad6:	af00      	add	r7, sp, #0
 8002ad8:	4b0e      	ldr	r3, [pc, #56]	@ (8002b14 <HAL_Init+0x40>)
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	4a0d      	ldr	r2, [pc, #52]	@ (8002b14 <HAL_Init+0x40>)
 8002ade:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002ae2:	6013      	str	r3, [r2, #0]
 8002ae4:	4b0b      	ldr	r3, [pc, #44]	@ (8002b14 <HAL_Init+0x40>)
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	4a0a      	ldr	r2, [pc, #40]	@ (8002b14 <HAL_Init+0x40>)
 8002aea:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002aee:	6013      	str	r3, [r2, #0]
 8002af0:	4b08      	ldr	r3, [pc, #32]	@ (8002b14 <HAL_Init+0x40>)
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	4a07      	ldr	r2, [pc, #28]	@ (8002b14 <HAL_Init+0x40>)
 8002af6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002afa:	6013      	str	r3, [r2, #0]
 8002afc:	2003      	movs	r0, #3
 8002afe:	f000 fd51 	bl	80035a4 <HAL_NVIC_SetPriorityGrouping>
 8002b02:	2000      	movs	r0, #0
 8002b04:	f000 f808 	bl	8002b18 <HAL_InitTick>
 8002b08:	f7ff fdb8 	bl	800267c <HAL_MspInit>
 8002b0c:	2300      	movs	r3, #0
 8002b0e:	4618      	mov	r0, r3
 8002b10:	bd80      	pop	{r7, pc}
 8002b12:	bf00      	nop
 8002b14:	40023c00 	.word	0x40023c00

08002b18 <HAL_InitTick>:
 8002b18:	b580      	push	{r7, lr}
 8002b1a:	b082      	sub	sp, #8
 8002b1c:	af00      	add	r7, sp, #0
 8002b1e:	6078      	str	r0, [r7, #4]
 8002b20:	4b12      	ldr	r3, [pc, #72]	@ (8002b6c <HAL_InitTick+0x54>)
 8002b22:	681a      	ldr	r2, [r3, #0]
 8002b24:	4b12      	ldr	r3, [pc, #72]	@ (8002b70 <HAL_InitTick+0x58>)
 8002b26:	781b      	ldrb	r3, [r3, #0]
 8002b28:	4619      	mov	r1, r3
 8002b2a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002b2e:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b32:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b36:	4618      	mov	r0, r3
 8002b38:	f000 fd69 	bl	800360e <HAL_SYSTICK_Config>
 8002b3c:	4603      	mov	r3, r0
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d001      	beq.n	8002b46 <HAL_InitTick+0x2e>
 8002b42:	2301      	movs	r3, #1
 8002b44:	e00e      	b.n	8002b64 <HAL_InitTick+0x4c>
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	2b0f      	cmp	r3, #15
 8002b4a:	d80a      	bhi.n	8002b62 <HAL_InitTick+0x4a>
 8002b4c:	2200      	movs	r2, #0
 8002b4e:	6879      	ldr	r1, [r7, #4]
 8002b50:	f04f 30ff 	mov.w	r0, #4294967295
 8002b54:	f000 fd31 	bl	80035ba <HAL_NVIC_SetPriority>
 8002b58:	4a06      	ldr	r2, [pc, #24]	@ (8002b74 <HAL_InitTick+0x5c>)
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	6013      	str	r3, [r2, #0]
 8002b5e:	2300      	movs	r3, #0
 8002b60:	e000      	b.n	8002b64 <HAL_InitTick+0x4c>
 8002b62:	2301      	movs	r3, #1
 8002b64:	4618      	mov	r0, r3
 8002b66:	3708      	adds	r7, #8
 8002b68:	46bd      	mov	sp, r7
 8002b6a:	bd80      	pop	{r7, pc}
 8002b6c:	20000008 	.word	0x20000008
 8002b70:	20000010 	.word	0x20000010
 8002b74:	2000000c 	.word	0x2000000c

08002b78 <HAL_IncTick>:
 8002b78:	b480      	push	{r7}
 8002b7a:	af00      	add	r7, sp, #0
 8002b7c:	4b06      	ldr	r3, [pc, #24]	@ (8002b98 <HAL_IncTick+0x20>)
 8002b7e:	781b      	ldrb	r3, [r3, #0]
 8002b80:	461a      	mov	r2, r3
 8002b82:	4b06      	ldr	r3, [pc, #24]	@ (8002b9c <HAL_IncTick+0x24>)
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	4413      	add	r3, r2
 8002b88:	4a04      	ldr	r2, [pc, #16]	@ (8002b9c <HAL_IncTick+0x24>)
 8002b8a:	6013      	str	r3, [r2, #0]
 8002b8c:	bf00      	nop
 8002b8e:	46bd      	mov	sp, r7
 8002b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b94:	4770      	bx	lr
 8002b96:	bf00      	nop
 8002b98:	20000010 	.word	0x20000010
 8002b9c:	200002c4 	.word	0x200002c4

08002ba0 <HAL_GetTick>:
 8002ba0:	b480      	push	{r7}
 8002ba2:	af00      	add	r7, sp, #0
 8002ba4:	4b03      	ldr	r3, [pc, #12]	@ (8002bb4 <HAL_GetTick+0x14>)
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	4618      	mov	r0, r3
 8002baa:	46bd      	mov	sp, r7
 8002bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bb0:	4770      	bx	lr
 8002bb2:	bf00      	nop
 8002bb4:	200002c4 	.word	0x200002c4

08002bb8 <HAL_Delay>:
 8002bb8:	b580      	push	{r7, lr}
 8002bba:	b084      	sub	sp, #16
 8002bbc:	af00      	add	r7, sp, #0
 8002bbe:	6078      	str	r0, [r7, #4]
 8002bc0:	f7ff ffee 	bl	8002ba0 <HAL_GetTick>
 8002bc4:	60b8      	str	r0, [r7, #8]
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	60fb      	str	r3, [r7, #12]
 8002bca:	68fb      	ldr	r3, [r7, #12]
 8002bcc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002bd0:	d005      	beq.n	8002bde <HAL_Delay+0x26>
 8002bd2:	4b0a      	ldr	r3, [pc, #40]	@ (8002bfc <HAL_Delay+0x44>)
 8002bd4:	781b      	ldrb	r3, [r3, #0]
 8002bd6:	461a      	mov	r2, r3
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	4413      	add	r3, r2
 8002bdc:	60fb      	str	r3, [r7, #12]
 8002bde:	bf00      	nop
 8002be0:	f7ff ffde 	bl	8002ba0 <HAL_GetTick>
 8002be4:	4602      	mov	r2, r0
 8002be6:	68bb      	ldr	r3, [r7, #8]
 8002be8:	1ad3      	subs	r3, r2, r3
 8002bea:	68fa      	ldr	r2, [r7, #12]
 8002bec:	429a      	cmp	r2, r3
 8002bee:	d8f7      	bhi.n	8002be0 <HAL_Delay+0x28>
 8002bf0:	bf00      	nop
 8002bf2:	bf00      	nop
 8002bf4:	3710      	adds	r7, #16
 8002bf6:	46bd      	mov	sp, r7
 8002bf8:	bd80      	pop	{r7, pc}
 8002bfa:	bf00      	nop
 8002bfc:	20000010 	.word	0x20000010

08002c00 <HAL_ADC_Init>:
 8002c00:	b580      	push	{r7, lr}
 8002c02:	b084      	sub	sp, #16
 8002c04:	af00      	add	r7, sp, #0
 8002c06:	6078      	str	r0, [r7, #4]
 8002c08:	2300      	movs	r3, #0
 8002c0a:	73fb      	strb	r3, [r7, #15]
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d101      	bne.n	8002c16 <HAL_ADC_Init+0x16>
 8002c12:	2301      	movs	r3, #1
 8002c14:	e033      	b.n	8002c7e <HAL_ADC_Init+0x7e>
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d109      	bne.n	8002c32 <HAL_ADC_Init+0x32>
 8002c1e:	6878      	ldr	r0, [r7, #4]
 8002c20:	f7ff fd54 	bl	80026cc <HAL_ADC_MspInit>
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	2200      	movs	r2, #0
 8002c28:	645a      	str	r2, [r3, #68]	@ 0x44
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	2200      	movs	r2, #0
 8002c2e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c36:	f003 0310 	and.w	r3, r3, #16
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d118      	bne.n	8002c70 <HAL_ADC_Init+0x70>
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c42:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002c46:	f023 0302 	bic.w	r3, r3, #2
 8002c4a:	f043 0202 	orr.w	r2, r3, #2
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	641a      	str	r2, [r3, #64]	@ 0x40
 8002c52:	6878      	ldr	r0, [r7, #4]
 8002c54:	f000 fa58 	bl	8003108 <ADC_Init>
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	2200      	movs	r2, #0
 8002c5c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c62:	f023 0303 	bic.w	r3, r3, #3
 8002c66:	f043 0201 	orr.w	r2, r3, #1
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002c6e:	e001      	b.n	8002c74 <HAL_ADC_Init+0x74>
 8002c70:	2301      	movs	r3, #1
 8002c72:	73fb      	strb	r3, [r7, #15]
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	2200      	movs	r2, #0
 8002c78:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002c7c:	7bfb      	ldrb	r3, [r7, #15]
 8002c7e:	4618      	mov	r0, r3
 8002c80:	3710      	adds	r7, #16
 8002c82:	46bd      	mov	sp, r7
 8002c84:	bd80      	pop	{r7, pc}
	...

08002c88 <HAL_ADC_Start_DMA>:
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	b088      	sub	sp, #32
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	60f8      	str	r0, [r7, #12]
 8002c90:	60b9      	str	r1, [r7, #8]
 8002c92:	607a      	str	r2, [r7, #4]
 8002c94:	2300      	movs	r3, #0
 8002c96:	617b      	str	r3, [r7, #20]
 8002c98:	2300      	movs	r3, #0
 8002c9a:	77fb      	strb	r3, [r7, #31]
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ca2:	2b01      	cmp	r3, #1
 8002ca4:	d101      	bne.n	8002caa <HAL_ADC_Start_DMA+0x22>
 8002ca6:	2302      	movs	r3, #2
 8002ca8:	e0eb      	b.n	8002e82 <HAL_ADC_Start_DMA+0x1fa>
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	2201      	movs	r2, #1
 8002cae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002cb2:	68fb      	ldr	r3, [r7, #12]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	689b      	ldr	r3, [r3, #8]
 8002cb8:	f003 0301 	and.w	r3, r3, #1
 8002cbc:	2b01      	cmp	r3, #1
 8002cbe:	d018      	beq.n	8002cf2 <HAL_ADC_Start_DMA+0x6a>
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	689a      	ldr	r2, [r3, #8]
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f042 0201 	orr.w	r2, r2, #1
 8002cce:	609a      	str	r2, [r3, #8]
 8002cd0:	4b6e      	ldr	r3, [pc, #440]	@ (8002e8c <HAL_ADC_Start_DMA+0x204>)
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	4a6e      	ldr	r2, [pc, #440]	@ (8002e90 <HAL_ADC_Start_DMA+0x208>)
 8002cd6:	fba2 2303 	umull	r2, r3, r2, r3
 8002cda:	0c9a      	lsrs	r2, r3, #18
 8002cdc:	4613      	mov	r3, r2
 8002cde:	005b      	lsls	r3, r3, #1
 8002ce0:	4413      	add	r3, r2
 8002ce2:	617b      	str	r3, [r7, #20]
 8002ce4:	e002      	b.n	8002cec <HAL_ADC_Start_DMA+0x64>
 8002ce6:	697b      	ldr	r3, [r7, #20]
 8002ce8:	3b01      	subs	r3, #1
 8002cea:	617b      	str	r3, [r7, #20]
 8002cec:	697b      	ldr	r3, [r7, #20]
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d1f9      	bne.n	8002ce6 <HAL_ADC_Start_DMA+0x5e>
 8002cf2:	68fb      	ldr	r3, [r7, #12]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	689b      	ldr	r3, [r3, #8]
 8002cf8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cfc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002d00:	d107      	bne.n	8002d12 <HAL_ADC_Start_DMA+0x8a>
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	689a      	ldr	r2, [r3, #8]
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002d10:	609a      	str	r2, [r3, #8]
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	689b      	ldr	r3, [r3, #8]
 8002d18:	f003 0301 	and.w	r3, r3, #1
 8002d1c:	2b01      	cmp	r3, #1
 8002d1e:	f040 80a3 	bne.w	8002e68 <HAL_ADC_Start_DMA+0x1e0>
 8002d22:	68fb      	ldr	r3, [r7, #12]
 8002d24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d26:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002d2a:	f023 0301 	bic.w	r3, r3, #1
 8002d2e:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	685b      	ldr	r3, [r3, #4]
 8002d3c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d007      	beq.n	8002d54 <HAL_ADC_Start_DMA+0xcc>
 8002d44:	68fb      	ldr	r3, [r7, #12]
 8002d46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d48:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002d4c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002d50:	68fb      	ldr	r3, [r7, #12]
 8002d52:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d58:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002d5c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002d60:	d106      	bne.n	8002d70 <HAL_ADC_Start_DMA+0xe8>
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d66:	f023 0206 	bic.w	r2, r3, #6
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002d6e:	e002      	b.n	8002d76 <HAL_ADC_Start_DMA+0xee>
 8002d70:	68fb      	ldr	r3, [r7, #12]
 8002d72:	2200      	movs	r2, #0
 8002d74:	645a      	str	r2, [r3, #68]	@ 0x44
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	2200      	movs	r2, #0
 8002d7a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d7e:	4b45      	ldr	r3, [pc, #276]	@ (8002e94 <HAL_ADC_Start_DMA+0x20c>)
 8002d80:	61bb      	str	r3, [r7, #24]
 8002d82:	68fb      	ldr	r3, [r7, #12]
 8002d84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002d86:	4a44      	ldr	r2, [pc, #272]	@ (8002e98 <HAL_ADC_Start_DMA+0x210>)
 8002d88:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002d8e:	4a43      	ldr	r2, [pc, #268]	@ (8002e9c <HAL_ADC_Start_DMA+0x214>)
 8002d90:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d92:	68fb      	ldr	r3, [r7, #12]
 8002d94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002d96:	4a42      	ldr	r2, [pc, #264]	@ (8002ea0 <HAL_ADC_Start_DMA+0x218>)
 8002d98:	64da      	str	r2, [r3, #76]	@ 0x4c
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002da2:	601a      	str	r2, [r3, #0]
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	685a      	ldr	r2, [r3, #4]
 8002daa:	68fb      	ldr	r3, [r7, #12]
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002db2:	605a      	str	r2, [r3, #4]
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	689a      	ldr	r2, [r3, #8]
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002dc2:	609a      	str	r2, [r3, #8]
 8002dc4:	68fb      	ldr	r3, [r7, #12]
 8002dc6:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002dc8:	68fb      	ldr	r3, [r7, #12]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	334c      	adds	r3, #76	@ 0x4c
 8002dce:	4619      	mov	r1, r3
 8002dd0:	68ba      	ldr	r2, [r7, #8]
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	f000 fcd6 	bl	8003784 <HAL_DMA_Start_IT>
 8002dd8:	4603      	mov	r3, r0
 8002dda:	77fb      	strb	r3, [r7, #31]
 8002ddc:	69bb      	ldr	r3, [r7, #24]
 8002dde:	685b      	ldr	r3, [r3, #4]
 8002de0:	f003 031f 	and.w	r3, r3, #31
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d12a      	bne.n	8002e3e <HAL_ADC_Start_DMA+0x1b6>
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	4a2d      	ldr	r2, [pc, #180]	@ (8002ea4 <HAL_ADC_Start_DMA+0x21c>)
 8002dee:	4293      	cmp	r3, r2
 8002df0:	d015      	beq.n	8002e1e <HAL_ADC_Start_DMA+0x196>
 8002df2:	68fb      	ldr	r3, [r7, #12]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	4a2c      	ldr	r2, [pc, #176]	@ (8002ea8 <HAL_ADC_Start_DMA+0x220>)
 8002df8:	4293      	cmp	r3, r2
 8002dfa:	d105      	bne.n	8002e08 <HAL_ADC_Start_DMA+0x180>
 8002dfc:	4b25      	ldr	r3, [pc, #148]	@ (8002e94 <HAL_ADC_Start_DMA+0x20c>)
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	f003 031f 	and.w	r3, r3, #31
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d00a      	beq.n	8002e1e <HAL_ADC_Start_DMA+0x196>
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	4a27      	ldr	r2, [pc, #156]	@ (8002eac <HAL_ADC_Start_DMA+0x224>)
 8002e0e:	4293      	cmp	r3, r2
 8002e10:	d136      	bne.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e12:	4b20      	ldr	r3, [pc, #128]	@ (8002e94 <HAL_ADC_Start_DMA+0x20c>)
 8002e14:	685b      	ldr	r3, [r3, #4]
 8002e16:	f003 0310 	and.w	r3, r3, #16
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d130      	bne.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e1e:	68fb      	ldr	r3, [r7, #12]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	689b      	ldr	r3, [r3, #8]
 8002e24:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d129      	bne.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	689a      	ldr	r2, [r3, #8]
 8002e32:	68fb      	ldr	r3, [r7, #12]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002e3a:	609a      	str	r2, [r3, #8]
 8002e3c:	e020      	b.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	4a18      	ldr	r2, [pc, #96]	@ (8002ea4 <HAL_ADC_Start_DMA+0x21c>)
 8002e44:	4293      	cmp	r3, r2
 8002e46:	d11b      	bne.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	689b      	ldr	r3, [r3, #8]
 8002e4e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	d114      	bne.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e56:	68fb      	ldr	r3, [r7, #12]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	689a      	ldr	r2, [r3, #8]
 8002e5c:	68fb      	ldr	r3, [r7, #12]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002e64:	609a      	str	r2, [r3, #8]
 8002e66:	e00b      	b.n	8002e80 <HAL_ADC_Start_DMA+0x1f8>
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e6c:	f043 0210 	orr.w	r2, r3, #16
 8002e70:	68fb      	ldr	r3, [r7, #12]
 8002e72:	641a      	str	r2, [r3, #64]	@ 0x40
 8002e74:	68fb      	ldr	r3, [r7, #12]
 8002e76:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e78:	f043 0201 	orr.w	r2, r3, #1
 8002e7c:	68fb      	ldr	r3, [r7, #12]
 8002e7e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e80:	7ffb      	ldrb	r3, [r7, #31]
 8002e82:	4618      	mov	r0, r3
 8002e84:	3720      	adds	r7, #32
 8002e86:	46bd      	mov	sp, r7
 8002e88:	bd80      	pop	{r7, pc}
 8002e8a:	bf00      	nop
 8002e8c:	20000008 	.word	0x20000008
 8002e90:	431bde83 	.word	0x431bde83
 8002e94:	40012300 	.word	0x40012300
 8002e98:	08003301 	.word	0x08003301
 8002e9c:	080033bb 	.word	0x080033bb
 8002ea0:	080033d7 	.word	0x080033d7
 8002ea4:	40012000 	.word	0x40012000
 8002ea8:	40012100 	.word	0x40012100
 8002eac:	40012200 	.word	0x40012200

08002eb0 <HAL_ADC_ErrorCallback>:
 8002eb0:	b480      	push	{r7}
 8002eb2:	b083      	sub	sp, #12
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	6078      	str	r0, [r7, #4]
 8002eb8:	bf00      	nop
 8002eba:	370c      	adds	r7, #12
 8002ebc:	46bd      	mov	sp, r7
 8002ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ec2:	4770      	bx	lr

08002ec4 <HAL_ADC_ConfigChannel>:
 8002ec4:	b480      	push	{r7}
 8002ec6:	b085      	sub	sp, #20
 8002ec8:	af00      	add	r7, sp, #0
 8002eca:	6078      	str	r0, [r7, #4]
 8002ecc:	6039      	str	r1, [r7, #0]
 8002ece:	2300      	movs	r3, #0
 8002ed0:	60bb      	str	r3, [r7, #8]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ed8:	2b01      	cmp	r3, #1
 8002eda:	d101      	bne.n	8002ee0 <HAL_ADC_ConfigChannel+0x1c>
 8002edc:	2302      	movs	r3, #2
 8002ede:	e105      	b.n	80030ec <HAL_ADC_ConfigChannel+0x228>
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	2201      	movs	r2, #1
 8002ee4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002ee8:	683b      	ldr	r3, [r7, #0]
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	2b09      	cmp	r3, #9
 8002eee:	d925      	bls.n	8002f3c <HAL_ADC_ConfigChannel+0x78>
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	68d9      	ldr	r1, [r3, #12]
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	b29b      	uxth	r3, r3
 8002efc:	461a      	mov	r2, r3
 8002efe:	4613      	mov	r3, r2
 8002f00:	005b      	lsls	r3, r3, #1
 8002f02:	4413      	add	r3, r2
 8002f04:	3b1e      	subs	r3, #30
 8002f06:	2207      	movs	r2, #7
 8002f08:	fa02 f303 	lsl.w	r3, r2, r3
 8002f0c:	43da      	mvns	r2, r3
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	400a      	ands	r2, r1
 8002f14:	60da      	str	r2, [r3, #12]
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	68d9      	ldr	r1, [r3, #12]
 8002f1c:	683b      	ldr	r3, [r7, #0]
 8002f1e:	689a      	ldr	r2, [r3, #8]
 8002f20:	683b      	ldr	r3, [r7, #0]
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	b29b      	uxth	r3, r3
 8002f26:	4618      	mov	r0, r3
 8002f28:	4603      	mov	r3, r0
 8002f2a:	005b      	lsls	r3, r3, #1
 8002f2c:	4403      	add	r3, r0
 8002f2e:	3b1e      	subs	r3, #30
 8002f30:	409a      	lsls	r2, r3
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	430a      	orrs	r2, r1
 8002f38:	60da      	str	r2, [r3, #12]
 8002f3a:	e022      	b.n	8002f82 <HAL_ADC_ConfigChannel+0xbe>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	6919      	ldr	r1, [r3, #16]
 8002f42:	683b      	ldr	r3, [r7, #0]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	b29b      	uxth	r3, r3
 8002f48:	461a      	mov	r2, r3
 8002f4a:	4613      	mov	r3, r2
 8002f4c:	005b      	lsls	r3, r3, #1
 8002f4e:	4413      	add	r3, r2
 8002f50:	2207      	movs	r2, #7
 8002f52:	fa02 f303 	lsl.w	r3, r2, r3
 8002f56:	43da      	mvns	r2, r3
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	400a      	ands	r2, r1
 8002f5e:	611a      	str	r2, [r3, #16]
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	6919      	ldr	r1, [r3, #16]
 8002f66:	683b      	ldr	r3, [r7, #0]
 8002f68:	689a      	ldr	r2, [r3, #8]
 8002f6a:	683b      	ldr	r3, [r7, #0]
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	b29b      	uxth	r3, r3
 8002f70:	4618      	mov	r0, r3
 8002f72:	4603      	mov	r3, r0
 8002f74:	005b      	lsls	r3, r3, #1
 8002f76:	4403      	add	r3, r0
 8002f78:	409a      	lsls	r2, r3
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	430a      	orrs	r2, r1
 8002f80:	611a      	str	r2, [r3, #16]
 8002f82:	683b      	ldr	r3, [r7, #0]
 8002f84:	685b      	ldr	r3, [r3, #4]
 8002f86:	2b06      	cmp	r3, #6
 8002f88:	d824      	bhi.n	8002fd4 <HAL_ADC_ConfigChannel+0x110>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002f90:	683b      	ldr	r3, [r7, #0]
 8002f92:	685a      	ldr	r2, [r3, #4]
 8002f94:	4613      	mov	r3, r2
 8002f96:	009b      	lsls	r3, r3, #2
 8002f98:	4413      	add	r3, r2
 8002f9a:	3b05      	subs	r3, #5
 8002f9c:	221f      	movs	r2, #31
 8002f9e:	fa02 f303 	lsl.w	r3, r2, r3
 8002fa2:	43da      	mvns	r2, r3
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	400a      	ands	r2, r1
 8002faa:	635a      	str	r2, [r3, #52]	@ 0x34
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002fb2:	683b      	ldr	r3, [r7, #0]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	b29b      	uxth	r3, r3
 8002fb8:	4618      	mov	r0, r3
 8002fba:	683b      	ldr	r3, [r7, #0]
 8002fbc:	685a      	ldr	r2, [r3, #4]
 8002fbe:	4613      	mov	r3, r2
 8002fc0:	009b      	lsls	r3, r3, #2
 8002fc2:	4413      	add	r3, r2
 8002fc4:	3b05      	subs	r3, #5
 8002fc6:	fa00 f203 	lsl.w	r2, r0, r3
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	430a      	orrs	r2, r1
 8002fd0:	635a      	str	r2, [r3, #52]	@ 0x34
 8002fd2:	e04c      	b.n	800306e <HAL_ADC_ConfigChannel+0x1aa>
 8002fd4:	683b      	ldr	r3, [r7, #0]
 8002fd6:	685b      	ldr	r3, [r3, #4]
 8002fd8:	2b0c      	cmp	r3, #12
 8002fda:	d824      	bhi.n	8003026 <HAL_ADC_ConfigChannel+0x162>
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002fe2:	683b      	ldr	r3, [r7, #0]
 8002fe4:	685a      	ldr	r2, [r3, #4]
 8002fe6:	4613      	mov	r3, r2
 8002fe8:	009b      	lsls	r3, r3, #2
 8002fea:	4413      	add	r3, r2
 8002fec:	3b23      	subs	r3, #35	@ 0x23
 8002fee:	221f      	movs	r2, #31
 8002ff0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ff4:	43da      	mvns	r2, r3
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	400a      	ands	r2, r1
 8002ffc:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003004:	683b      	ldr	r3, [r7, #0]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	b29b      	uxth	r3, r3
 800300a:	4618      	mov	r0, r3
 800300c:	683b      	ldr	r3, [r7, #0]
 800300e:	685a      	ldr	r2, [r3, #4]
 8003010:	4613      	mov	r3, r2
 8003012:	009b      	lsls	r3, r3, #2
 8003014:	4413      	add	r3, r2
 8003016:	3b23      	subs	r3, #35	@ 0x23
 8003018:	fa00 f203 	lsl.w	r2, r0, r3
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	430a      	orrs	r2, r1
 8003022:	631a      	str	r2, [r3, #48]	@ 0x30
 8003024:	e023      	b.n	800306e <HAL_ADC_ConfigChannel+0x1aa>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800302c:	683b      	ldr	r3, [r7, #0]
 800302e:	685a      	ldr	r2, [r3, #4]
 8003030:	4613      	mov	r3, r2
 8003032:	009b      	lsls	r3, r3, #2
 8003034:	4413      	add	r3, r2
 8003036:	3b41      	subs	r3, #65	@ 0x41
 8003038:	221f      	movs	r2, #31
 800303a:	fa02 f303 	lsl.w	r3, r2, r3
 800303e:	43da      	mvns	r2, r3
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	400a      	ands	r2, r1
 8003046:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800304e:	683b      	ldr	r3, [r7, #0]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	b29b      	uxth	r3, r3
 8003054:	4618      	mov	r0, r3
 8003056:	683b      	ldr	r3, [r7, #0]
 8003058:	685a      	ldr	r2, [r3, #4]
 800305a:	4613      	mov	r3, r2
 800305c:	009b      	lsls	r3, r3, #2
 800305e:	4413      	add	r3, r2
 8003060:	3b41      	subs	r3, #65	@ 0x41
 8003062:	fa00 f203 	lsl.w	r2, r0, r3
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	430a      	orrs	r2, r1
 800306c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800306e:	4b22      	ldr	r3, [pc, #136]	@ (80030f8 <HAL_ADC_ConfigChannel+0x234>)
 8003070:	60fb      	str	r3, [r7, #12]
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	4a21      	ldr	r2, [pc, #132]	@ (80030fc <HAL_ADC_ConfigChannel+0x238>)
 8003078:	4293      	cmp	r3, r2
 800307a:	d109      	bne.n	8003090 <HAL_ADC_ConfigChannel+0x1cc>
 800307c:	683b      	ldr	r3, [r7, #0]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	2b12      	cmp	r3, #18
 8003082:	d105      	bne.n	8003090 <HAL_ADC_ConfigChannel+0x1cc>
 8003084:	68fb      	ldr	r3, [r7, #12]
 8003086:	685b      	ldr	r3, [r3, #4]
 8003088:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	605a      	str	r2, [r3, #4]
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	4a19      	ldr	r2, [pc, #100]	@ (80030fc <HAL_ADC_ConfigChannel+0x238>)
 8003096:	4293      	cmp	r3, r2
 8003098:	d123      	bne.n	80030e2 <HAL_ADC_ConfigChannel+0x21e>
 800309a:	683b      	ldr	r3, [r7, #0]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	2b10      	cmp	r3, #16
 80030a0:	d003      	beq.n	80030aa <HAL_ADC_ConfigChannel+0x1e6>
 80030a2:	683b      	ldr	r3, [r7, #0]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	2b11      	cmp	r3, #17
 80030a8:	d11b      	bne.n	80030e2 <HAL_ADC_ConfigChannel+0x21e>
 80030aa:	68fb      	ldr	r3, [r7, #12]
 80030ac:	685b      	ldr	r3, [r3, #4]
 80030ae:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80030b2:	68fb      	ldr	r3, [r7, #12]
 80030b4:	605a      	str	r2, [r3, #4]
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	2b10      	cmp	r3, #16
 80030bc:	d111      	bne.n	80030e2 <HAL_ADC_ConfigChannel+0x21e>
 80030be:	4b10      	ldr	r3, [pc, #64]	@ (8003100 <HAL_ADC_ConfigChannel+0x23c>)
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	4a10      	ldr	r2, [pc, #64]	@ (8003104 <HAL_ADC_ConfigChannel+0x240>)
 80030c4:	fba2 2303 	umull	r2, r3, r2, r3
 80030c8:	0c9a      	lsrs	r2, r3, #18
 80030ca:	4613      	mov	r3, r2
 80030cc:	009b      	lsls	r3, r3, #2
 80030ce:	4413      	add	r3, r2
 80030d0:	005b      	lsls	r3, r3, #1
 80030d2:	60bb      	str	r3, [r7, #8]
 80030d4:	e002      	b.n	80030dc <HAL_ADC_ConfigChannel+0x218>
 80030d6:	68bb      	ldr	r3, [r7, #8]
 80030d8:	3b01      	subs	r3, #1
 80030da:	60bb      	str	r3, [r7, #8]
 80030dc:	68bb      	ldr	r3, [r7, #8]
 80030de:	2b00      	cmp	r3, #0
 80030e0:	d1f9      	bne.n	80030d6 <HAL_ADC_ConfigChannel+0x212>
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	2200      	movs	r2, #0
 80030e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80030ea:	2300      	movs	r3, #0
 80030ec:	4618      	mov	r0, r3
 80030ee:	3714      	adds	r7, #20
 80030f0:	46bd      	mov	sp, r7
 80030f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030f6:	4770      	bx	lr
 80030f8:	40012300 	.word	0x40012300
 80030fc:	40012000 	.word	0x40012000
 8003100:	20000008 	.word	0x20000008
 8003104:	431bde83 	.word	0x431bde83

08003108 <ADC_Init>:
 8003108:	b480      	push	{r7}
 800310a:	b085      	sub	sp, #20
 800310c:	af00      	add	r7, sp, #0
 800310e:	6078      	str	r0, [r7, #4]
 8003110:	4b79      	ldr	r3, [pc, #484]	@ (80032f8 <ADC_Init+0x1f0>)
 8003112:	60fb      	str	r3, [r7, #12]
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	685b      	ldr	r3, [r3, #4]
 8003118:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	605a      	str	r2, [r3, #4]
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	685a      	ldr	r2, [r3, #4]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	685b      	ldr	r3, [r3, #4]
 8003128:	431a      	orrs	r2, r3
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	605a      	str	r2, [r3, #4]
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	685a      	ldr	r2, [r3, #4]
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800313c:	605a      	str	r2, [r3, #4]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	6859      	ldr	r1, [r3, #4]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	691b      	ldr	r3, [r3, #16]
 8003148:	021a      	lsls	r2, r3, #8
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	430a      	orrs	r2, r1
 8003150:	605a      	str	r2, [r3, #4]
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	685a      	ldr	r2, [r3, #4]
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8003160:	605a      	str	r2, [r3, #4]
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	6859      	ldr	r1, [r3, #4]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	689a      	ldr	r2, [r3, #8]
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	430a      	orrs	r2, r1
 8003172:	605a      	str	r2, [r3, #4]
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	689a      	ldr	r2, [r3, #8]
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003182:	609a      	str	r2, [r3, #8]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	6899      	ldr	r1, [r3, #8]
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	68da      	ldr	r2, [r3, #12]
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	430a      	orrs	r2, r1
 8003194:	609a      	str	r2, [r3, #8]
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800319a:	4a58      	ldr	r2, [pc, #352]	@ (80032fc <ADC_Init+0x1f4>)
 800319c:	4293      	cmp	r3, r2
 800319e:	d022      	beq.n	80031e6 <ADC_Init+0xde>
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	689a      	ldr	r2, [r3, #8]
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80031ae:	609a      	str	r2, [r3, #8]
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	6899      	ldr	r1, [r3, #8]
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	430a      	orrs	r2, r1
 80031c0:	609a      	str	r2, [r3, #8]
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	689a      	ldr	r2, [r3, #8]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80031d0:	609a      	str	r2, [r3, #8]
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	6899      	ldr	r1, [r3, #8]
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	430a      	orrs	r2, r1
 80031e2:	609a      	str	r2, [r3, #8]
 80031e4:	e00f      	b.n	8003206 <ADC_Init+0xfe>
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	689a      	ldr	r2, [r3, #8]
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80031f4:	609a      	str	r2, [r3, #8]
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	689a      	ldr	r2, [r3, #8]
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003204:	609a      	str	r2, [r3, #8]
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	689a      	ldr	r2, [r3, #8]
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	f022 0202 	bic.w	r2, r2, #2
 8003214:	609a      	str	r2, [r3, #8]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	6899      	ldr	r1, [r3, #8]
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	7e1b      	ldrb	r3, [r3, #24]
 8003220:	005a      	lsls	r2, r3, #1
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	430a      	orrs	r2, r1
 8003228:	609a      	str	r2, [r3, #8]
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003230:	2b00      	cmp	r3, #0
 8003232:	d01b      	beq.n	800326c <ADC_Init+0x164>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	685a      	ldr	r2, [r3, #4]
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003242:	605a      	str	r2, [r3, #4]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	685a      	ldr	r2, [r3, #4]
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8003252:	605a      	str	r2, [r3, #4]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	6859      	ldr	r1, [r3, #4]
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800325e:	3b01      	subs	r3, #1
 8003260:	035a      	lsls	r2, r3, #13
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	430a      	orrs	r2, r1
 8003268:	605a      	str	r2, [r3, #4]
 800326a:	e007      	b.n	800327c <ADC_Init+0x174>
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	685a      	ldr	r2, [r3, #4]
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800327a:	605a      	str	r2, [r3, #4]
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800328a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	69db      	ldr	r3, [r3, #28]
 8003296:	3b01      	subs	r3, #1
 8003298:	051a      	lsls	r2, r3, #20
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	430a      	orrs	r2, r1
 80032a0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	689a      	ldr	r2, [r3, #8]
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80032b0:	609a      	str	r2, [r3, #8]
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	6899      	ldr	r1, [r3, #8]
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80032be:	025a      	lsls	r2, r3, #9
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	430a      	orrs	r2, r1
 80032c6:	609a      	str	r2, [r3, #8]
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	689a      	ldr	r2, [r3, #8]
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80032d6:	609a      	str	r2, [r3, #8]
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	6899      	ldr	r1, [r3, #8]
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	695b      	ldr	r3, [r3, #20]
 80032e2:	029a      	lsls	r2, r3, #10
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	430a      	orrs	r2, r1
 80032ea:	609a      	str	r2, [r3, #8]
 80032ec:	bf00      	nop
 80032ee:	3714      	adds	r7, #20
 80032f0:	46bd      	mov	sp, r7
 80032f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f6:	4770      	bx	lr
 80032f8:	40012300 	.word	0x40012300
 80032fc:	0f000001 	.word	0x0f000001

08003300 <ADC_DMAConvCplt>:
 8003300:	b580      	push	{r7, lr}
 8003302:	b084      	sub	sp, #16
 8003304:	af00      	add	r7, sp, #0
 8003306:	6078      	str	r0, [r7, #4]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800330c:	60fb      	str	r3, [r7, #12]
 800330e:	68fb      	ldr	r3, [r7, #12]
 8003310:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003312:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003316:	2b00      	cmp	r3, #0
 8003318:	d13c      	bne.n	8003394 <ADC_DMAConvCplt+0x94>
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800331e:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	641a      	str	r2, [r3, #64]	@ 0x40
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	689b      	ldr	r3, [r3, #8]
 800332c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003330:	2b00      	cmp	r3, #0
 8003332:	d12b      	bne.n	800338c <ADC_DMAConvCplt+0x8c>
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	7e1b      	ldrb	r3, [r3, #24]
 8003338:	2b00      	cmp	r3, #0
 800333a:	d127      	bne.n	800338c <ADC_DMAConvCplt+0x8c>
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003342:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8003346:	2b00      	cmp	r3, #0
 8003348:	d006      	beq.n	8003358 <ADC_DMAConvCplt+0x58>
 800334a:	68fb      	ldr	r3, [r7, #12]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	689b      	ldr	r3, [r3, #8]
 8003350:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003354:	2b00      	cmp	r3, #0
 8003356:	d119      	bne.n	800338c <ADC_DMAConvCplt+0x8c>
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	685a      	ldr	r2, [r3, #4]
 800335e:	68fb      	ldr	r3, [r7, #12]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	f022 0220 	bic.w	r2, r2, #32
 8003366:	605a      	str	r2, [r3, #4]
 8003368:	68fb      	ldr	r3, [r7, #12]
 800336a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800336c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003370:	68fb      	ldr	r3, [r7, #12]
 8003372:	641a      	str	r2, [r3, #64]	@ 0x40
 8003374:	68fb      	ldr	r3, [r7, #12]
 8003376:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003378:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800337c:	2b00      	cmp	r3, #0
 800337e:	d105      	bne.n	800338c <ADC_DMAConvCplt+0x8c>
 8003380:	68fb      	ldr	r3, [r7, #12]
 8003382:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003384:	f043 0201 	orr.w	r2, r3, #1
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	641a      	str	r2, [r3, #64]	@ 0x40
 800338c:	68f8      	ldr	r0, [r7, #12]
 800338e:	f7fe fb13 	bl	80019b8 <HAL_ADC_ConvCpltCallback>
 8003392:	e00e      	b.n	80033b2 <ADC_DMAConvCplt+0xb2>
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003398:	f003 0310 	and.w	r3, r3, #16
 800339c:	2b00      	cmp	r3, #0
 800339e:	d003      	beq.n	80033a8 <ADC_DMAConvCplt+0xa8>
 80033a0:	68f8      	ldr	r0, [r7, #12]
 80033a2:	f7ff fd85 	bl	8002eb0 <HAL_ADC_ErrorCallback>
 80033a6:	e004      	b.n	80033b2 <ADC_DMAConvCplt+0xb2>
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80033ae:	6878      	ldr	r0, [r7, #4]
 80033b0:	4798      	blx	r3
 80033b2:	bf00      	nop
 80033b4:	3710      	adds	r7, #16
 80033b6:	46bd      	mov	sp, r7
 80033b8:	bd80      	pop	{r7, pc}

080033ba <ADC_DMAHalfConvCplt>:
 80033ba:	b580      	push	{r7, lr}
 80033bc:	b084      	sub	sp, #16
 80033be:	af00      	add	r7, sp, #0
 80033c0:	6078      	str	r0, [r7, #4]
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033c6:	60fb      	str	r3, [r7, #12]
 80033c8:	68f8      	ldr	r0, [r7, #12]
 80033ca:	f7fe fae7 	bl	800199c <HAL_ADC_ConvHalfCpltCallback>
 80033ce:	bf00      	nop
 80033d0:	3710      	adds	r7, #16
 80033d2:	46bd      	mov	sp, r7
 80033d4:	bd80      	pop	{r7, pc}

080033d6 <ADC_DMAError>:
 80033d6:	b580      	push	{r7, lr}
 80033d8:	b084      	sub	sp, #16
 80033da:	af00      	add	r7, sp, #0
 80033dc:	6078      	str	r0, [r7, #4]
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80033e2:	60fb      	str	r3, [r7, #12]
 80033e4:	68fb      	ldr	r3, [r7, #12]
 80033e6:	2240      	movs	r2, #64	@ 0x40
 80033e8:	641a      	str	r2, [r3, #64]	@ 0x40
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80033ee:	f043 0204 	orr.w	r2, r3, #4
 80033f2:	68fb      	ldr	r3, [r7, #12]
 80033f4:	645a      	str	r2, [r3, #68]	@ 0x44
 80033f6:	68f8      	ldr	r0, [r7, #12]
 80033f8:	f7ff fd5a 	bl	8002eb0 <HAL_ADC_ErrorCallback>
 80033fc:	bf00      	nop
 80033fe:	3710      	adds	r7, #16
 8003400:	46bd      	mov	sp, r7
 8003402:	bd80      	pop	{r7, pc}

08003404 <__NVIC_SetPriorityGrouping>:
 8003404:	b480      	push	{r7}
 8003406:	b085      	sub	sp, #20
 8003408:	af00      	add	r7, sp, #0
 800340a:	6078      	str	r0, [r7, #4]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	f003 0307 	and.w	r3, r3, #7
 8003412:	60fb      	str	r3, [r7, #12]
 8003414:	4b0c      	ldr	r3, [pc, #48]	@ (8003448 <__NVIC_SetPriorityGrouping+0x44>)
 8003416:	68db      	ldr	r3, [r3, #12]
 8003418:	60bb      	str	r3, [r7, #8]
 800341a:	68ba      	ldr	r2, [r7, #8]
 800341c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003420:	4013      	ands	r3, r2
 8003422:	60bb      	str	r3, [r7, #8]
 8003424:	68fb      	ldr	r3, [r7, #12]
 8003426:	021a      	lsls	r2, r3, #8
 8003428:	68bb      	ldr	r3, [r7, #8]
 800342a:	4313      	orrs	r3, r2
 800342c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003430:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003434:	60bb      	str	r3, [r7, #8]
 8003436:	4a04      	ldr	r2, [pc, #16]	@ (8003448 <__NVIC_SetPriorityGrouping+0x44>)
 8003438:	68bb      	ldr	r3, [r7, #8]
 800343a:	60d3      	str	r3, [r2, #12]
 800343c:	bf00      	nop
 800343e:	3714      	adds	r7, #20
 8003440:	46bd      	mov	sp, r7
 8003442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003446:	4770      	bx	lr
 8003448:	e000ed00 	.word	0xe000ed00

0800344c <__NVIC_GetPriorityGrouping>:
 800344c:	b480      	push	{r7}
 800344e:	af00      	add	r7, sp, #0
 8003450:	4b04      	ldr	r3, [pc, #16]	@ (8003464 <__NVIC_GetPriorityGrouping+0x18>)
 8003452:	68db      	ldr	r3, [r3, #12]
 8003454:	0a1b      	lsrs	r3, r3, #8
 8003456:	f003 0307 	and.w	r3, r3, #7
 800345a:	4618      	mov	r0, r3
 800345c:	46bd      	mov	sp, r7
 800345e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003462:	4770      	bx	lr
 8003464:	e000ed00 	.word	0xe000ed00

08003468 <__NVIC_EnableIRQ>:
 8003468:	b480      	push	{r7}
 800346a:	b083      	sub	sp, #12
 800346c:	af00      	add	r7, sp, #0
 800346e:	4603      	mov	r3, r0
 8003470:	71fb      	strb	r3, [r7, #7]
 8003472:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003476:	2b00      	cmp	r3, #0
 8003478:	db0b      	blt.n	8003492 <__NVIC_EnableIRQ+0x2a>
 800347a:	79fb      	ldrb	r3, [r7, #7]
 800347c:	f003 021f 	and.w	r2, r3, #31
 8003480:	4907      	ldr	r1, [pc, #28]	@ (80034a0 <__NVIC_EnableIRQ+0x38>)
 8003482:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003486:	095b      	lsrs	r3, r3, #5
 8003488:	2001      	movs	r0, #1
 800348a:	fa00 f202 	lsl.w	r2, r0, r2
 800348e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003492:	bf00      	nop
 8003494:	370c      	adds	r7, #12
 8003496:	46bd      	mov	sp, r7
 8003498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349c:	4770      	bx	lr
 800349e:	bf00      	nop
 80034a0:	e000e100 	.word	0xe000e100

080034a4 <__NVIC_SetPriority>:
 80034a4:	b480      	push	{r7}
 80034a6:	b083      	sub	sp, #12
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	4603      	mov	r3, r0
 80034ac:	6039      	str	r1, [r7, #0]
 80034ae:	71fb      	strb	r3, [r7, #7]
 80034b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	db0a      	blt.n	80034ce <__NVIC_SetPriority+0x2a>
 80034b8:	683b      	ldr	r3, [r7, #0]
 80034ba:	b2da      	uxtb	r2, r3
 80034bc:	490c      	ldr	r1, [pc, #48]	@ (80034f0 <__NVIC_SetPriority+0x4c>)
 80034be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034c2:	0112      	lsls	r2, r2, #4
 80034c4:	b2d2      	uxtb	r2, r2
 80034c6:	440b      	add	r3, r1
 80034c8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80034cc:	e00a      	b.n	80034e4 <__NVIC_SetPriority+0x40>
 80034ce:	683b      	ldr	r3, [r7, #0]
 80034d0:	b2da      	uxtb	r2, r3
 80034d2:	4908      	ldr	r1, [pc, #32]	@ (80034f4 <__NVIC_SetPriority+0x50>)
 80034d4:	79fb      	ldrb	r3, [r7, #7]
 80034d6:	f003 030f 	and.w	r3, r3, #15
 80034da:	3b04      	subs	r3, #4
 80034dc:	0112      	lsls	r2, r2, #4
 80034de:	b2d2      	uxtb	r2, r2
 80034e0:	440b      	add	r3, r1
 80034e2:	761a      	strb	r2, [r3, #24]
 80034e4:	bf00      	nop
 80034e6:	370c      	adds	r7, #12
 80034e8:	46bd      	mov	sp, r7
 80034ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ee:	4770      	bx	lr
 80034f0:	e000e100 	.word	0xe000e100
 80034f4:	e000ed00 	.word	0xe000ed00

080034f8 <NVIC_EncodePriority>:
 80034f8:	b480      	push	{r7}
 80034fa:	b089      	sub	sp, #36	@ 0x24
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	60f8      	str	r0, [r7, #12]
 8003500:	60b9      	str	r1, [r7, #8]
 8003502:	607a      	str	r2, [r7, #4]
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	f003 0307 	and.w	r3, r3, #7
 800350a:	61fb      	str	r3, [r7, #28]
 800350c:	69fb      	ldr	r3, [r7, #28]
 800350e:	f1c3 0307 	rsb	r3, r3, #7
 8003512:	2b04      	cmp	r3, #4
 8003514:	bf28      	it	cs
 8003516:	2304      	movcs	r3, #4
 8003518:	61bb      	str	r3, [r7, #24]
 800351a:	69fb      	ldr	r3, [r7, #28]
 800351c:	3304      	adds	r3, #4
 800351e:	2b06      	cmp	r3, #6
 8003520:	d902      	bls.n	8003528 <NVIC_EncodePriority+0x30>
 8003522:	69fb      	ldr	r3, [r7, #28]
 8003524:	3b03      	subs	r3, #3
 8003526:	e000      	b.n	800352a <NVIC_EncodePriority+0x32>
 8003528:	2300      	movs	r3, #0
 800352a:	617b      	str	r3, [r7, #20]
 800352c:	f04f 32ff 	mov.w	r2, #4294967295
 8003530:	69bb      	ldr	r3, [r7, #24]
 8003532:	fa02 f303 	lsl.w	r3, r2, r3
 8003536:	43da      	mvns	r2, r3
 8003538:	68bb      	ldr	r3, [r7, #8]
 800353a:	401a      	ands	r2, r3
 800353c:	697b      	ldr	r3, [r7, #20]
 800353e:	409a      	lsls	r2, r3
 8003540:	f04f 31ff 	mov.w	r1, #4294967295
 8003544:	697b      	ldr	r3, [r7, #20]
 8003546:	fa01 f303 	lsl.w	r3, r1, r3
 800354a:	43d9      	mvns	r1, r3
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	400b      	ands	r3, r1
 8003550:	4313      	orrs	r3, r2
 8003552:	4618      	mov	r0, r3
 8003554:	3724      	adds	r7, #36	@ 0x24
 8003556:	46bd      	mov	sp, r7
 8003558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800355c:	4770      	bx	lr
	...

08003560 <SysTick_Config>:
 8003560:	b580      	push	{r7, lr}
 8003562:	b082      	sub	sp, #8
 8003564:	af00      	add	r7, sp, #0
 8003566:	6078      	str	r0, [r7, #4]
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	3b01      	subs	r3, #1
 800356c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003570:	d301      	bcc.n	8003576 <SysTick_Config+0x16>
 8003572:	2301      	movs	r3, #1
 8003574:	e00f      	b.n	8003596 <SysTick_Config+0x36>
 8003576:	4a0a      	ldr	r2, [pc, #40]	@ (80035a0 <SysTick_Config+0x40>)
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	3b01      	subs	r3, #1
 800357c:	6053      	str	r3, [r2, #4]
 800357e:	210f      	movs	r1, #15
 8003580:	f04f 30ff 	mov.w	r0, #4294967295
 8003584:	f7ff ff8e 	bl	80034a4 <__NVIC_SetPriority>
 8003588:	4b05      	ldr	r3, [pc, #20]	@ (80035a0 <SysTick_Config+0x40>)
 800358a:	2200      	movs	r2, #0
 800358c:	609a      	str	r2, [r3, #8]
 800358e:	4b04      	ldr	r3, [pc, #16]	@ (80035a0 <SysTick_Config+0x40>)
 8003590:	2207      	movs	r2, #7
 8003592:	601a      	str	r2, [r3, #0]
 8003594:	2300      	movs	r3, #0
 8003596:	4618      	mov	r0, r3
 8003598:	3708      	adds	r7, #8
 800359a:	46bd      	mov	sp, r7
 800359c:	bd80      	pop	{r7, pc}
 800359e:	bf00      	nop
 80035a0:	e000e010 	.word	0xe000e010

080035a4 <HAL_NVIC_SetPriorityGrouping>:
 80035a4:	b580      	push	{r7, lr}
 80035a6:	b082      	sub	sp, #8
 80035a8:	af00      	add	r7, sp, #0
 80035aa:	6078      	str	r0, [r7, #4]
 80035ac:	6878      	ldr	r0, [r7, #4]
 80035ae:	f7ff ff29 	bl	8003404 <__NVIC_SetPriorityGrouping>
 80035b2:	bf00      	nop
 80035b4:	3708      	adds	r7, #8
 80035b6:	46bd      	mov	sp, r7
 80035b8:	bd80      	pop	{r7, pc}

080035ba <HAL_NVIC_SetPriority>:
 80035ba:	b580      	push	{r7, lr}
 80035bc:	b086      	sub	sp, #24
 80035be:	af00      	add	r7, sp, #0
 80035c0:	4603      	mov	r3, r0
 80035c2:	60b9      	str	r1, [r7, #8]
 80035c4:	607a      	str	r2, [r7, #4]
 80035c6:	73fb      	strb	r3, [r7, #15]
 80035c8:	2300      	movs	r3, #0
 80035ca:	617b      	str	r3, [r7, #20]
 80035cc:	f7ff ff3e 	bl	800344c <__NVIC_GetPriorityGrouping>
 80035d0:	6178      	str	r0, [r7, #20]
 80035d2:	687a      	ldr	r2, [r7, #4]
 80035d4:	68b9      	ldr	r1, [r7, #8]
 80035d6:	6978      	ldr	r0, [r7, #20]
 80035d8:	f7ff ff8e 	bl	80034f8 <NVIC_EncodePriority>
 80035dc:	4602      	mov	r2, r0
 80035de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80035e2:	4611      	mov	r1, r2
 80035e4:	4618      	mov	r0, r3
 80035e6:	f7ff ff5d 	bl	80034a4 <__NVIC_SetPriority>
 80035ea:	bf00      	nop
 80035ec:	3718      	adds	r7, #24
 80035ee:	46bd      	mov	sp, r7
 80035f0:	bd80      	pop	{r7, pc}

080035f2 <HAL_NVIC_EnableIRQ>:
 80035f2:	b580      	push	{r7, lr}
 80035f4:	b082      	sub	sp, #8
 80035f6:	af00      	add	r7, sp, #0
 80035f8:	4603      	mov	r3, r0
 80035fa:	71fb      	strb	r3, [r7, #7]
 80035fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003600:	4618      	mov	r0, r3
 8003602:	f7ff ff31 	bl	8003468 <__NVIC_EnableIRQ>
 8003606:	bf00      	nop
 8003608:	3708      	adds	r7, #8
 800360a:	46bd      	mov	sp, r7
 800360c:	bd80      	pop	{r7, pc}

0800360e <HAL_SYSTICK_Config>:
 800360e:	b580      	push	{r7, lr}
 8003610:	b082      	sub	sp, #8
 8003612:	af00      	add	r7, sp, #0
 8003614:	6078      	str	r0, [r7, #4]
 8003616:	6878      	ldr	r0, [r7, #4]
 8003618:	f7ff ffa2 	bl	8003560 <SysTick_Config>
 800361c:	4603      	mov	r3, r0
 800361e:	4618      	mov	r0, r3
 8003620:	3708      	adds	r7, #8
 8003622:	46bd      	mov	sp, r7
 8003624:	bd80      	pop	{r7, pc}
	...

08003628 <HAL_DMA_Init>:
 8003628:	b580      	push	{r7, lr}
 800362a:	b086      	sub	sp, #24
 800362c:	af00      	add	r7, sp, #0
 800362e:	6078      	str	r0, [r7, #4]
 8003630:	2300      	movs	r3, #0
 8003632:	617b      	str	r3, [r7, #20]
 8003634:	f7ff fab4 	bl	8002ba0 <HAL_GetTick>
 8003638:	6138      	str	r0, [r7, #16]
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	2b00      	cmp	r3, #0
 800363e:	d101      	bne.n	8003644 <HAL_DMA_Init+0x1c>
 8003640:	2301      	movs	r3, #1
 8003642:	e099      	b.n	8003778 <HAL_DMA_Init+0x150>
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	2202      	movs	r2, #2
 8003648:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	2200      	movs	r2, #0
 8003650:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	f022 0201 	bic.w	r2, r2, #1
 8003662:	601a      	str	r2, [r3, #0]
 8003664:	e00f      	b.n	8003686 <HAL_DMA_Init+0x5e>
 8003666:	f7ff fa9b 	bl	8002ba0 <HAL_GetTick>
 800366a:	4602      	mov	r2, r0
 800366c:	693b      	ldr	r3, [r7, #16]
 800366e:	1ad3      	subs	r3, r2, r3
 8003670:	2b05      	cmp	r3, #5
 8003672:	d908      	bls.n	8003686 <HAL_DMA_Init+0x5e>
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	2220      	movs	r2, #32
 8003678:	655a      	str	r2, [r3, #84]	@ 0x54
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	2203      	movs	r2, #3
 800367e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003682:	2303      	movs	r3, #3
 8003684:	e078      	b.n	8003778 <HAL_DMA_Init+0x150>
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	f003 0301 	and.w	r3, r3, #1
 8003690:	2b00      	cmp	r3, #0
 8003692:	d1e8      	bne.n	8003666 <HAL_DMA_Init+0x3e>
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	617b      	str	r3, [r7, #20]
 800369c:	697a      	ldr	r2, [r7, #20]
 800369e:	4b38      	ldr	r3, [pc, #224]	@ (8003780 <HAL_DMA_Init+0x158>)
 80036a0:	4013      	ands	r3, r2
 80036a2:	617b      	str	r3, [r7, #20]
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	685a      	ldr	r2, [r3, #4]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	689b      	ldr	r3, [r3, #8]
 80036ac:	431a      	orrs	r2, r3
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	68db      	ldr	r3, [r3, #12]
 80036b2:	431a      	orrs	r2, r3
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	691b      	ldr	r3, [r3, #16]
 80036b8:	431a      	orrs	r2, r3
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	695b      	ldr	r3, [r3, #20]
 80036be:	431a      	orrs	r2, r3
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	699b      	ldr	r3, [r3, #24]
 80036c4:	431a      	orrs	r2, r3
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	69db      	ldr	r3, [r3, #28]
 80036ca:	431a      	orrs	r2, r3
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	6a1b      	ldr	r3, [r3, #32]
 80036d0:	4313      	orrs	r3, r2
 80036d2:	697a      	ldr	r2, [r7, #20]
 80036d4:	4313      	orrs	r3, r2
 80036d6:	617b      	str	r3, [r7, #20]
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036dc:	2b04      	cmp	r3, #4
 80036de:	d107      	bne.n	80036f0 <HAL_DMA_Init+0xc8>
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80036e8:	4313      	orrs	r3, r2
 80036ea:	697a      	ldr	r2, [r7, #20]
 80036ec:	4313      	orrs	r3, r2
 80036ee:	617b      	str	r3, [r7, #20]
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	697a      	ldr	r2, [r7, #20]
 80036f6:	601a      	str	r2, [r3, #0]
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	695b      	ldr	r3, [r3, #20]
 80036fe:	617b      	str	r3, [r7, #20]
 8003700:	697b      	ldr	r3, [r7, #20]
 8003702:	f023 0307 	bic.w	r3, r3, #7
 8003706:	617b      	str	r3, [r7, #20]
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800370c:	697a      	ldr	r2, [r7, #20]
 800370e:	4313      	orrs	r3, r2
 8003710:	617b      	str	r3, [r7, #20]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003716:	2b04      	cmp	r3, #4
 8003718:	d117      	bne.n	800374a <HAL_DMA_Init+0x122>
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800371e:	697a      	ldr	r2, [r7, #20]
 8003720:	4313      	orrs	r3, r2
 8003722:	617b      	str	r3, [r7, #20]
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003728:	2b00      	cmp	r3, #0
 800372a:	d00e      	beq.n	800374a <HAL_DMA_Init+0x122>
 800372c:	6878      	ldr	r0, [r7, #4]
 800372e:	f000 fb01 	bl	8003d34 <DMA_CheckFifoParam>
 8003732:	4603      	mov	r3, r0
 8003734:	2b00      	cmp	r3, #0
 8003736:	d008      	beq.n	800374a <HAL_DMA_Init+0x122>
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	2240      	movs	r2, #64	@ 0x40
 800373c:	655a      	str	r2, [r3, #84]	@ 0x54
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	2201      	movs	r2, #1
 8003742:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003746:	2301      	movs	r3, #1
 8003748:	e016      	b.n	8003778 <HAL_DMA_Init+0x150>
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	697a      	ldr	r2, [r7, #20]
 8003750:	615a      	str	r2, [r3, #20]
 8003752:	6878      	ldr	r0, [r7, #4]
 8003754:	f000 fab8 	bl	8003cc8 <DMA_CalcBaseAndBitshift>
 8003758:	4603      	mov	r3, r0
 800375a:	60fb      	str	r3, [r7, #12]
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003760:	223f      	movs	r2, #63	@ 0x3f
 8003762:	409a      	lsls	r2, r3
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	609a      	str	r2, [r3, #8]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	2200      	movs	r2, #0
 800376c:	655a      	str	r2, [r3, #84]	@ 0x54
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	2201      	movs	r2, #1
 8003772:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003776:	2300      	movs	r3, #0
 8003778:	4618      	mov	r0, r3
 800377a:	3718      	adds	r7, #24
 800377c:	46bd      	mov	sp, r7
 800377e:	bd80      	pop	{r7, pc}
 8003780:	f010803f 	.word	0xf010803f

08003784 <HAL_DMA_Start_IT>:
 8003784:	b580      	push	{r7, lr}
 8003786:	b086      	sub	sp, #24
 8003788:	af00      	add	r7, sp, #0
 800378a:	60f8      	str	r0, [r7, #12]
 800378c:	60b9      	str	r1, [r7, #8]
 800378e:	607a      	str	r2, [r7, #4]
 8003790:	603b      	str	r3, [r7, #0]
 8003792:	2300      	movs	r3, #0
 8003794:	75fb      	strb	r3, [r7, #23]
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	68fb      	ldr	r3, [r7, #12]
 800379e:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80037a2:	2b01      	cmp	r3, #1
 80037a4:	d101      	bne.n	80037aa <HAL_DMA_Start_IT+0x26>
 80037a6:	2302      	movs	r3, #2
 80037a8:	e040      	b.n	800382c <HAL_DMA_Start_IT+0xa8>
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	2201      	movs	r2, #1
 80037ae:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80037b8:	b2db      	uxtb	r3, r3
 80037ba:	2b01      	cmp	r3, #1
 80037bc:	d12f      	bne.n	800381e <HAL_DMA_Start_IT+0x9a>
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	2202      	movs	r2, #2
 80037c2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	2200      	movs	r2, #0
 80037ca:	655a      	str	r2, [r3, #84]	@ 0x54
 80037cc:	683b      	ldr	r3, [r7, #0]
 80037ce:	687a      	ldr	r2, [r7, #4]
 80037d0:	68b9      	ldr	r1, [r7, #8]
 80037d2:	68f8      	ldr	r0, [r7, #12]
 80037d4:	f000 fa4a 	bl	8003c6c <DMA_SetConfig>
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80037dc:	223f      	movs	r2, #63	@ 0x3f
 80037de:	409a      	lsls	r2, r3
 80037e0:	693b      	ldr	r3, [r7, #16]
 80037e2:	609a      	str	r2, [r3, #8]
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	681a      	ldr	r2, [r3, #0]
 80037ea:	68fb      	ldr	r3, [r7, #12]
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	f042 0216 	orr.w	r2, r2, #22
 80037f2:	601a      	str	r2, [r3, #0]
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	d007      	beq.n	800380c <HAL_DMA_Start_IT+0x88>
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	681a      	ldr	r2, [r3, #0]
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	f042 0208 	orr.w	r2, r2, #8
 800380a:	601a      	str	r2, [r3, #0]
 800380c:	68fb      	ldr	r3, [r7, #12]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	681a      	ldr	r2, [r3, #0]
 8003812:	68fb      	ldr	r3, [r7, #12]
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	f042 0201 	orr.w	r2, r2, #1
 800381a:	601a      	str	r2, [r3, #0]
 800381c:	e005      	b.n	800382a <HAL_DMA_Start_IT+0xa6>
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	2200      	movs	r2, #0
 8003822:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003826:	2302      	movs	r3, #2
 8003828:	75fb      	strb	r3, [r7, #23]
 800382a:	7dfb      	ldrb	r3, [r7, #23]
 800382c:	4618      	mov	r0, r3
 800382e:	3718      	adds	r7, #24
 8003830:	46bd      	mov	sp, r7
 8003832:	bd80      	pop	{r7, pc}

08003834 <HAL_DMA_Abort>:
 8003834:	b580      	push	{r7, lr}
 8003836:	b084      	sub	sp, #16
 8003838:	af00      	add	r7, sp, #0
 800383a:	6078      	str	r0, [r7, #4]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003840:	60fb      	str	r3, [r7, #12]
 8003842:	f7ff f9ad 	bl	8002ba0 <HAL_GetTick>
 8003846:	60b8      	str	r0, [r7, #8]
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800384e:	b2db      	uxtb	r3, r3
 8003850:	2b02      	cmp	r3, #2
 8003852:	d008      	beq.n	8003866 <HAL_DMA_Abort+0x32>
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	2280      	movs	r2, #128	@ 0x80
 8003858:	655a      	str	r2, [r3, #84]	@ 0x54
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	2200      	movs	r2, #0
 800385e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003862:	2301      	movs	r3, #1
 8003864:	e052      	b.n	800390c <HAL_DMA_Abort+0xd8>
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	681a      	ldr	r2, [r3, #0]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	681b      	ldr	r3, [r3, #0]
 8003870:	f022 0216 	bic.w	r2, r2, #22
 8003874:	601a      	str	r2, [r3, #0]
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	681b      	ldr	r3, [r3, #0]
 800387a:	695a      	ldr	r2, [r3, #20]
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003884:	615a      	str	r2, [r3, #20]
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800388a:	2b00      	cmp	r3, #0
 800388c:	d103      	bne.n	8003896 <HAL_DMA_Abort+0x62>
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003892:	2b00      	cmp	r3, #0
 8003894:	d007      	beq.n	80038a6 <HAL_DMA_Abort+0x72>
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	681a      	ldr	r2, [r3, #0]
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	f022 0208 	bic.w	r2, r2, #8
 80038a4:	601a      	str	r2, [r3, #0]
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	681a      	ldr	r2, [r3, #0]
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	f022 0201 	bic.w	r2, r2, #1
 80038b4:	601a      	str	r2, [r3, #0]
 80038b6:	e013      	b.n	80038e0 <HAL_DMA_Abort+0xac>
 80038b8:	f7ff f972 	bl	8002ba0 <HAL_GetTick>
 80038bc:	4602      	mov	r2, r0
 80038be:	68bb      	ldr	r3, [r7, #8]
 80038c0:	1ad3      	subs	r3, r2, r3
 80038c2:	2b05      	cmp	r3, #5
 80038c4:	d90c      	bls.n	80038e0 <HAL_DMA_Abort+0xac>
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	2220      	movs	r2, #32
 80038ca:	655a      	str	r2, [r3, #84]	@ 0x54
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	2203      	movs	r2, #3
 80038d0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	2200      	movs	r2, #0
 80038d8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80038dc:	2303      	movs	r3, #3
 80038de:	e015      	b.n	800390c <HAL_DMA_Abort+0xd8>
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	f003 0301 	and.w	r3, r3, #1
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d1e4      	bne.n	80038b8 <HAL_DMA_Abort+0x84>
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038f2:	223f      	movs	r2, #63	@ 0x3f
 80038f4:	409a      	lsls	r2, r3
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	609a      	str	r2, [r3, #8]
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	2201      	movs	r2, #1
 80038fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	2200      	movs	r2, #0
 8003906:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800390a:	2300      	movs	r3, #0
 800390c:	4618      	mov	r0, r3
 800390e:	3710      	adds	r7, #16
 8003910:	46bd      	mov	sp, r7
 8003912:	bd80      	pop	{r7, pc}

08003914 <HAL_DMA_Abort_IT>:
 8003914:	b480      	push	{r7}
 8003916:	b083      	sub	sp, #12
 8003918:	af00      	add	r7, sp, #0
 800391a:	6078      	str	r0, [r7, #4]
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003922:	b2db      	uxtb	r3, r3
 8003924:	2b02      	cmp	r3, #2
 8003926:	d004      	beq.n	8003932 <HAL_DMA_Abort_IT+0x1e>
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	2280      	movs	r2, #128	@ 0x80
 800392c:	655a      	str	r2, [r3, #84]	@ 0x54
 800392e:	2301      	movs	r3, #1
 8003930:	e00c      	b.n	800394c <HAL_DMA_Abort_IT+0x38>
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	2205      	movs	r2, #5
 8003936:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	681a      	ldr	r2, [r3, #0]
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	f022 0201 	bic.w	r2, r2, #1
 8003948:	601a      	str	r2, [r3, #0]
 800394a:	2300      	movs	r3, #0
 800394c:	4618      	mov	r0, r3
 800394e:	370c      	adds	r7, #12
 8003950:	46bd      	mov	sp, r7
 8003952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003956:	4770      	bx	lr

08003958 <HAL_DMA_IRQHandler>:
 8003958:	b580      	push	{r7, lr}
 800395a:	b086      	sub	sp, #24
 800395c:	af00      	add	r7, sp, #0
 800395e:	6078      	str	r0, [r7, #4]
 8003960:	2300      	movs	r3, #0
 8003962:	60bb      	str	r3, [r7, #8]
 8003964:	4b8e      	ldr	r3, [pc, #568]	@ (8003ba0 <HAL_DMA_IRQHandler+0x248>)
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	4a8e      	ldr	r2, [pc, #568]	@ (8003ba4 <HAL_DMA_IRQHandler+0x24c>)
 800396a:	fba2 2303 	umull	r2, r3, r2, r3
 800396e:	0a9b      	lsrs	r3, r3, #10
 8003970:	617b      	str	r3, [r7, #20]
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003976:	613b      	str	r3, [r7, #16]
 8003978:	693b      	ldr	r3, [r7, #16]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	60fb      	str	r3, [r7, #12]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003982:	2208      	movs	r2, #8
 8003984:	409a      	lsls	r2, r3
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	4013      	ands	r3, r2
 800398a:	2b00      	cmp	r3, #0
 800398c:	d01a      	beq.n	80039c4 <HAL_DMA_IRQHandler+0x6c>
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	f003 0304 	and.w	r3, r3, #4
 8003998:	2b00      	cmp	r3, #0
 800399a:	d013      	beq.n	80039c4 <HAL_DMA_IRQHandler+0x6c>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	681a      	ldr	r2, [r3, #0]
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	f022 0204 	bic.w	r2, r2, #4
 80039aa:	601a      	str	r2, [r3, #0]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039b0:	2208      	movs	r2, #8
 80039b2:	409a      	lsls	r2, r3
 80039b4:	693b      	ldr	r3, [r7, #16]
 80039b6:	609a      	str	r2, [r3, #8]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80039bc:	f043 0201 	orr.w	r2, r3, #1
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	655a      	str	r2, [r3, #84]	@ 0x54
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039c8:	2201      	movs	r2, #1
 80039ca:	409a      	lsls	r2, r3
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	4013      	ands	r3, r2
 80039d0:	2b00      	cmp	r3, #0
 80039d2:	d012      	beq.n	80039fa <HAL_DMA_IRQHandler+0xa2>
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	695b      	ldr	r3, [r3, #20]
 80039da:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d00b      	beq.n	80039fa <HAL_DMA_IRQHandler+0xa2>
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039e6:	2201      	movs	r2, #1
 80039e8:	409a      	lsls	r2, r3
 80039ea:	693b      	ldr	r3, [r7, #16]
 80039ec:	609a      	str	r2, [r3, #8]
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80039f2:	f043 0202 	orr.w	r2, r3, #2
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039fe:	2204      	movs	r2, #4
 8003a00:	409a      	lsls	r2, r3
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	4013      	ands	r3, r2
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d012      	beq.n	8003a30 <HAL_DMA_IRQHandler+0xd8>
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	f003 0302 	and.w	r3, r3, #2
 8003a14:	2b00      	cmp	r3, #0
 8003a16:	d00b      	beq.n	8003a30 <HAL_DMA_IRQHandler+0xd8>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a1c:	2204      	movs	r2, #4
 8003a1e:	409a      	lsls	r2, r3
 8003a20:	693b      	ldr	r3, [r7, #16]
 8003a22:	609a      	str	r2, [r3, #8]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003a28:	f043 0204 	orr.w	r2, r3, #4
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a34:	2210      	movs	r2, #16
 8003a36:	409a      	lsls	r2, r3
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	4013      	ands	r3, r2
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d043      	beq.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	f003 0308 	and.w	r3, r3, #8
 8003a4a:	2b00      	cmp	r3, #0
 8003a4c:	d03c      	beq.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a52:	2210      	movs	r2, #16
 8003a54:	409a      	lsls	r2, r3
 8003a56:	693b      	ldr	r3, [r7, #16]
 8003a58:	609a      	str	r2, [r3, #8]
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d018      	beq.n	8003a9a <HAL_DMA_IRQHandler+0x142>
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	d108      	bne.n	8003a88 <HAL_DMA_IRQHandler+0x130>
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	d024      	beq.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a82:	6878      	ldr	r0, [r7, #4]
 8003a84:	4798      	blx	r3
 8003a86:	e01f      	b.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d01b      	beq.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003a94:	6878      	ldr	r0, [r7, #4]
 8003a96:	4798      	blx	r3
 8003a98:	e016      	b.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d107      	bne.n	8003ab8 <HAL_DMA_IRQHandler+0x160>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	681a      	ldr	r2, [r3, #0]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	f022 0208 	bic.w	r2, r2, #8
 8003ab6:	601a      	str	r2, [r3, #0]
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003abc:	2b00      	cmp	r3, #0
 8003abe:	d003      	beq.n	8003ac8 <HAL_DMA_IRQHandler+0x170>
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ac4:	6878      	ldr	r0, [r7, #4]
 8003ac6:	4798      	blx	r3
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003acc:	2220      	movs	r2, #32
 8003ace:	409a      	lsls	r2, r3
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	4013      	ands	r3, r2
 8003ad4:	2b00      	cmp	r3, #0
 8003ad6:	f000 808f 	beq.w	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	f003 0310 	and.w	r3, r3, #16
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	f000 8087 	beq.w	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003aee:	2220      	movs	r2, #32
 8003af0:	409a      	lsls	r2, r3
 8003af2:	693b      	ldr	r3, [r7, #16]
 8003af4:	609a      	str	r2, [r3, #8]
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003afc:	b2db      	uxtb	r3, r3
 8003afe:	2b05      	cmp	r3, #5
 8003b00:	d136      	bne.n	8003b70 <HAL_DMA_IRQHandler+0x218>
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	681a      	ldr	r2, [r3, #0]
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	f022 0216 	bic.w	r2, r2, #22
 8003b10:	601a      	str	r2, [r3, #0]
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	695a      	ldr	r2, [r3, #20]
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003b20:	615a      	str	r2, [r3, #20]
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d103      	bne.n	8003b32 <HAL_DMA_IRQHandler+0x1da>
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003b2e:	2b00      	cmp	r3, #0
 8003b30:	d007      	beq.n	8003b42 <HAL_DMA_IRQHandler+0x1ea>
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	681a      	ldr	r2, [r3, #0]
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	f022 0208 	bic.w	r2, r2, #8
 8003b40:	601a      	str	r2, [r3, #0]
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b46:	223f      	movs	r2, #63	@ 0x3f
 8003b48:	409a      	lsls	r2, r3
 8003b4a:	693b      	ldr	r3, [r7, #16]
 8003b4c:	609a      	str	r2, [r3, #8]
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	2201      	movs	r2, #1
 8003b52:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	2200      	movs	r2, #0
 8003b5a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d07e      	beq.n	8003c64 <HAL_DMA_IRQHandler+0x30c>
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003b6a:	6878      	ldr	r0, [r7, #4]
 8003b6c:	4798      	blx	r3
 8003b6e:	e079      	b.n	8003c64 <HAL_DMA_IRQHandler+0x30c>
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d01d      	beq.n	8003bba <HAL_DMA_IRQHandler+0x262>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003b88:	2b00      	cmp	r3, #0
 8003b8a:	d10d      	bne.n	8003ba8 <HAL_DMA_IRQHandler+0x250>
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	d031      	beq.n	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b98:	6878      	ldr	r0, [r7, #4]
 8003b9a:	4798      	blx	r3
 8003b9c:	e02c      	b.n	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003b9e:	bf00      	nop
 8003ba0:	20000008 	.word	0x20000008
 8003ba4:	1b4e81b5 	.word	0x1b4e81b5
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d023      	beq.n	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bb4:	6878      	ldr	r0, [r7, #4]
 8003bb6:	4798      	blx	r3
 8003bb8:	e01e      	b.n	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d10f      	bne.n	8003be8 <HAL_DMA_IRQHandler+0x290>
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	681a      	ldr	r2, [r3, #0]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	f022 0210 	bic.w	r2, r2, #16
 8003bd6:	601a      	str	r2, [r3, #0]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2201      	movs	r2, #1
 8003bdc:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	2200      	movs	r2, #0
 8003be4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d003      	beq.n	8003bf8 <HAL_DMA_IRQHandler+0x2a0>
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bf4:	6878      	ldr	r0, [r7, #4]
 8003bf6:	4798      	blx	r3
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	d032      	beq.n	8003c66 <HAL_DMA_IRQHandler+0x30e>
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c04:	f003 0301 	and.w	r3, r3, #1
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d022      	beq.n	8003c52 <HAL_DMA_IRQHandler+0x2fa>
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	2205      	movs	r2, #5
 8003c10:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	681a      	ldr	r2, [r3, #0]
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	f022 0201 	bic.w	r2, r2, #1
 8003c22:	601a      	str	r2, [r3, #0]
 8003c24:	68bb      	ldr	r3, [r7, #8]
 8003c26:	3301      	adds	r3, #1
 8003c28:	60bb      	str	r3, [r7, #8]
 8003c2a:	697a      	ldr	r2, [r7, #20]
 8003c2c:	429a      	cmp	r2, r3
 8003c2e:	d307      	bcc.n	8003c40 <HAL_DMA_IRQHandler+0x2e8>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	f003 0301 	and.w	r3, r3, #1
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d1f2      	bne.n	8003c24 <HAL_DMA_IRQHandler+0x2cc>
 8003c3e:	e000      	b.n	8003c42 <HAL_DMA_IRQHandler+0x2ea>
 8003c40:	bf00      	nop
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	2201      	movs	r2, #1
 8003c46:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	2200      	movs	r2, #0
 8003c4e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	d005      	beq.n	8003c66 <HAL_DMA_IRQHandler+0x30e>
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c5e:	6878      	ldr	r0, [r7, #4]
 8003c60:	4798      	blx	r3
 8003c62:	e000      	b.n	8003c66 <HAL_DMA_IRQHandler+0x30e>
 8003c64:	bf00      	nop
 8003c66:	3718      	adds	r7, #24
 8003c68:	46bd      	mov	sp, r7
 8003c6a:	bd80      	pop	{r7, pc}

08003c6c <DMA_SetConfig>:
 8003c6c:	b480      	push	{r7}
 8003c6e:	b085      	sub	sp, #20
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	60f8      	str	r0, [r7, #12]
 8003c74:	60b9      	str	r1, [r7, #8]
 8003c76:	607a      	str	r2, [r7, #4]
 8003c78:	603b      	str	r3, [r7, #0]
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	681a      	ldr	r2, [r3, #0]
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003c88:	601a      	str	r2, [r3, #0]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	683a      	ldr	r2, [r7, #0]
 8003c90:	605a      	str	r2, [r3, #4]
 8003c92:	68fb      	ldr	r3, [r7, #12]
 8003c94:	689b      	ldr	r3, [r3, #8]
 8003c96:	2b40      	cmp	r3, #64	@ 0x40
 8003c98:	d108      	bne.n	8003cac <DMA_SetConfig+0x40>
 8003c9a:	68fb      	ldr	r3, [r7, #12]
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	687a      	ldr	r2, [r7, #4]
 8003ca0:	609a      	str	r2, [r3, #8]
 8003ca2:	68fb      	ldr	r3, [r7, #12]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	68ba      	ldr	r2, [r7, #8]
 8003ca8:	60da      	str	r2, [r3, #12]
 8003caa:	e007      	b.n	8003cbc <DMA_SetConfig+0x50>
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	68ba      	ldr	r2, [r7, #8]
 8003cb2:	609a      	str	r2, [r3, #8]
 8003cb4:	68fb      	ldr	r3, [r7, #12]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	687a      	ldr	r2, [r7, #4]
 8003cba:	60da      	str	r2, [r3, #12]
 8003cbc:	bf00      	nop
 8003cbe:	3714      	adds	r7, #20
 8003cc0:	46bd      	mov	sp, r7
 8003cc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cc6:	4770      	bx	lr

08003cc8 <DMA_CalcBaseAndBitshift>:
 8003cc8:	b480      	push	{r7}
 8003cca:	b085      	sub	sp, #20
 8003ccc:	af00      	add	r7, sp, #0
 8003cce:	6078      	str	r0, [r7, #4]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	b2db      	uxtb	r3, r3
 8003cd6:	3b10      	subs	r3, #16
 8003cd8:	4a14      	ldr	r2, [pc, #80]	@ (8003d2c <DMA_CalcBaseAndBitshift+0x64>)
 8003cda:	fba2 2303 	umull	r2, r3, r2, r3
 8003cde:	091b      	lsrs	r3, r3, #4
 8003ce0:	60fb      	str	r3, [r7, #12]
 8003ce2:	4a13      	ldr	r2, [pc, #76]	@ (8003d30 <DMA_CalcBaseAndBitshift+0x68>)
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	4413      	add	r3, r2
 8003ce8:	781b      	ldrb	r3, [r3, #0]
 8003cea:	461a      	mov	r2, r3
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003cf0:	68fb      	ldr	r3, [r7, #12]
 8003cf2:	2b03      	cmp	r3, #3
 8003cf4:	d909      	bls.n	8003d0a <DMA_CalcBaseAndBitshift+0x42>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	681b      	ldr	r3, [r3, #0]
 8003cfa:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003cfe:	f023 0303 	bic.w	r3, r3, #3
 8003d02:	1d1a      	adds	r2, r3, #4
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	659a      	str	r2, [r3, #88]	@ 0x58
 8003d08:	e007      	b.n	8003d1a <DMA_CalcBaseAndBitshift+0x52>
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003d12:	f023 0303 	bic.w	r3, r3, #3
 8003d16:	687a      	ldr	r2, [r7, #4]
 8003d18:	6593      	str	r3, [r2, #88]	@ 0x58
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003d1e:	4618      	mov	r0, r3
 8003d20:	3714      	adds	r7, #20
 8003d22:	46bd      	mov	sp, r7
 8003d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d28:	4770      	bx	lr
 8003d2a:	bf00      	nop
 8003d2c:	aaaaaaab 	.word	0xaaaaaaab
 8003d30:	08007224 	.word	0x08007224

08003d34 <DMA_CheckFifoParam>:
 8003d34:	b480      	push	{r7}
 8003d36:	b085      	sub	sp, #20
 8003d38:	af00      	add	r7, sp, #0
 8003d3a:	6078      	str	r0, [r7, #4]
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	73fb      	strb	r3, [r7, #15]
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003d44:	60bb      	str	r3, [r7, #8]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	699b      	ldr	r3, [r3, #24]
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d11f      	bne.n	8003d8e <DMA_CheckFifoParam+0x5a>
 8003d4e:	68bb      	ldr	r3, [r7, #8]
 8003d50:	2b03      	cmp	r3, #3
 8003d52:	d856      	bhi.n	8003e02 <DMA_CheckFifoParam+0xce>
 8003d54:	a201      	add	r2, pc, #4	@ (adr r2, 8003d5c <DMA_CheckFifoParam+0x28>)
 8003d56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d5a:	bf00      	nop
 8003d5c:	08003d6d 	.word	0x08003d6d
 8003d60:	08003d7f 	.word	0x08003d7f
 8003d64:	08003d6d 	.word	0x08003d6d
 8003d68:	08003e03 	.word	0x08003e03
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d70:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003d74:	2b00      	cmp	r3, #0
 8003d76:	d046      	beq.n	8003e06 <DMA_CheckFifoParam+0xd2>
 8003d78:	2301      	movs	r3, #1
 8003d7a:	73fb      	strb	r3, [r7, #15]
 8003d7c:	e043      	b.n	8003e06 <DMA_CheckFifoParam+0xd2>
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d82:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003d86:	d140      	bne.n	8003e0a <DMA_CheckFifoParam+0xd6>
 8003d88:	2301      	movs	r3, #1
 8003d8a:	73fb      	strb	r3, [r7, #15]
 8003d8c:	e03d      	b.n	8003e0a <DMA_CheckFifoParam+0xd6>
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	699b      	ldr	r3, [r3, #24]
 8003d92:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003d96:	d121      	bne.n	8003ddc <DMA_CheckFifoParam+0xa8>
 8003d98:	68bb      	ldr	r3, [r7, #8]
 8003d9a:	2b03      	cmp	r3, #3
 8003d9c:	d837      	bhi.n	8003e0e <DMA_CheckFifoParam+0xda>
 8003d9e:	a201      	add	r2, pc, #4	@ (adr r2, 8003da4 <DMA_CheckFifoParam+0x70>)
 8003da0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003da4:	08003db5 	.word	0x08003db5
 8003da8:	08003dbb 	.word	0x08003dbb
 8003dac:	08003db5 	.word	0x08003db5
 8003db0:	08003dcd 	.word	0x08003dcd
 8003db4:	2301      	movs	r3, #1
 8003db6:	73fb      	strb	r3, [r7, #15]
 8003db8:	e030      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003dbe:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d025      	beq.n	8003e12 <DMA_CheckFifoParam+0xde>
 8003dc6:	2301      	movs	r3, #1
 8003dc8:	73fb      	strb	r3, [r7, #15]
 8003dca:	e022      	b.n	8003e12 <DMA_CheckFifoParam+0xde>
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003dd0:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003dd4:	d11f      	bne.n	8003e16 <DMA_CheckFifoParam+0xe2>
 8003dd6:	2301      	movs	r3, #1
 8003dd8:	73fb      	strb	r3, [r7, #15]
 8003dda:	e01c      	b.n	8003e16 <DMA_CheckFifoParam+0xe2>
 8003ddc:	68bb      	ldr	r3, [r7, #8]
 8003dde:	2b02      	cmp	r3, #2
 8003de0:	d903      	bls.n	8003dea <DMA_CheckFifoParam+0xb6>
 8003de2:	68bb      	ldr	r3, [r7, #8]
 8003de4:	2b03      	cmp	r3, #3
 8003de6:	d003      	beq.n	8003df0 <DMA_CheckFifoParam+0xbc>
 8003de8:	e018      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003dea:	2301      	movs	r3, #1
 8003dec:	73fb      	strb	r3, [r7, #15]
 8003dee:	e015      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003df4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003df8:	2b00      	cmp	r3, #0
 8003dfa:	d00e      	beq.n	8003e1a <DMA_CheckFifoParam+0xe6>
 8003dfc:	2301      	movs	r3, #1
 8003dfe:	73fb      	strb	r3, [r7, #15]
 8003e00:	e00b      	b.n	8003e1a <DMA_CheckFifoParam+0xe6>
 8003e02:	bf00      	nop
 8003e04:	e00a      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003e06:	bf00      	nop
 8003e08:	e008      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003e0a:	bf00      	nop
 8003e0c:	e006      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003e0e:	bf00      	nop
 8003e10:	e004      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003e12:	bf00      	nop
 8003e14:	e002      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003e16:	bf00      	nop
 8003e18:	e000      	b.n	8003e1c <DMA_CheckFifoParam+0xe8>
 8003e1a:	bf00      	nop
 8003e1c:	7bfb      	ldrb	r3, [r7, #15]
 8003e1e:	4618      	mov	r0, r3
 8003e20:	3714      	adds	r7, #20
 8003e22:	46bd      	mov	sp, r7
 8003e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e28:	4770      	bx	lr
 8003e2a:	bf00      	nop

08003e2c <HAL_GPIO_Init>:
 8003e2c:	b480      	push	{r7}
 8003e2e:	b089      	sub	sp, #36	@ 0x24
 8003e30:	af00      	add	r7, sp, #0
 8003e32:	6078      	str	r0, [r7, #4]
 8003e34:	6039      	str	r1, [r7, #0]
 8003e36:	2300      	movs	r3, #0
 8003e38:	617b      	str	r3, [r7, #20]
 8003e3a:	2300      	movs	r3, #0
 8003e3c:	613b      	str	r3, [r7, #16]
 8003e3e:	2300      	movs	r3, #0
 8003e40:	61bb      	str	r3, [r7, #24]
 8003e42:	2300      	movs	r3, #0
 8003e44:	61fb      	str	r3, [r7, #28]
 8003e46:	e16b      	b.n	8004120 <HAL_GPIO_Init+0x2f4>
 8003e48:	2201      	movs	r2, #1
 8003e4a:	69fb      	ldr	r3, [r7, #28]
 8003e4c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e50:	617b      	str	r3, [r7, #20]
 8003e52:	683b      	ldr	r3, [r7, #0]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	697a      	ldr	r2, [r7, #20]
 8003e58:	4013      	ands	r3, r2
 8003e5a:	613b      	str	r3, [r7, #16]
 8003e5c:	693a      	ldr	r2, [r7, #16]
 8003e5e:	697b      	ldr	r3, [r7, #20]
 8003e60:	429a      	cmp	r2, r3
 8003e62:	f040 815a 	bne.w	800411a <HAL_GPIO_Init+0x2ee>
 8003e66:	683b      	ldr	r3, [r7, #0]
 8003e68:	685b      	ldr	r3, [r3, #4]
 8003e6a:	f003 0303 	and.w	r3, r3, #3
 8003e6e:	2b01      	cmp	r3, #1
 8003e70:	d005      	beq.n	8003e7e <HAL_GPIO_Init+0x52>
 8003e72:	683b      	ldr	r3, [r7, #0]
 8003e74:	685b      	ldr	r3, [r3, #4]
 8003e76:	f003 0303 	and.w	r3, r3, #3
 8003e7a:	2b02      	cmp	r3, #2
 8003e7c:	d130      	bne.n	8003ee0 <HAL_GPIO_Init+0xb4>
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	689b      	ldr	r3, [r3, #8]
 8003e82:	61bb      	str	r3, [r7, #24]
 8003e84:	69fb      	ldr	r3, [r7, #28]
 8003e86:	005b      	lsls	r3, r3, #1
 8003e88:	2203      	movs	r2, #3
 8003e8a:	fa02 f303 	lsl.w	r3, r2, r3
 8003e8e:	43db      	mvns	r3, r3
 8003e90:	69ba      	ldr	r2, [r7, #24]
 8003e92:	4013      	ands	r3, r2
 8003e94:	61bb      	str	r3, [r7, #24]
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	68da      	ldr	r2, [r3, #12]
 8003e9a:	69fb      	ldr	r3, [r7, #28]
 8003e9c:	005b      	lsls	r3, r3, #1
 8003e9e:	fa02 f303 	lsl.w	r3, r2, r3
 8003ea2:	69ba      	ldr	r2, [r7, #24]
 8003ea4:	4313      	orrs	r3, r2
 8003ea6:	61bb      	str	r3, [r7, #24]
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	69ba      	ldr	r2, [r7, #24]
 8003eac:	609a      	str	r2, [r3, #8]
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	685b      	ldr	r3, [r3, #4]
 8003eb2:	61bb      	str	r3, [r7, #24]
 8003eb4:	2201      	movs	r2, #1
 8003eb6:	69fb      	ldr	r3, [r7, #28]
 8003eb8:	fa02 f303 	lsl.w	r3, r2, r3
 8003ebc:	43db      	mvns	r3, r3
 8003ebe:	69ba      	ldr	r2, [r7, #24]
 8003ec0:	4013      	ands	r3, r2
 8003ec2:	61bb      	str	r3, [r7, #24]
 8003ec4:	683b      	ldr	r3, [r7, #0]
 8003ec6:	685b      	ldr	r3, [r3, #4]
 8003ec8:	091b      	lsrs	r3, r3, #4
 8003eca:	f003 0201 	and.w	r2, r3, #1
 8003ece:	69fb      	ldr	r3, [r7, #28]
 8003ed0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ed4:	69ba      	ldr	r2, [r7, #24]
 8003ed6:	4313      	orrs	r3, r2
 8003ed8:	61bb      	str	r3, [r7, #24]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	69ba      	ldr	r2, [r7, #24]
 8003ede:	605a      	str	r2, [r3, #4]
 8003ee0:	683b      	ldr	r3, [r7, #0]
 8003ee2:	685b      	ldr	r3, [r3, #4]
 8003ee4:	f003 0303 	and.w	r3, r3, #3
 8003ee8:	2b03      	cmp	r3, #3
 8003eea:	d017      	beq.n	8003f1c <HAL_GPIO_Init+0xf0>
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	68db      	ldr	r3, [r3, #12]
 8003ef0:	61bb      	str	r3, [r7, #24]
 8003ef2:	69fb      	ldr	r3, [r7, #28]
 8003ef4:	005b      	lsls	r3, r3, #1
 8003ef6:	2203      	movs	r2, #3
 8003ef8:	fa02 f303 	lsl.w	r3, r2, r3
 8003efc:	43db      	mvns	r3, r3
 8003efe:	69ba      	ldr	r2, [r7, #24]
 8003f00:	4013      	ands	r3, r2
 8003f02:	61bb      	str	r3, [r7, #24]
 8003f04:	683b      	ldr	r3, [r7, #0]
 8003f06:	689a      	ldr	r2, [r3, #8]
 8003f08:	69fb      	ldr	r3, [r7, #28]
 8003f0a:	005b      	lsls	r3, r3, #1
 8003f0c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f10:	69ba      	ldr	r2, [r7, #24]
 8003f12:	4313      	orrs	r3, r2
 8003f14:	61bb      	str	r3, [r7, #24]
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	69ba      	ldr	r2, [r7, #24]
 8003f1a:	60da      	str	r2, [r3, #12]
 8003f1c:	683b      	ldr	r3, [r7, #0]
 8003f1e:	685b      	ldr	r3, [r3, #4]
 8003f20:	f003 0303 	and.w	r3, r3, #3
 8003f24:	2b02      	cmp	r3, #2
 8003f26:	d123      	bne.n	8003f70 <HAL_GPIO_Init+0x144>
 8003f28:	69fb      	ldr	r3, [r7, #28]
 8003f2a:	08da      	lsrs	r2, r3, #3
 8003f2c:	687b      	ldr	r3, [r7, #4]
 8003f2e:	3208      	adds	r2, #8
 8003f30:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003f34:	61bb      	str	r3, [r7, #24]
 8003f36:	69fb      	ldr	r3, [r7, #28]
 8003f38:	f003 0307 	and.w	r3, r3, #7
 8003f3c:	009b      	lsls	r3, r3, #2
 8003f3e:	220f      	movs	r2, #15
 8003f40:	fa02 f303 	lsl.w	r3, r2, r3
 8003f44:	43db      	mvns	r3, r3
 8003f46:	69ba      	ldr	r2, [r7, #24]
 8003f48:	4013      	ands	r3, r2
 8003f4a:	61bb      	str	r3, [r7, #24]
 8003f4c:	683b      	ldr	r3, [r7, #0]
 8003f4e:	691a      	ldr	r2, [r3, #16]
 8003f50:	69fb      	ldr	r3, [r7, #28]
 8003f52:	f003 0307 	and.w	r3, r3, #7
 8003f56:	009b      	lsls	r3, r3, #2
 8003f58:	fa02 f303 	lsl.w	r3, r2, r3
 8003f5c:	69ba      	ldr	r2, [r7, #24]
 8003f5e:	4313      	orrs	r3, r2
 8003f60:	61bb      	str	r3, [r7, #24]
 8003f62:	69fb      	ldr	r3, [r7, #28]
 8003f64:	08da      	lsrs	r2, r3, #3
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	3208      	adds	r2, #8
 8003f6a:	69b9      	ldr	r1, [r7, #24]
 8003f6c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	61bb      	str	r3, [r7, #24]
 8003f76:	69fb      	ldr	r3, [r7, #28]
 8003f78:	005b      	lsls	r3, r3, #1
 8003f7a:	2203      	movs	r2, #3
 8003f7c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f80:	43db      	mvns	r3, r3
 8003f82:	69ba      	ldr	r2, [r7, #24]
 8003f84:	4013      	ands	r3, r2
 8003f86:	61bb      	str	r3, [r7, #24]
 8003f88:	683b      	ldr	r3, [r7, #0]
 8003f8a:	685b      	ldr	r3, [r3, #4]
 8003f8c:	f003 0203 	and.w	r2, r3, #3
 8003f90:	69fb      	ldr	r3, [r7, #28]
 8003f92:	005b      	lsls	r3, r3, #1
 8003f94:	fa02 f303 	lsl.w	r3, r2, r3
 8003f98:	69ba      	ldr	r2, [r7, #24]
 8003f9a:	4313      	orrs	r3, r2
 8003f9c:	61bb      	str	r3, [r7, #24]
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	69ba      	ldr	r2, [r7, #24]
 8003fa2:	601a      	str	r2, [r3, #0]
 8003fa4:	683b      	ldr	r3, [r7, #0]
 8003fa6:	685b      	ldr	r3, [r3, #4]
 8003fa8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	f000 80b4 	beq.w	800411a <HAL_GPIO_Init+0x2ee>
 8003fb2:	2300      	movs	r3, #0
 8003fb4:	60fb      	str	r3, [r7, #12]
 8003fb6:	4b60      	ldr	r3, [pc, #384]	@ (8004138 <HAL_GPIO_Init+0x30c>)
 8003fb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fba:	4a5f      	ldr	r2, [pc, #380]	@ (8004138 <HAL_GPIO_Init+0x30c>)
 8003fbc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003fc0:	6453      	str	r3, [r2, #68]	@ 0x44
 8003fc2:	4b5d      	ldr	r3, [pc, #372]	@ (8004138 <HAL_GPIO_Init+0x30c>)
 8003fc4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fc6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003fca:	60fb      	str	r3, [r7, #12]
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	4a5b      	ldr	r2, [pc, #364]	@ (800413c <HAL_GPIO_Init+0x310>)
 8003fd0:	69fb      	ldr	r3, [r7, #28]
 8003fd2:	089b      	lsrs	r3, r3, #2
 8003fd4:	3302      	adds	r3, #2
 8003fd6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003fda:	61bb      	str	r3, [r7, #24]
 8003fdc:	69fb      	ldr	r3, [r7, #28]
 8003fde:	f003 0303 	and.w	r3, r3, #3
 8003fe2:	009b      	lsls	r3, r3, #2
 8003fe4:	220f      	movs	r2, #15
 8003fe6:	fa02 f303 	lsl.w	r3, r2, r3
 8003fea:	43db      	mvns	r3, r3
 8003fec:	69ba      	ldr	r2, [r7, #24]
 8003fee:	4013      	ands	r3, r2
 8003ff0:	61bb      	str	r3, [r7, #24]
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	4a52      	ldr	r2, [pc, #328]	@ (8004140 <HAL_GPIO_Init+0x314>)
 8003ff6:	4293      	cmp	r3, r2
 8003ff8:	d02b      	beq.n	8004052 <HAL_GPIO_Init+0x226>
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	4a51      	ldr	r2, [pc, #324]	@ (8004144 <HAL_GPIO_Init+0x318>)
 8003ffe:	4293      	cmp	r3, r2
 8004000:	d025      	beq.n	800404e <HAL_GPIO_Init+0x222>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	4a50      	ldr	r2, [pc, #320]	@ (8004148 <HAL_GPIO_Init+0x31c>)
 8004006:	4293      	cmp	r3, r2
 8004008:	d01f      	beq.n	800404a <HAL_GPIO_Init+0x21e>
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	4a4f      	ldr	r2, [pc, #316]	@ (800414c <HAL_GPIO_Init+0x320>)
 800400e:	4293      	cmp	r3, r2
 8004010:	d019      	beq.n	8004046 <HAL_GPIO_Init+0x21a>
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	4a4e      	ldr	r2, [pc, #312]	@ (8004150 <HAL_GPIO_Init+0x324>)
 8004016:	4293      	cmp	r3, r2
 8004018:	d013      	beq.n	8004042 <HAL_GPIO_Init+0x216>
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	4a4d      	ldr	r2, [pc, #308]	@ (8004154 <HAL_GPIO_Init+0x328>)
 800401e:	4293      	cmp	r3, r2
 8004020:	d00d      	beq.n	800403e <HAL_GPIO_Init+0x212>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	4a4c      	ldr	r2, [pc, #304]	@ (8004158 <HAL_GPIO_Init+0x32c>)
 8004026:	4293      	cmp	r3, r2
 8004028:	d007      	beq.n	800403a <HAL_GPIO_Init+0x20e>
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	4a4b      	ldr	r2, [pc, #300]	@ (800415c <HAL_GPIO_Init+0x330>)
 800402e:	4293      	cmp	r3, r2
 8004030:	d101      	bne.n	8004036 <HAL_GPIO_Init+0x20a>
 8004032:	2307      	movs	r3, #7
 8004034:	e00e      	b.n	8004054 <HAL_GPIO_Init+0x228>
 8004036:	2308      	movs	r3, #8
 8004038:	e00c      	b.n	8004054 <HAL_GPIO_Init+0x228>
 800403a:	2306      	movs	r3, #6
 800403c:	e00a      	b.n	8004054 <HAL_GPIO_Init+0x228>
 800403e:	2305      	movs	r3, #5
 8004040:	e008      	b.n	8004054 <HAL_GPIO_Init+0x228>
 8004042:	2304      	movs	r3, #4
 8004044:	e006      	b.n	8004054 <HAL_GPIO_Init+0x228>
 8004046:	2303      	movs	r3, #3
 8004048:	e004      	b.n	8004054 <HAL_GPIO_Init+0x228>
 800404a:	2302      	movs	r3, #2
 800404c:	e002      	b.n	8004054 <HAL_GPIO_Init+0x228>
 800404e:	2301      	movs	r3, #1
 8004050:	e000      	b.n	8004054 <HAL_GPIO_Init+0x228>
 8004052:	2300      	movs	r3, #0
 8004054:	69fa      	ldr	r2, [r7, #28]
 8004056:	f002 0203 	and.w	r2, r2, #3
 800405a:	0092      	lsls	r2, r2, #2
 800405c:	4093      	lsls	r3, r2
 800405e:	69ba      	ldr	r2, [r7, #24]
 8004060:	4313      	orrs	r3, r2
 8004062:	61bb      	str	r3, [r7, #24]
 8004064:	4935      	ldr	r1, [pc, #212]	@ (800413c <HAL_GPIO_Init+0x310>)
 8004066:	69fb      	ldr	r3, [r7, #28]
 8004068:	089b      	lsrs	r3, r3, #2
 800406a:	3302      	adds	r3, #2
 800406c:	69ba      	ldr	r2, [r7, #24]
 800406e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004072:	4b3b      	ldr	r3, [pc, #236]	@ (8004160 <HAL_GPIO_Init+0x334>)
 8004074:	689b      	ldr	r3, [r3, #8]
 8004076:	61bb      	str	r3, [r7, #24]
 8004078:	693b      	ldr	r3, [r7, #16]
 800407a:	43db      	mvns	r3, r3
 800407c:	69ba      	ldr	r2, [r7, #24]
 800407e:	4013      	ands	r3, r2
 8004080:	61bb      	str	r3, [r7, #24]
 8004082:	683b      	ldr	r3, [r7, #0]
 8004084:	685b      	ldr	r3, [r3, #4]
 8004086:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800408a:	2b00      	cmp	r3, #0
 800408c:	d003      	beq.n	8004096 <HAL_GPIO_Init+0x26a>
 800408e:	69ba      	ldr	r2, [r7, #24]
 8004090:	693b      	ldr	r3, [r7, #16]
 8004092:	4313      	orrs	r3, r2
 8004094:	61bb      	str	r3, [r7, #24]
 8004096:	4a32      	ldr	r2, [pc, #200]	@ (8004160 <HAL_GPIO_Init+0x334>)
 8004098:	69bb      	ldr	r3, [r7, #24]
 800409a:	6093      	str	r3, [r2, #8]
 800409c:	4b30      	ldr	r3, [pc, #192]	@ (8004160 <HAL_GPIO_Init+0x334>)
 800409e:	68db      	ldr	r3, [r3, #12]
 80040a0:	61bb      	str	r3, [r7, #24]
 80040a2:	693b      	ldr	r3, [r7, #16]
 80040a4:	43db      	mvns	r3, r3
 80040a6:	69ba      	ldr	r2, [r7, #24]
 80040a8:	4013      	ands	r3, r2
 80040aa:	61bb      	str	r3, [r7, #24]
 80040ac:	683b      	ldr	r3, [r7, #0]
 80040ae:	685b      	ldr	r3, [r3, #4]
 80040b0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80040b4:	2b00      	cmp	r3, #0
 80040b6:	d003      	beq.n	80040c0 <HAL_GPIO_Init+0x294>
 80040b8:	69ba      	ldr	r2, [r7, #24]
 80040ba:	693b      	ldr	r3, [r7, #16]
 80040bc:	4313      	orrs	r3, r2
 80040be:	61bb      	str	r3, [r7, #24]
 80040c0:	4a27      	ldr	r2, [pc, #156]	@ (8004160 <HAL_GPIO_Init+0x334>)
 80040c2:	69bb      	ldr	r3, [r7, #24]
 80040c4:	60d3      	str	r3, [r2, #12]
 80040c6:	4b26      	ldr	r3, [pc, #152]	@ (8004160 <HAL_GPIO_Init+0x334>)
 80040c8:	685b      	ldr	r3, [r3, #4]
 80040ca:	61bb      	str	r3, [r7, #24]
 80040cc:	693b      	ldr	r3, [r7, #16]
 80040ce:	43db      	mvns	r3, r3
 80040d0:	69ba      	ldr	r2, [r7, #24]
 80040d2:	4013      	ands	r3, r2
 80040d4:	61bb      	str	r3, [r7, #24]
 80040d6:	683b      	ldr	r3, [r7, #0]
 80040d8:	685b      	ldr	r3, [r3, #4]
 80040da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d003      	beq.n	80040ea <HAL_GPIO_Init+0x2be>
 80040e2:	69ba      	ldr	r2, [r7, #24]
 80040e4:	693b      	ldr	r3, [r7, #16]
 80040e6:	4313      	orrs	r3, r2
 80040e8:	61bb      	str	r3, [r7, #24]
 80040ea:	4a1d      	ldr	r2, [pc, #116]	@ (8004160 <HAL_GPIO_Init+0x334>)
 80040ec:	69bb      	ldr	r3, [r7, #24]
 80040ee:	6053      	str	r3, [r2, #4]
 80040f0:	4b1b      	ldr	r3, [pc, #108]	@ (8004160 <HAL_GPIO_Init+0x334>)
 80040f2:	681b      	ldr	r3, [r3, #0]
 80040f4:	61bb      	str	r3, [r7, #24]
 80040f6:	693b      	ldr	r3, [r7, #16]
 80040f8:	43db      	mvns	r3, r3
 80040fa:	69ba      	ldr	r2, [r7, #24]
 80040fc:	4013      	ands	r3, r2
 80040fe:	61bb      	str	r3, [r7, #24]
 8004100:	683b      	ldr	r3, [r7, #0]
 8004102:	685b      	ldr	r3, [r3, #4]
 8004104:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004108:	2b00      	cmp	r3, #0
 800410a:	d003      	beq.n	8004114 <HAL_GPIO_Init+0x2e8>
 800410c:	69ba      	ldr	r2, [r7, #24]
 800410e:	693b      	ldr	r3, [r7, #16]
 8004110:	4313      	orrs	r3, r2
 8004112:	61bb      	str	r3, [r7, #24]
 8004114:	4a12      	ldr	r2, [pc, #72]	@ (8004160 <HAL_GPIO_Init+0x334>)
 8004116:	69bb      	ldr	r3, [r7, #24]
 8004118:	6013      	str	r3, [r2, #0]
 800411a:	69fb      	ldr	r3, [r7, #28]
 800411c:	3301      	adds	r3, #1
 800411e:	61fb      	str	r3, [r7, #28]
 8004120:	69fb      	ldr	r3, [r7, #28]
 8004122:	2b0f      	cmp	r3, #15
 8004124:	f67f ae90 	bls.w	8003e48 <HAL_GPIO_Init+0x1c>
 8004128:	bf00      	nop
 800412a:	bf00      	nop
 800412c:	3724      	adds	r7, #36	@ 0x24
 800412e:	46bd      	mov	sp, r7
 8004130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004134:	4770      	bx	lr
 8004136:	bf00      	nop
 8004138:	40023800 	.word	0x40023800
 800413c:	40013800 	.word	0x40013800
 8004140:	40020000 	.word	0x40020000
 8004144:	40020400 	.word	0x40020400
 8004148:	40020800 	.word	0x40020800
 800414c:	40020c00 	.word	0x40020c00
 8004150:	40021000 	.word	0x40021000
 8004154:	40021400 	.word	0x40021400
 8004158:	40021800 	.word	0x40021800
 800415c:	40021c00 	.word	0x40021c00
 8004160:	40013c00 	.word	0x40013c00

08004164 <HAL_GPIO_ReadPin>:
 8004164:	b480      	push	{r7}
 8004166:	b085      	sub	sp, #20
 8004168:	af00      	add	r7, sp, #0
 800416a:	6078      	str	r0, [r7, #4]
 800416c:	460b      	mov	r3, r1
 800416e:	807b      	strh	r3, [r7, #2]
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	691a      	ldr	r2, [r3, #16]
 8004174:	887b      	ldrh	r3, [r7, #2]
 8004176:	4013      	ands	r3, r2
 8004178:	2b00      	cmp	r3, #0
 800417a:	d002      	beq.n	8004182 <HAL_GPIO_ReadPin+0x1e>
 800417c:	2301      	movs	r3, #1
 800417e:	73fb      	strb	r3, [r7, #15]
 8004180:	e001      	b.n	8004186 <HAL_GPIO_ReadPin+0x22>
 8004182:	2300      	movs	r3, #0
 8004184:	73fb      	strb	r3, [r7, #15]
 8004186:	7bfb      	ldrb	r3, [r7, #15]
 8004188:	4618      	mov	r0, r3
 800418a:	3714      	adds	r7, #20
 800418c:	46bd      	mov	sp, r7
 800418e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004192:	4770      	bx	lr

08004194 <HAL_GPIO_WritePin>:
 8004194:	b480      	push	{r7}
 8004196:	b083      	sub	sp, #12
 8004198:	af00      	add	r7, sp, #0
 800419a:	6078      	str	r0, [r7, #4]
 800419c:	460b      	mov	r3, r1
 800419e:	807b      	strh	r3, [r7, #2]
 80041a0:	4613      	mov	r3, r2
 80041a2:	707b      	strb	r3, [r7, #1]
 80041a4:	787b      	ldrb	r3, [r7, #1]
 80041a6:	2b00      	cmp	r3, #0
 80041a8:	d003      	beq.n	80041b2 <HAL_GPIO_WritePin+0x1e>
 80041aa:	887a      	ldrh	r2, [r7, #2]
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	619a      	str	r2, [r3, #24]
 80041b0:	e003      	b.n	80041ba <HAL_GPIO_WritePin+0x26>
 80041b2:	887b      	ldrh	r3, [r7, #2]
 80041b4:	041a      	lsls	r2, r3, #16
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	619a      	str	r2, [r3, #24]
 80041ba:	bf00      	nop
 80041bc:	370c      	adds	r7, #12
 80041be:	46bd      	mov	sp, r7
 80041c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041c4:	4770      	bx	lr
	...

080041c8 <HAL_GPIO_EXTI_IRQHandler>:
 80041c8:	b580      	push	{r7, lr}
 80041ca:	b082      	sub	sp, #8
 80041cc:	af00      	add	r7, sp, #0
 80041ce:	4603      	mov	r3, r0
 80041d0:	80fb      	strh	r3, [r7, #6]
 80041d2:	4b08      	ldr	r3, [pc, #32]	@ (80041f4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80041d4:	695a      	ldr	r2, [r3, #20]
 80041d6:	88fb      	ldrh	r3, [r7, #6]
 80041d8:	4013      	ands	r3, r2
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d006      	beq.n	80041ec <HAL_GPIO_EXTI_IRQHandler+0x24>
 80041de:	4a05      	ldr	r2, [pc, #20]	@ (80041f4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80041e0:	88fb      	ldrh	r3, [r7, #6]
 80041e2:	6153      	str	r3, [r2, #20]
 80041e4:	88fb      	ldrh	r3, [r7, #6]
 80041e6:	4618      	mov	r0, r3
 80041e8:	f7fe f968 	bl	80024bc <HAL_GPIO_EXTI_Callback>
 80041ec:	bf00      	nop
 80041ee:	3708      	adds	r7, #8
 80041f0:	46bd      	mov	sp, r7
 80041f2:	bd80      	pop	{r7, pc}
 80041f4:	40013c00 	.word	0x40013c00

080041f8 <HAL_RCC_OscConfig>:
 80041f8:	b580      	push	{r7, lr}
 80041fa:	b086      	sub	sp, #24
 80041fc:	af00      	add	r7, sp, #0
 80041fe:	6078      	str	r0, [r7, #4]
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	2b00      	cmp	r3, #0
 8004204:	d101      	bne.n	800420a <HAL_RCC_OscConfig+0x12>
 8004206:	2301      	movs	r3, #1
 8004208:	e267      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	f003 0301 	and.w	r3, r3, #1
 8004212:	2b00      	cmp	r3, #0
 8004214:	d075      	beq.n	8004302 <HAL_RCC_OscConfig+0x10a>
 8004216:	4b88      	ldr	r3, [pc, #544]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004218:	689b      	ldr	r3, [r3, #8]
 800421a:	f003 030c 	and.w	r3, r3, #12
 800421e:	2b04      	cmp	r3, #4
 8004220:	d00c      	beq.n	800423c <HAL_RCC_OscConfig+0x44>
 8004222:	4b85      	ldr	r3, [pc, #532]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004224:	689b      	ldr	r3, [r3, #8]
 8004226:	f003 030c 	and.w	r3, r3, #12
 800422a:	2b08      	cmp	r3, #8
 800422c:	d112      	bne.n	8004254 <HAL_RCC_OscConfig+0x5c>
 800422e:	4b82      	ldr	r3, [pc, #520]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004230:	685b      	ldr	r3, [r3, #4]
 8004232:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004236:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800423a:	d10b      	bne.n	8004254 <HAL_RCC_OscConfig+0x5c>
 800423c:	4b7e      	ldr	r3, [pc, #504]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004244:	2b00      	cmp	r3, #0
 8004246:	d05b      	beq.n	8004300 <HAL_RCC_OscConfig+0x108>
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	685b      	ldr	r3, [r3, #4]
 800424c:	2b00      	cmp	r3, #0
 800424e:	d157      	bne.n	8004300 <HAL_RCC_OscConfig+0x108>
 8004250:	2301      	movs	r3, #1
 8004252:	e242      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	685b      	ldr	r3, [r3, #4]
 8004258:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800425c:	d106      	bne.n	800426c <HAL_RCC_OscConfig+0x74>
 800425e:	4b76      	ldr	r3, [pc, #472]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	4a75      	ldr	r2, [pc, #468]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004264:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004268:	6013      	str	r3, [r2, #0]
 800426a:	e01d      	b.n	80042a8 <HAL_RCC_OscConfig+0xb0>
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	685b      	ldr	r3, [r3, #4]
 8004270:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004274:	d10c      	bne.n	8004290 <HAL_RCC_OscConfig+0x98>
 8004276:	4b70      	ldr	r3, [pc, #448]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	4a6f      	ldr	r2, [pc, #444]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800427c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004280:	6013      	str	r3, [r2, #0]
 8004282:	4b6d      	ldr	r3, [pc, #436]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	4a6c      	ldr	r2, [pc, #432]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004288:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800428c:	6013      	str	r3, [r2, #0]
 800428e:	e00b      	b.n	80042a8 <HAL_RCC_OscConfig+0xb0>
 8004290:	4b69      	ldr	r3, [pc, #420]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	4a68      	ldr	r2, [pc, #416]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004296:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800429a:	6013      	str	r3, [r2, #0]
 800429c:	4b66      	ldr	r3, [pc, #408]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	4a65      	ldr	r2, [pc, #404]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 80042a2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80042a6:	6013      	str	r3, [r2, #0]
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	685b      	ldr	r3, [r3, #4]
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d013      	beq.n	80042d8 <HAL_RCC_OscConfig+0xe0>
 80042b0:	f7fe fc76 	bl	8002ba0 <HAL_GetTick>
 80042b4:	6138      	str	r0, [r7, #16]
 80042b6:	e008      	b.n	80042ca <HAL_RCC_OscConfig+0xd2>
 80042b8:	f7fe fc72 	bl	8002ba0 <HAL_GetTick>
 80042bc:	4602      	mov	r2, r0
 80042be:	693b      	ldr	r3, [r7, #16]
 80042c0:	1ad3      	subs	r3, r2, r3
 80042c2:	2b64      	cmp	r3, #100	@ 0x64
 80042c4:	d901      	bls.n	80042ca <HAL_RCC_OscConfig+0xd2>
 80042c6:	2303      	movs	r3, #3
 80042c8:	e207      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 80042ca:	4b5b      	ldr	r3, [pc, #364]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d0f0      	beq.n	80042b8 <HAL_RCC_OscConfig+0xc0>
 80042d6:	e014      	b.n	8004302 <HAL_RCC_OscConfig+0x10a>
 80042d8:	f7fe fc62 	bl	8002ba0 <HAL_GetTick>
 80042dc:	6138      	str	r0, [r7, #16]
 80042de:	e008      	b.n	80042f2 <HAL_RCC_OscConfig+0xfa>
 80042e0:	f7fe fc5e 	bl	8002ba0 <HAL_GetTick>
 80042e4:	4602      	mov	r2, r0
 80042e6:	693b      	ldr	r3, [r7, #16]
 80042e8:	1ad3      	subs	r3, r2, r3
 80042ea:	2b64      	cmp	r3, #100	@ 0x64
 80042ec:	d901      	bls.n	80042f2 <HAL_RCC_OscConfig+0xfa>
 80042ee:	2303      	movs	r3, #3
 80042f0:	e1f3      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 80042f2:	4b51      	ldr	r3, [pc, #324]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d1f0      	bne.n	80042e0 <HAL_RCC_OscConfig+0xe8>
 80042fe:	e000      	b.n	8004302 <HAL_RCC_OscConfig+0x10a>
 8004300:	bf00      	nop
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	f003 0302 	and.w	r3, r3, #2
 800430a:	2b00      	cmp	r3, #0
 800430c:	d063      	beq.n	80043d6 <HAL_RCC_OscConfig+0x1de>
 800430e:	4b4a      	ldr	r3, [pc, #296]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004310:	689b      	ldr	r3, [r3, #8]
 8004312:	f003 030c 	and.w	r3, r3, #12
 8004316:	2b00      	cmp	r3, #0
 8004318:	d00b      	beq.n	8004332 <HAL_RCC_OscConfig+0x13a>
 800431a:	4b47      	ldr	r3, [pc, #284]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800431c:	689b      	ldr	r3, [r3, #8]
 800431e:	f003 030c 	and.w	r3, r3, #12
 8004322:	2b08      	cmp	r3, #8
 8004324:	d11c      	bne.n	8004360 <HAL_RCC_OscConfig+0x168>
 8004326:	4b44      	ldr	r3, [pc, #272]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004328:	685b      	ldr	r3, [r3, #4]
 800432a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800432e:	2b00      	cmp	r3, #0
 8004330:	d116      	bne.n	8004360 <HAL_RCC_OscConfig+0x168>
 8004332:	4b41      	ldr	r3, [pc, #260]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	f003 0302 	and.w	r3, r3, #2
 800433a:	2b00      	cmp	r3, #0
 800433c:	d005      	beq.n	800434a <HAL_RCC_OscConfig+0x152>
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	68db      	ldr	r3, [r3, #12]
 8004342:	2b01      	cmp	r3, #1
 8004344:	d001      	beq.n	800434a <HAL_RCC_OscConfig+0x152>
 8004346:	2301      	movs	r3, #1
 8004348:	e1c7      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 800434a:	4b3b      	ldr	r3, [pc, #236]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	691b      	ldr	r3, [r3, #16]
 8004356:	00db      	lsls	r3, r3, #3
 8004358:	4937      	ldr	r1, [pc, #220]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800435a:	4313      	orrs	r3, r2
 800435c:	600b      	str	r3, [r1, #0]
 800435e:	e03a      	b.n	80043d6 <HAL_RCC_OscConfig+0x1de>
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	68db      	ldr	r3, [r3, #12]
 8004364:	2b00      	cmp	r3, #0
 8004366:	d020      	beq.n	80043aa <HAL_RCC_OscConfig+0x1b2>
 8004368:	4b34      	ldr	r3, [pc, #208]	@ (800443c <HAL_RCC_OscConfig+0x244>)
 800436a:	2201      	movs	r2, #1
 800436c:	601a      	str	r2, [r3, #0]
 800436e:	f7fe fc17 	bl	8002ba0 <HAL_GetTick>
 8004372:	6138      	str	r0, [r7, #16]
 8004374:	e008      	b.n	8004388 <HAL_RCC_OscConfig+0x190>
 8004376:	f7fe fc13 	bl	8002ba0 <HAL_GetTick>
 800437a:	4602      	mov	r2, r0
 800437c:	693b      	ldr	r3, [r7, #16]
 800437e:	1ad3      	subs	r3, r2, r3
 8004380:	2b02      	cmp	r3, #2
 8004382:	d901      	bls.n	8004388 <HAL_RCC_OscConfig+0x190>
 8004384:	2303      	movs	r3, #3
 8004386:	e1a8      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 8004388:	4b2b      	ldr	r3, [pc, #172]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	f003 0302 	and.w	r3, r3, #2
 8004390:	2b00      	cmp	r3, #0
 8004392:	d0f0      	beq.n	8004376 <HAL_RCC_OscConfig+0x17e>
 8004394:	4b28      	ldr	r3, [pc, #160]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	691b      	ldr	r3, [r3, #16]
 80043a0:	00db      	lsls	r3, r3, #3
 80043a2:	4925      	ldr	r1, [pc, #148]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 80043a4:	4313      	orrs	r3, r2
 80043a6:	600b      	str	r3, [r1, #0]
 80043a8:	e015      	b.n	80043d6 <HAL_RCC_OscConfig+0x1de>
 80043aa:	4b24      	ldr	r3, [pc, #144]	@ (800443c <HAL_RCC_OscConfig+0x244>)
 80043ac:	2200      	movs	r2, #0
 80043ae:	601a      	str	r2, [r3, #0]
 80043b0:	f7fe fbf6 	bl	8002ba0 <HAL_GetTick>
 80043b4:	6138      	str	r0, [r7, #16]
 80043b6:	e008      	b.n	80043ca <HAL_RCC_OscConfig+0x1d2>
 80043b8:	f7fe fbf2 	bl	8002ba0 <HAL_GetTick>
 80043bc:	4602      	mov	r2, r0
 80043be:	693b      	ldr	r3, [r7, #16]
 80043c0:	1ad3      	subs	r3, r2, r3
 80043c2:	2b02      	cmp	r3, #2
 80043c4:	d901      	bls.n	80043ca <HAL_RCC_OscConfig+0x1d2>
 80043c6:	2303      	movs	r3, #3
 80043c8:	e187      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 80043ca:	4b1b      	ldr	r3, [pc, #108]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	f003 0302 	and.w	r3, r3, #2
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	d1f0      	bne.n	80043b8 <HAL_RCC_OscConfig+0x1c0>
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	f003 0308 	and.w	r3, r3, #8
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d036      	beq.n	8004450 <HAL_RCC_OscConfig+0x258>
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	695b      	ldr	r3, [r3, #20]
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d016      	beq.n	8004418 <HAL_RCC_OscConfig+0x220>
 80043ea:	4b15      	ldr	r3, [pc, #84]	@ (8004440 <HAL_RCC_OscConfig+0x248>)
 80043ec:	2201      	movs	r2, #1
 80043ee:	601a      	str	r2, [r3, #0]
 80043f0:	f7fe fbd6 	bl	8002ba0 <HAL_GetTick>
 80043f4:	6138      	str	r0, [r7, #16]
 80043f6:	e008      	b.n	800440a <HAL_RCC_OscConfig+0x212>
 80043f8:	f7fe fbd2 	bl	8002ba0 <HAL_GetTick>
 80043fc:	4602      	mov	r2, r0
 80043fe:	693b      	ldr	r3, [r7, #16]
 8004400:	1ad3      	subs	r3, r2, r3
 8004402:	2b02      	cmp	r3, #2
 8004404:	d901      	bls.n	800440a <HAL_RCC_OscConfig+0x212>
 8004406:	2303      	movs	r3, #3
 8004408:	e167      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 800440a:	4b0b      	ldr	r3, [pc, #44]	@ (8004438 <HAL_RCC_OscConfig+0x240>)
 800440c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800440e:	f003 0302 	and.w	r3, r3, #2
 8004412:	2b00      	cmp	r3, #0
 8004414:	d0f0      	beq.n	80043f8 <HAL_RCC_OscConfig+0x200>
 8004416:	e01b      	b.n	8004450 <HAL_RCC_OscConfig+0x258>
 8004418:	4b09      	ldr	r3, [pc, #36]	@ (8004440 <HAL_RCC_OscConfig+0x248>)
 800441a:	2200      	movs	r2, #0
 800441c:	601a      	str	r2, [r3, #0]
 800441e:	f7fe fbbf 	bl	8002ba0 <HAL_GetTick>
 8004422:	6138      	str	r0, [r7, #16]
 8004424:	e00e      	b.n	8004444 <HAL_RCC_OscConfig+0x24c>
 8004426:	f7fe fbbb 	bl	8002ba0 <HAL_GetTick>
 800442a:	4602      	mov	r2, r0
 800442c:	693b      	ldr	r3, [r7, #16]
 800442e:	1ad3      	subs	r3, r2, r3
 8004430:	2b02      	cmp	r3, #2
 8004432:	d907      	bls.n	8004444 <HAL_RCC_OscConfig+0x24c>
 8004434:	2303      	movs	r3, #3
 8004436:	e150      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 8004438:	40023800 	.word	0x40023800
 800443c:	42470000 	.word	0x42470000
 8004440:	42470e80 	.word	0x42470e80
 8004444:	4b88      	ldr	r3, [pc, #544]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004446:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004448:	f003 0302 	and.w	r3, r3, #2
 800444c:	2b00      	cmp	r3, #0
 800444e:	d1ea      	bne.n	8004426 <HAL_RCC_OscConfig+0x22e>
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	f003 0304 	and.w	r3, r3, #4
 8004458:	2b00      	cmp	r3, #0
 800445a:	f000 8097 	beq.w	800458c <HAL_RCC_OscConfig+0x394>
 800445e:	2300      	movs	r3, #0
 8004460:	75fb      	strb	r3, [r7, #23]
 8004462:	4b81      	ldr	r3, [pc, #516]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004464:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004466:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800446a:	2b00      	cmp	r3, #0
 800446c:	d10f      	bne.n	800448e <HAL_RCC_OscConfig+0x296>
 800446e:	2300      	movs	r3, #0
 8004470:	60bb      	str	r3, [r7, #8]
 8004472:	4b7d      	ldr	r3, [pc, #500]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004476:	4a7c      	ldr	r2, [pc, #496]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004478:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800447c:	6413      	str	r3, [r2, #64]	@ 0x40
 800447e:	4b7a      	ldr	r3, [pc, #488]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004480:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004482:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004486:	60bb      	str	r3, [r7, #8]
 8004488:	68bb      	ldr	r3, [r7, #8]
 800448a:	2301      	movs	r3, #1
 800448c:	75fb      	strb	r3, [r7, #23]
 800448e:	4b77      	ldr	r3, [pc, #476]	@ (800466c <HAL_RCC_OscConfig+0x474>)
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004496:	2b00      	cmp	r3, #0
 8004498:	d118      	bne.n	80044cc <HAL_RCC_OscConfig+0x2d4>
 800449a:	4b74      	ldr	r3, [pc, #464]	@ (800466c <HAL_RCC_OscConfig+0x474>)
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	4a73      	ldr	r2, [pc, #460]	@ (800466c <HAL_RCC_OscConfig+0x474>)
 80044a0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80044a4:	6013      	str	r3, [r2, #0]
 80044a6:	f7fe fb7b 	bl	8002ba0 <HAL_GetTick>
 80044aa:	6138      	str	r0, [r7, #16]
 80044ac:	e008      	b.n	80044c0 <HAL_RCC_OscConfig+0x2c8>
 80044ae:	f7fe fb77 	bl	8002ba0 <HAL_GetTick>
 80044b2:	4602      	mov	r2, r0
 80044b4:	693b      	ldr	r3, [r7, #16]
 80044b6:	1ad3      	subs	r3, r2, r3
 80044b8:	2b02      	cmp	r3, #2
 80044ba:	d901      	bls.n	80044c0 <HAL_RCC_OscConfig+0x2c8>
 80044bc:	2303      	movs	r3, #3
 80044be:	e10c      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 80044c0:	4b6a      	ldr	r3, [pc, #424]	@ (800466c <HAL_RCC_OscConfig+0x474>)
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d0f0      	beq.n	80044ae <HAL_RCC_OscConfig+0x2b6>
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	689b      	ldr	r3, [r3, #8]
 80044d0:	2b01      	cmp	r3, #1
 80044d2:	d106      	bne.n	80044e2 <HAL_RCC_OscConfig+0x2ea>
 80044d4:	4b64      	ldr	r3, [pc, #400]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80044d6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80044d8:	4a63      	ldr	r2, [pc, #396]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80044da:	f043 0301 	orr.w	r3, r3, #1
 80044de:	6713      	str	r3, [r2, #112]	@ 0x70
 80044e0:	e01c      	b.n	800451c <HAL_RCC_OscConfig+0x324>
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	689b      	ldr	r3, [r3, #8]
 80044e6:	2b05      	cmp	r3, #5
 80044e8:	d10c      	bne.n	8004504 <HAL_RCC_OscConfig+0x30c>
 80044ea:	4b5f      	ldr	r3, [pc, #380]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80044ec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80044ee:	4a5e      	ldr	r2, [pc, #376]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80044f0:	f043 0304 	orr.w	r3, r3, #4
 80044f4:	6713      	str	r3, [r2, #112]	@ 0x70
 80044f6:	4b5c      	ldr	r3, [pc, #368]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80044f8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80044fa:	4a5b      	ldr	r2, [pc, #364]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80044fc:	f043 0301 	orr.w	r3, r3, #1
 8004500:	6713      	str	r3, [r2, #112]	@ 0x70
 8004502:	e00b      	b.n	800451c <HAL_RCC_OscConfig+0x324>
 8004504:	4b58      	ldr	r3, [pc, #352]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004506:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004508:	4a57      	ldr	r2, [pc, #348]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 800450a:	f023 0301 	bic.w	r3, r3, #1
 800450e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004510:	4b55      	ldr	r3, [pc, #340]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004512:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004514:	4a54      	ldr	r2, [pc, #336]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004516:	f023 0304 	bic.w	r3, r3, #4
 800451a:	6713      	str	r3, [r2, #112]	@ 0x70
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	689b      	ldr	r3, [r3, #8]
 8004520:	2b00      	cmp	r3, #0
 8004522:	d015      	beq.n	8004550 <HAL_RCC_OscConfig+0x358>
 8004524:	f7fe fb3c 	bl	8002ba0 <HAL_GetTick>
 8004528:	6138      	str	r0, [r7, #16]
 800452a:	e00a      	b.n	8004542 <HAL_RCC_OscConfig+0x34a>
 800452c:	f7fe fb38 	bl	8002ba0 <HAL_GetTick>
 8004530:	4602      	mov	r2, r0
 8004532:	693b      	ldr	r3, [r7, #16]
 8004534:	1ad3      	subs	r3, r2, r3
 8004536:	f241 3288 	movw	r2, #5000	@ 0x1388
 800453a:	4293      	cmp	r3, r2
 800453c:	d901      	bls.n	8004542 <HAL_RCC_OscConfig+0x34a>
 800453e:	2303      	movs	r3, #3
 8004540:	e0cb      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 8004542:	4b49      	ldr	r3, [pc, #292]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004544:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004546:	f003 0302 	and.w	r3, r3, #2
 800454a:	2b00      	cmp	r3, #0
 800454c:	d0ee      	beq.n	800452c <HAL_RCC_OscConfig+0x334>
 800454e:	e014      	b.n	800457a <HAL_RCC_OscConfig+0x382>
 8004550:	f7fe fb26 	bl	8002ba0 <HAL_GetTick>
 8004554:	6138      	str	r0, [r7, #16]
 8004556:	e00a      	b.n	800456e <HAL_RCC_OscConfig+0x376>
 8004558:	f7fe fb22 	bl	8002ba0 <HAL_GetTick>
 800455c:	4602      	mov	r2, r0
 800455e:	693b      	ldr	r3, [r7, #16]
 8004560:	1ad3      	subs	r3, r2, r3
 8004562:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004566:	4293      	cmp	r3, r2
 8004568:	d901      	bls.n	800456e <HAL_RCC_OscConfig+0x376>
 800456a:	2303      	movs	r3, #3
 800456c:	e0b5      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 800456e:	4b3e      	ldr	r3, [pc, #248]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004570:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004572:	f003 0302 	and.w	r3, r3, #2
 8004576:	2b00      	cmp	r3, #0
 8004578:	d1ee      	bne.n	8004558 <HAL_RCC_OscConfig+0x360>
 800457a:	7dfb      	ldrb	r3, [r7, #23]
 800457c:	2b01      	cmp	r3, #1
 800457e:	d105      	bne.n	800458c <HAL_RCC_OscConfig+0x394>
 8004580:	4b39      	ldr	r3, [pc, #228]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004582:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004584:	4a38      	ldr	r2, [pc, #224]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004586:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800458a:	6413      	str	r3, [r2, #64]	@ 0x40
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	699b      	ldr	r3, [r3, #24]
 8004590:	2b00      	cmp	r3, #0
 8004592:	f000 80a1 	beq.w	80046d8 <HAL_RCC_OscConfig+0x4e0>
 8004596:	4b34      	ldr	r3, [pc, #208]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004598:	689b      	ldr	r3, [r3, #8]
 800459a:	f003 030c 	and.w	r3, r3, #12
 800459e:	2b08      	cmp	r3, #8
 80045a0:	d05c      	beq.n	800465c <HAL_RCC_OscConfig+0x464>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	699b      	ldr	r3, [r3, #24]
 80045a6:	2b02      	cmp	r3, #2
 80045a8:	d141      	bne.n	800462e <HAL_RCC_OscConfig+0x436>
 80045aa:	4b31      	ldr	r3, [pc, #196]	@ (8004670 <HAL_RCC_OscConfig+0x478>)
 80045ac:	2200      	movs	r2, #0
 80045ae:	601a      	str	r2, [r3, #0]
 80045b0:	f7fe faf6 	bl	8002ba0 <HAL_GetTick>
 80045b4:	6138      	str	r0, [r7, #16]
 80045b6:	e008      	b.n	80045ca <HAL_RCC_OscConfig+0x3d2>
 80045b8:	f7fe faf2 	bl	8002ba0 <HAL_GetTick>
 80045bc:	4602      	mov	r2, r0
 80045be:	693b      	ldr	r3, [r7, #16]
 80045c0:	1ad3      	subs	r3, r2, r3
 80045c2:	2b02      	cmp	r3, #2
 80045c4:	d901      	bls.n	80045ca <HAL_RCC_OscConfig+0x3d2>
 80045c6:	2303      	movs	r3, #3
 80045c8:	e087      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 80045ca:	4b27      	ldr	r3, [pc, #156]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d1f0      	bne.n	80045b8 <HAL_RCC_OscConfig+0x3c0>
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	69da      	ldr	r2, [r3, #28]
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	6a1b      	ldr	r3, [r3, #32]
 80045de:	431a      	orrs	r2, r3
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045e4:	019b      	lsls	r3, r3, #6
 80045e6:	431a      	orrs	r2, r3
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80045ec:	085b      	lsrs	r3, r3, #1
 80045ee:	3b01      	subs	r3, #1
 80045f0:	041b      	lsls	r3, r3, #16
 80045f2:	431a      	orrs	r2, r3
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80045f8:	061b      	lsls	r3, r3, #24
 80045fa:	491b      	ldr	r1, [pc, #108]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 80045fc:	4313      	orrs	r3, r2
 80045fe:	604b      	str	r3, [r1, #4]
 8004600:	4b1b      	ldr	r3, [pc, #108]	@ (8004670 <HAL_RCC_OscConfig+0x478>)
 8004602:	2201      	movs	r2, #1
 8004604:	601a      	str	r2, [r3, #0]
 8004606:	f7fe facb 	bl	8002ba0 <HAL_GetTick>
 800460a:	6138      	str	r0, [r7, #16]
 800460c:	e008      	b.n	8004620 <HAL_RCC_OscConfig+0x428>
 800460e:	f7fe fac7 	bl	8002ba0 <HAL_GetTick>
 8004612:	4602      	mov	r2, r0
 8004614:	693b      	ldr	r3, [r7, #16]
 8004616:	1ad3      	subs	r3, r2, r3
 8004618:	2b02      	cmp	r3, #2
 800461a:	d901      	bls.n	8004620 <HAL_RCC_OscConfig+0x428>
 800461c:	2303      	movs	r3, #3
 800461e:	e05c      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 8004620:	4b11      	ldr	r3, [pc, #68]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004628:	2b00      	cmp	r3, #0
 800462a:	d0f0      	beq.n	800460e <HAL_RCC_OscConfig+0x416>
 800462c:	e054      	b.n	80046d8 <HAL_RCC_OscConfig+0x4e0>
 800462e:	4b10      	ldr	r3, [pc, #64]	@ (8004670 <HAL_RCC_OscConfig+0x478>)
 8004630:	2200      	movs	r2, #0
 8004632:	601a      	str	r2, [r3, #0]
 8004634:	f7fe fab4 	bl	8002ba0 <HAL_GetTick>
 8004638:	6138      	str	r0, [r7, #16]
 800463a:	e008      	b.n	800464e <HAL_RCC_OscConfig+0x456>
 800463c:	f7fe fab0 	bl	8002ba0 <HAL_GetTick>
 8004640:	4602      	mov	r2, r0
 8004642:	693b      	ldr	r3, [r7, #16]
 8004644:	1ad3      	subs	r3, r2, r3
 8004646:	2b02      	cmp	r3, #2
 8004648:	d901      	bls.n	800464e <HAL_RCC_OscConfig+0x456>
 800464a:	2303      	movs	r3, #3
 800464c:	e045      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 800464e:	4b06      	ldr	r3, [pc, #24]	@ (8004668 <HAL_RCC_OscConfig+0x470>)
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004656:	2b00      	cmp	r3, #0
 8004658:	d1f0      	bne.n	800463c <HAL_RCC_OscConfig+0x444>
 800465a:	e03d      	b.n	80046d8 <HAL_RCC_OscConfig+0x4e0>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	699b      	ldr	r3, [r3, #24]
 8004660:	2b01      	cmp	r3, #1
 8004662:	d107      	bne.n	8004674 <HAL_RCC_OscConfig+0x47c>
 8004664:	2301      	movs	r3, #1
 8004666:	e038      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 8004668:	40023800 	.word	0x40023800
 800466c:	40007000 	.word	0x40007000
 8004670:	42470060 	.word	0x42470060
 8004674:	4b1b      	ldr	r3, [pc, #108]	@ (80046e4 <HAL_RCC_OscConfig+0x4ec>)
 8004676:	685b      	ldr	r3, [r3, #4]
 8004678:	60fb      	str	r3, [r7, #12]
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	699b      	ldr	r3, [r3, #24]
 800467e:	2b01      	cmp	r3, #1
 8004680:	d028      	beq.n	80046d4 <HAL_RCC_OscConfig+0x4dc>
 8004682:	68fb      	ldr	r3, [r7, #12]
 8004684:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	69db      	ldr	r3, [r3, #28]
 800468c:	429a      	cmp	r2, r3
 800468e:	d121      	bne.n	80046d4 <HAL_RCC_OscConfig+0x4dc>
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	6a1b      	ldr	r3, [r3, #32]
 800469a:	429a      	cmp	r2, r3
 800469c:	d11a      	bne.n	80046d4 <HAL_RCC_OscConfig+0x4dc>
 800469e:	68fa      	ldr	r2, [r7, #12]
 80046a0:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80046a4:	4013      	ands	r3, r2
 80046a6:	687a      	ldr	r2, [r7, #4]
 80046a8:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80046aa:	0192      	lsls	r2, r2, #6
 80046ac:	4293      	cmp	r3, r2
 80046ae:	d111      	bne.n	80046d4 <HAL_RCC_OscConfig+0x4dc>
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80046ba:	085b      	lsrs	r3, r3, #1
 80046bc:	3b01      	subs	r3, #1
 80046be:	041b      	lsls	r3, r3, #16
 80046c0:	429a      	cmp	r2, r3
 80046c2:	d107      	bne.n	80046d4 <HAL_RCC_OscConfig+0x4dc>
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046ce:	061b      	lsls	r3, r3, #24
 80046d0:	429a      	cmp	r2, r3
 80046d2:	d001      	beq.n	80046d8 <HAL_RCC_OscConfig+0x4e0>
 80046d4:	2301      	movs	r3, #1
 80046d6:	e000      	b.n	80046da <HAL_RCC_OscConfig+0x4e2>
 80046d8:	2300      	movs	r3, #0
 80046da:	4618      	mov	r0, r3
 80046dc:	3718      	adds	r7, #24
 80046de:	46bd      	mov	sp, r7
 80046e0:	bd80      	pop	{r7, pc}
 80046e2:	bf00      	nop
 80046e4:	40023800 	.word	0x40023800

080046e8 <HAL_RCC_ClockConfig>:
 80046e8:	b580      	push	{r7, lr}
 80046ea:	b084      	sub	sp, #16
 80046ec:	af00      	add	r7, sp, #0
 80046ee:	6078      	str	r0, [r7, #4]
 80046f0:	6039      	str	r1, [r7, #0]
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	d101      	bne.n	80046fc <HAL_RCC_ClockConfig+0x14>
 80046f8:	2301      	movs	r3, #1
 80046fa:	e0cc      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 80046fc:	4b68      	ldr	r3, [pc, #416]	@ (80048a0 <HAL_RCC_ClockConfig+0x1b8>)
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	f003 0307 	and.w	r3, r3, #7
 8004704:	683a      	ldr	r2, [r7, #0]
 8004706:	429a      	cmp	r2, r3
 8004708:	d90c      	bls.n	8004724 <HAL_RCC_ClockConfig+0x3c>
 800470a:	4b65      	ldr	r3, [pc, #404]	@ (80048a0 <HAL_RCC_ClockConfig+0x1b8>)
 800470c:	683a      	ldr	r2, [r7, #0]
 800470e:	b2d2      	uxtb	r2, r2
 8004710:	701a      	strb	r2, [r3, #0]
 8004712:	4b63      	ldr	r3, [pc, #396]	@ (80048a0 <HAL_RCC_ClockConfig+0x1b8>)
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	f003 0307 	and.w	r3, r3, #7
 800471a:	683a      	ldr	r2, [r7, #0]
 800471c:	429a      	cmp	r2, r3
 800471e:	d001      	beq.n	8004724 <HAL_RCC_ClockConfig+0x3c>
 8004720:	2301      	movs	r3, #1
 8004722:	e0b8      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	f003 0302 	and.w	r3, r3, #2
 800472c:	2b00      	cmp	r3, #0
 800472e:	d020      	beq.n	8004772 <HAL_RCC_ClockConfig+0x8a>
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	f003 0304 	and.w	r3, r3, #4
 8004738:	2b00      	cmp	r3, #0
 800473a:	d005      	beq.n	8004748 <HAL_RCC_ClockConfig+0x60>
 800473c:	4b59      	ldr	r3, [pc, #356]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800473e:	689b      	ldr	r3, [r3, #8]
 8004740:	4a58      	ldr	r2, [pc, #352]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 8004742:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8004746:	6093      	str	r3, [r2, #8]
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	f003 0308 	and.w	r3, r3, #8
 8004750:	2b00      	cmp	r3, #0
 8004752:	d005      	beq.n	8004760 <HAL_RCC_ClockConfig+0x78>
 8004754:	4b53      	ldr	r3, [pc, #332]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 8004756:	689b      	ldr	r3, [r3, #8]
 8004758:	4a52      	ldr	r2, [pc, #328]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800475a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800475e:	6093      	str	r3, [r2, #8]
 8004760:	4b50      	ldr	r3, [pc, #320]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 8004762:	689b      	ldr	r3, [r3, #8]
 8004764:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	689b      	ldr	r3, [r3, #8]
 800476c:	494d      	ldr	r1, [pc, #308]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800476e:	4313      	orrs	r3, r2
 8004770:	608b      	str	r3, [r1, #8]
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	f003 0301 	and.w	r3, r3, #1
 800477a:	2b00      	cmp	r3, #0
 800477c:	d044      	beq.n	8004808 <HAL_RCC_ClockConfig+0x120>
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	685b      	ldr	r3, [r3, #4]
 8004782:	2b01      	cmp	r3, #1
 8004784:	d107      	bne.n	8004796 <HAL_RCC_ClockConfig+0xae>
 8004786:	4b47      	ldr	r3, [pc, #284]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800478e:	2b00      	cmp	r3, #0
 8004790:	d119      	bne.n	80047c6 <HAL_RCC_ClockConfig+0xde>
 8004792:	2301      	movs	r3, #1
 8004794:	e07f      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	685b      	ldr	r3, [r3, #4]
 800479a:	2b02      	cmp	r3, #2
 800479c:	d003      	beq.n	80047a6 <HAL_RCC_ClockConfig+0xbe>
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	685b      	ldr	r3, [r3, #4]
 80047a2:	2b03      	cmp	r3, #3
 80047a4:	d107      	bne.n	80047b6 <HAL_RCC_ClockConfig+0xce>
 80047a6:	4b3f      	ldr	r3, [pc, #252]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80047ae:	2b00      	cmp	r3, #0
 80047b0:	d109      	bne.n	80047c6 <HAL_RCC_ClockConfig+0xde>
 80047b2:	2301      	movs	r3, #1
 80047b4:	e06f      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 80047b6:	4b3b      	ldr	r3, [pc, #236]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	f003 0302 	and.w	r3, r3, #2
 80047be:	2b00      	cmp	r3, #0
 80047c0:	d101      	bne.n	80047c6 <HAL_RCC_ClockConfig+0xde>
 80047c2:	2301      	movs	r3, #1
 80047c4:	e067      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 80047c6:	4b37      	ldr	r3, [pc, #220]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 80047c8:	689b      	ldr	r3, [r3, #8]
 80047ca:	f023 0203 	bic.w	r2, r3, #3
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	685b      	ldr	r3, [r3, #4]
 80047d2:	4934      	ldr	r1, [pc, #208]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 80047d4:	4313      	orrs	r3, r2
 80047d6:	608b      	str	r3, [r1, #8]
 80047d8:	f7fe f9e2 	bl	8002ba0 <HAL_GetTick>
 80047dc:	60f8      	str	r0, [r7, #12]
 80047de:	e00a      	b.n	80047f6 <HAL_RCC_ClockConfig+0x10e>
 80047e0:	f7fe f9de 	bl	8002ba0 <HAL_GetTick>
 80047e4:	4602      	mov	r2, r0
 80047e6:	68fb      	ldr	r3, [r7, #12]
 80047e8:	1ad3      	subs	r3, r2, r3
 80047ea:	f241 3288 	movw	r2, #5000	@ 0x1388
 80047ee:	4293      	cmp	r3, r2
 80047f0:	d901      	bls.n	80047f6 <HAL_RCC_ClockConfig+0x10e>
 80047f2:	2303      	movs	r3, #3
 80047f4:	e04f      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 80047f6:	4b2b      	ldr	r3, [pc, #172]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 80047f8:	689b      	ldr	r3, [r3, #8]
 80047fa:	f003 020c 	and.w	r2, r3, #12
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	685b      	ldr	r3, [r3, #4]
 8004802:	009b      	lsls	r3, r3, #2
 8004804:	429a      	cmp	r2, r3
 8004806:	d1eb      	bne.n	80047e0 <HAL_RCC_ClockConfig+0xf8>
 8004808:	4b25      	ldr	r3, [pc, #148]	@ (80048a0 <HAL_RCC_ClockConfig+0x1b8>)
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	f003 0307 	and.w	r3, r3, #7
 8004810:	683a      	ldr	r2, [r7, #0]
 8004812:	429a      	cmp	r2, r3
 8004814:	d20c      	bcs.n	8004830 <HAL_RCC_ClockConfig+0x148>
 8004816:	4b22      	ldr	r3, [pc, #136]	@ (80048a0 <HAL_RCC_ClockConfig+0x1b8>)
 8004818:	683a      	ldr	r2, [r7, #0]
 800481a:	b2d2      	uxtb	r2, r2
 800481c:	701a      	strb	r2, [r3, #0]
 800481e:	4b20      	ldr	r3, [pc, #128]	@ (80048a0 <HAL_RCC_ClockConfig+0x1b8>)
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	f003 0307 	and.w	r3, r3, #7
 8004826:	683a      	ldr	r2, [r7, #0]
 8004828:	429a      	cmp	r2, r3
 800482a:	d001      	beq.n	8004830 <HAL_RCC_ClockConfig+0x148>
 800482c:	2301      	movs	r3, #1
 800482e:	e032      	b.n	8004896 <HAL_RCC_ClockConfig+0x1ae>
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	f003 0304 	and.w	r3, r3, #4
 8004838:	2b00      	cmp	r3, #0
 800483a:	d008      	beq.n	800484e <HAL_RCC_ClockConfig+0x166>
 800483c:	4b19      	ldr	r3, [pc, #100]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800483e:	689b      	ldr	r3, [r3, #8]
 8004840:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	68db      	ldr	r3, [r3, #12]
 8004848:	4916      	ldr	r1, [pc, #88]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800484a:	4313      	orrs	r3, r2
 800484c:	608b      	str	r3, [r1, #8]
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	f003 0308 	and.w	r3, r3, #8
 8004856:	2b00      	cmp	r3, #0
 8004858:	d009      	beq.n	800486e <HAL_RCC_ClockConfig+0x186>
 800485a:	4b12      	ldr	r3, [pc, #72]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800485c:	689b      	ldr	r3, [r3, #8]
 800485e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	691b      	ldr	r3, [r3, #16]
 8004866:	00db      	lsls	r3, r3, #3
 8004868:	490e      	ldr	r1, [pc, #56]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 800486a:	4313      	orrs	r3, r2
 800486c:	608b      	str	r3, [r1, #8]
 800486e:	f000 f821 	bl	80048b4 <HAL_RCC_GetSysClockFreq>
 8004872:	4602      	mov	r2, r0
 8004874:	4b0b      	ldr	r3, [pc, #44]	@ (80048a4 <HAL_RCC_ClockConfig+0x1bc>)
 8004876:	689b      	ldr	r3, [r3, #8]
 8004878:	091b      	lsrs	r3, r3, #4
 800487a:	f003 030f 	and.w	r3, r3, #15
 800487e:	490a      	ldr	r1, [pc, #40]	@ (80048a8 <HAL_RCC_ClockConfig+0x1c0>)
 8004880:	5ccb      	ldrb	r3, [r1, r3]
 8004882:	fa22 f303 	lsr.w	r3, r2, r3
 8004886:	4a09      	ldr	r2, [pc, #36]	@ (80048ac <HAL_RCC_ClockConfig+0x1c4>)
 8004888:	6013      	str	r3, [r2, #0]
 800488a:	4b09      	ldr	r3, [pc, #36]	@ (80048b0 <HAL_RCC_ClockConfig+0x1c8>)
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	4618      	mov	r0, r3
 8004890:	f7fe f942 	bl	8002b18 <HAL_InitTick>
 8004894:	2300      	movs	r3, #0
 8004896:	4618      	mov	r0, r3
 8004898:	3710      	adds	r7, #16
 800489a:	46bd      	mov	sp, r7
 800489c:	bd80      	pop	{r7, pc}
 800489e:	bf00      	nop
 80048a0:	40023c00 	.word	0x40023c00
 80048a4:	40023800 	.word	0x40023800
 80048a8:	0800720c 	.word	0x0800720c
 80048ac:	20000008 	.word	0x20000008
 80048b0:	2000000c 	.word	0x2000000c

080048b4 <HAL_RCC_GetSysClockFreq>:
 80048b4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80048b8:	b094      	sub	sp, #80	@ 0x50
 80048ba:	af00      	add	r7, sp, #0
 80048bc:	2300      	movs	r3, #0
 80048be:	647b      	str	r3, [r7, #68]	@ 0x44
 80048c0:	2300      	movs	r3, #0
 80048c2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80048c4:	2300      	movs	r3, #0
 80048c6:	643b      	str	r3, [r7, #64]	@ 0x40
 80048c8:	2300      	movs	r3, #0
 80048ca:	64bb      	str	r3, [r7, #72]	@ 0x48
 80048cc:	4b79      	ldr	r3, [pc, #484]	@ (8004ab4 <HAL_RCC_GetSysClockFreq+0x200>)
 80048ce:	689b      	ldr	r3, [r3, #8]
 80048d0:	f003 030c 	and.w	r3, r3, #12
 80048d4:	2b08      	cmp	r3, #8
 80048d6:	d00d      	beq.n	80048f4 <HAL_RCC_GetSysClockFreq+0x40>
 80048d8:	2b08      	cmp	r3, #8
 80048da:	f200 80e1 	bhi.w	8004aa0 <HAL_RCC_GetSysClockFreq+0x1ec>
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d002      	beq.n	80048e8 <HAL_RCC_GetSysClockFreq+0x34>
 80048e2:	2b04      	cmp	r3, #4
 80048e4:	d003      	beq.n	80048ee <HAL_RCC_GetSysClockFreq+0x3a>
 80048e6:	e0db      	b.n	8004aa0 <HAL_RCC_GetSysClockFreq+0x1ec>
 80048e8:	4b73      	ldr	r3, [pc, #460]	@ (8004ab8 <HAL_RCC_GetSysClockFreq+0x204>)
 80048ea:	64bb      	str	r3, [r7, #72]	@ 0x48
 80048ec:	e0db      	b.n	8004aa6 <HAL_RCC_GetSysClockFreq+0x1f2>
 80048ee:	4b73      	ldr	r3, [pc, #460]	@ (8004abc <HAL_RCC_GetSysClockFreq+0x208>)
 80048f0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80048f2:	e0d8      	b.n	8004aa6 <HAL_RCC_GetSysClockFreq+0x1f2>
 80048f4:	4b6f      	ldr	r3, [pc, #444]	@ (8004ab4 <HAL_RCC_GetSysClockFreq+0x200>)
 80048f6:	685b      	ldr	r3, [r3, #4]
 80048f8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80048fc:	647b      	str	r3, [r7, #68]	@ 0x44
 80048fe:	4b6d      	ldr	r3, [pc, #436]	@ (8004ab4 <HAL_RCC_GetSysClockFreq+0x200>)
 8004900:	685b      	ldr	r3, [r3, #4]
 8004902:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004906:	2b00      	cmp	r3, #0
 8004908:	d063      	beq.n	80049d2 <HAL_RCC_GetSysClockFreq+0x11e>
 800490a:	4b6a      	ldr	r3, [pc, #424]	@ (8004ab4 <HAL_RCC_GetSysClockFreq+0x200>)
 800490c:	685b      	ldr	r3, [r3, #4]
 800490e:	099b      	lsrs	r3, r3, #6
 8004910:	2200      	movs	r2, #0
 8004912:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004914:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8004916:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004918:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800491c:	633b      	str	r3, [r7, #48]	@ 0x30
 800491e:	2300      	movs	r3, #0
 8004920:	637b      	str	r3, [r7, #52]	@ 0x34
 8004922:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8004926:	4622      	mov	r2, r4
 8004928:	462b      	mov	r3, r5
 800492a:	f04f 0000 	mov.w	r0, #0
 800492e:	f04f 0100 	mov.w	r1, #0
 8004932:	0159      	lsls	r1, r3, #5
 8004934:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004938:	0150      	lsls	r0, r2, #5
 800493a:	4602      	mov	r2, r0
 800493c:	460b      	mov	r3, r1
 800493e:	4621      	mov	r1, r4
 8004940:	1a51      	subs	r1, r2, r1
 8004942:	6139      	str	r1, [r7, #16]
 8004944:	4629      	mov	r1, r5
 8004946:	eb63 0301 	sbc.w	r3, r3, r1
 800494a:	617b      	str	r3, [r7, #20]
 800494c:	f04f 0200 	mov.w	r2, #0
 8004950:	f04f 0300 	mov.w	r3, #0
 8004954:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004958:	4659      	mov	r1, fp
 800495a:	018b      	lsls	r3, r1, #6
 800495c:	4651      	mov	r1, sl
 800495e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004962:	4651      	mov	r1, sl
 8004964:	018a      	lsls	r2, r1, #6
 8004966:	4651      	mov	r1, sl
 8004968:	ebb2 0801 	subs.w	r8, r2, r1
 800496c:	4659      	mov	r1, fp
 800496e:	eb63 0901 	sbc.w	r9, r3, r1
 8004972:	f04f 0200 	mov.w	r2, #0
 8004976:	f04f 0300 	mov.w	r3, #0
 800497a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800497e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004982:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004986:	4690      	mov	r8, r2
 8004988:	4699      	mov	r9, r3
 800498a:	4623      	mov	r3, r4
 800498c:	eb18 0303 	adds.w	r3, r8, r3
 8004990:	60bb      	str	r3, [r7, #8]
 8004992:	462b      	mov	r3, r5
 8004994:	eb49 0303 	adc.w	r3, r9, r3
 8004998:	60fb      	str	r3, [r7, #12]
 800499a:	f04f 0200 	mov.w	r2, #0
 800499e:	f04f 0300 	mov.w	r3, #0
 80049a2:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80049a6:	4629      	mov	r1, r5
 80049a8:	024b      	lsls	r3, r1, #9
 80049aa:	4621      	mov	r1, r4
 80049ac:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80049b0:	4621      	mov	r1, r4
 80049b2:	024a      	lsls	r2, r1, #9
 80049b4:	4610      	mov	r0, r2
 80049b6:	4619      	mov	r1, r3
 80049b8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80049ba:	2200      	movs	r2, #0
 80049bc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80049be:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80049c0:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80049c4:	f7fb ff62 	bl	800088c <__aeabi_uldivmod>
 80049c8:	4602      	mov	r2, r0
 80049ca:	460b      	mov	r3, r1
 80049cc:	4613      	mov	r3, r2
 80049ce:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80049d0:	e058      	b.n	8004a84 <HAL_RCC_GetSysClockFreq+0x1d0>
 80049d2:	4b38      	ldr	r3, [pc, #224]	@ (8004ab4 <HAL_RCC_GetSysClockFreq+0x200>)
 80049d4:	685b      	ldr	r3, [r3, #4]
 80049d6:	099b      	lsrs	r3, r3, #6
 80049d8:	2200      	movs	r2, #0
 80049da:	4618      	mov	r0, r3
 80049dc:	4611      	mov	r1, r2
 80049de:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80049e2:	623b      	str	r3, [r7, #32]
 80049e4:	2300      	movs	r3, #0
 80049e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80049e8:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80049ec:	4642      	mov	r2, r8
 80049ee:	464b      	mov	r3, r9
 80049f0:	f04f 0000 	mov.w	r0, #0
 80049f4:	f04f 0100 	mov.w	r1, #0
 80049f8:	0159      	lsls	r1, r3, #5
 80049fa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80049fe:	0150      	lsls	r0, r2, #5
 8004a00:	4602      	mov	r2, r0
 8004a02:	460b      	mov	r3, r1
 8004a04:	4641      	mov	r1, r8
 8004a06:	ebb2 0a01 	subs.w	sl, r2, r1
 8004a0a:	4649      	mov	r1, r9
 8004a0c:	eb63 0b01 	sbc.w	fp, r3, r1
 8004a10:	f04f 0200 	mov.w	r2, #0
 8004a14:	f04f 0300 	mov.w	r3, #0
 8004a18:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8004a1c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8004a20:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8004a24:	ebb2 040a 	subs.w	r4, r2, sl
 8004a28:	eb63 050b 	sbc.w	r5, r3, fp
 8004a2c:	f04f 0200 	mov.w	r2, #0
 8004a30:	f04f 0300 	mov.w	r3, #0
 8004a34:	00eb      	lsls	r3, r5, #3
 8004a36:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004a3a:	00e2      	lsls	r2, r4, #3
 8004a3c:	4614      	mov	r4, r2
 8004a3e:	461d      	mov	r5, r3
 8004a40:	4643      	mov	r3, r8
 8004a42:	18e3      	adds	r3, r4, r3
 8004a44:	603b      	str	r3, [r7, #0]
 8004a46:	464b      	mov	r3, r9
 8004a48:	eb45 0303 	adc.w	r3, r5, r3
 8004a4c:	607b      	str	r3, [r7, #4]
 8004a4e:	f04f 0200 	mov.w	r2, #0
 8004a52:	f04f 0300 	mov.w	r3, #0
 8004a56:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004a5a:	4629      	mov	r1, r5
 8004a5c:	028b      	lsls	r3, r1, #10
 8004a5e:	4621      	mov	r1, r4
 8004a60:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004a64:	4621      	mov	r1, r4
 8004a66:	028a      	lsls	r2, r1, #10
 8004a68:	4610      	mov	r0, r2
 8004a6a:	4619      	mov	r1, r3
 8004a6c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004a6e:	2200      	movs	r2, #0
 8004a70:	61bb      	str	r3, [r7, #24]
 8004a72:	61fa      	str	r2, [r7, #28]
 8004a74:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004a78:	f7fb ff08 	bl	800088c <__aeabi_uldivmod>
 8004a7c:	4602      	mov	r2, r0
 8004a7e:	460b      	mov	r3, r1
 8004a80:	4613      	mov	r3, r2
 8004a82:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004a84:	4b0b      	ldr	r3, [pc, #44]	@ (8004ab4 <HAL_RCC_GetSysClockFreq+0x200>)
 8004a86:	685b      	ldr	r3, [r3, #4]
 8004a88:	0c1b      	lsrs	r3, r3, #16
 8004a8a:	f003 0303 	and.w	r3, r3, #3
 8004a8e:	3301      	adds	r3, #1
 8004a90:	005b      	lsls	r3, r3, #1
 8004a92:	643b      	str	r3, [r7, #64]	@ 0x40
 8004a94:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8004a96:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004a98:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a9c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004a9e:	e002      	b.n	8004aa6 <HAL_RCC_GetSysClockFreq+0x1f2>
 8004aa0:	4b05      	ldr	r3, [pc, #20]	@ (8004ab8 <HAL_RCC_GetSysClockFreq+0x204>)
 8004aa2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004aa4:	bf00      	nop
 8004aa6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004aa8:	4618      	mov	r0, r3
 8004aaa:	3750      	adds	r7, #80	@ 0x50
 8004aac:	46bd      	mov	sp, r7
 8004aae:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004ab2:	bf00      	nop
 8004ab4:	40023800 	.word	0x40023800
 8004ab8:	00f42400 	.word	0x00f42400
 8004abc:	007a1200 	.word	0x007a1200

08004ac0 <HAL_RCC_GetHCLKFreq>:
 8004ac0:	b480      	push	{r7}
 8004ac2:	af00      	add	r7, sp, #0
 8004ac4:	4b03      	ldr	r3, [pc, #12]	@ (8004ad4 <HAL_RCC_GetHCLKFreq+0x14>)
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	4618      	mov	r0, r3
 8004aca:	46bd      	mov	sp, r7
 8004acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad0:	4770      	bx	lr
 8004ad2:	bf00      	nop
 8004ad4:	20000008 	.word	0x20000008

08004ad8 <HAL_RCC_GetPCLK1Freq>:
 8004ad8:	b580      	push	{r7, lr}
 8004ada:	af00      	add	r7, sp, #0
 8004adc:	f7ff fff0 	bl	8004ac0 <HAL_RCC_GetHCLKFreq>
 8004ae0:	4602      	mov	r2, r0
 8004ae2:	4b05      	ldr	r3, [pc, #20]	@ (8004af8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004ae4:	689b      	ldr	r3, [r3, #8]
 8004ae6:	0a9b      	lsrs	r3, r3, #10
 8004ae8:	f003 0307 	and.w	r3, r3, #7
 8004aec:	4903      	ldr	r1, [pc, #12]	@ (8004afc <HAL_RCC_GetPCLK1Freq+0x24>)
 8004aee:	5ccb      	ldrb	r3, [r1, r3]
 8004af0:	fa22 f303 	lsr.w	r3, r2, r3
 8004af4:	4618      	mov	r0, r3
 8004af6:	bd80      	pop	{r7, pc}
 8004af8:	40023800 	.word	0x40023800
 8004afc:	0800721c 	.word	0x0800721c

08004b00 <HAL_RCC_GetPCLK2Freq>:
 8004b00:	b580      	push	{r7, lr}
 8004b02:	af00      	add	r7, sp, #0
 8004b04:	f7ff ffdc 	bl	8004ac0 <HAL_RCC_GetHCLKFreq>
 8004b08:	4602      	mov	r2, r0
 8004b0a:	4b05      	ldr	r3, [pc, #20]	@ (8004b20 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004b0c:	689b      	ldr	r3, [r3, #8]
 8004b0e:	0b5b      	lsrs	r3, r3, #13
 8004b10:	f003 0307 	and.w	r3, r3, #7
 8004b14:	4903      	ldr	r1, [pc, #12]	@ (8004b24 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004b16:	5ccb      	ldrb	r3, [r1, r3]
 8004b18:	fa22 f303 	lsr.w	r3, r2, r3
 8004b1c:	4618      	mov	r0, r3
 8004b1e:	bd80      	pop	{r7, pc}
 8004b20:	40023800 	.word	0x40023800
 8004b24:	0800721c 	.word	0x0800721c

08004b28 <HAL_TIM_Base_Init>:
 8004b28:	b580      	push	{r7, lr}
 8004b2a:	b082      	sub	sp, #8
 8004b2c:	af00      	add	r7, sp, #0
 8004b2e:	6078      	str	r0, [r7, #4]
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d101      	bne.n	8004b3a <HAL_TIM_Base_Init+0x12>
 8004b36:	2301      	movs	r3, #1
 8004b38:	e041      	b.n	8004bbe <HAL_TIM_Base_Init+0x96>
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004b40:	b2db      	uxtb	r3, r3
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d106      	bne.n	8004b54 <HAL_TIM_Base_Init+0x2c>
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	2200      	movs	r2, #0
 8004b4a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b4e:	6878      	ldr	r0, [r7, #4]
 8004b50:	f7fd fe34 	bl	80027bc <HAL_TIM_Base_MspInit>
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	2202      	movs	r2, #2
 8004b58:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681a      	ldr	r2, [r3, #0]
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	3304      	adds	r3, #4
 8004b64:	4619      	mov	r1, r3
 8004b66:	4610      	mov	r0, r2
 8004b68:	f000 fad8 	bl	800511c <TIM_Base_SetConfig>
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2201      	movs	r2, #1
 8004b70:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2201      	movs	r2, #1
 8004b78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	2201      	movs	r2, #1
 8004b80:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	2201      	movs	r2, #1
 8004b88:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	2201      	movs	r2, #1
 8004b90:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	2201      	movs	r2, #1
 8004b98:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	2201      	movs	r2, #1
 8004ba0:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	2201      	movs	r2, #1
 8004ba8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	2201      	movs	r2, #1
 8004bb0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	2201      	movs	r2, #1
 8004bb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bbc:	2300      	movs	r3, #0
 8004bbe:	4618      	mov	r0, r3
 8004bc0:	3708      	adds	r7, #8
 8004bc2:	46bd      	mov	sp, r7
 8004bc4:	bd80      	pop	{r7, pc}

08004bc6 <HAL_TIM_PWM_Init>:
 8004bc6:	b580      	push	{r7, lr}
 8004bc8:	b082      	sub	sp, #8
 8004bca:	af00      	add	r7, sp, #0
 8004bcc:	6078      	str	r0, [r7, #4]
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d101      	bne.n	8004bd8 <HAL_TIM_PWM_Init+0x12>
 8004bd4:	2301      	movs	r3, #1
 8004bd6:	e041      	b.n	8004c5c <HAL_TIM_PWM_Init+0x96>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004bde:	b2db      	uxtb	r3, r3
 8004be0:	2b00      	cmp	r3, #0
 8004be2:	d106      	bne.n	8004bf2 <HAL_TIM_PWM_Init+0x2c>
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	2200      	movs	r2, #0
 8004be8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004bec:	6878      	ldr	r0, [r7, #4]
 8004bee:	f000 f839 	bl	8004c64 <HAL_TIM_PWM_MspInit>
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	2202      	movs	r2, #2
 8004bf6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	681a      	ldr	r2, [r3, #0]
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	3304      	adds	r3, #4
 8004c02:	4619      	mov	r1, r3
 8004c04:	4610      	mov	r0, r2
 8004c06:	f000 fa89 	bl	800511c <TIM_Base_SetConfig>
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	2201      	movs	r2, #1
 8004c0e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	2201      	movs	r2, #1
 8004c16:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	2201      	movs	r2, #1
 8004c1e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	2201      	movs	r2, #1
 8004c26:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	2201      	movs	r2, #1
 8004c2e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	2201      	movs	r2, #1
 8004c36:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	2201      	movs	r2, #1
 8004c3e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	2201      	movs	r2, #1
 8004c46:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	2201      	movs	r2, #1
 8004c4e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	2201      	movs	r2, #1
 8004c56:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	4618      	mov	r0, r3
 8004c5e:	3708      	adds	r7, #8
 8004c60:	46bd      	mov	sp, r7
 8004c62:	bd80      	pop	{r7, pc}

08004c64 <HAL_TIM_PWM_MspInit>:
 8004c64:	b480      	push	{r7}
 8004c66:	b083      	sub	sp, #12
 8004c68:	af00      	add	r7, sp, #0
 8004c6a:	6078      	str	r0, [r7, #4]
 8004c6c:	bf00      	nop
 8004c6e:	370c      	adds	r7, #12
 8004c70:	46bd      	mov	sp, r7
 8004c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c76:	4770      	bx	lr

08004c78 <HAL_TIM_PWM_Start>:
 8004c78:	b580      	push	{r7, lr}
 8004c7a:	b084      	sub	sp, #16
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	6078      	str	r0, [r7, #4]
 8004c80:	6039      	str	r1, [r7, #0]
 8004c82:	683b      	ldr	r3, [r7, #0]
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d109      	bne.n	8004c9c <HAL_TIM_PWM_Start+0x24>
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004c8e:	b2db      	uxtb	r3, r3
 8004c90:	2b01      	cmp	r3, #1
 8004c92:	bf14      	ite	ne
 8004c94:	2301      	movne	r3, #1
 8004c96:	2300      	moveq	r3, #0
 8004c98:	b2db      	uxtb	r3, r3
 8004c9a:	e022      	b.n	8004ce2 <HAL_TIM_PWM_Start+0x6a>
 8004c9c:	683b      	ldr	r3, [r7, #0]
 8004c9e:	2b04      	cmp	r3, #4
 8004ca0:	d109      	bne.n	8004cb6 <HAL_TIM_PWM_Start+0x3e>
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8004ca8:	b2db      	uxtb	r3, r3
 8004caa:	2b01      	cmp	r3, #1
 8004cac:	bf14      	ite	ne
 8004cae:	2301      	movne	r3, #1
 8004cb0:	2300      	moveq	r3, #0
 8004cb2:	b2db      	uxtb	r3, r3
 8004cb4:	e015      	b.n	8004ce2 <HAL_TIM_PWM_Start+0x6a>
 8004cb6:	683b      	ldr	r3, [r7, #0]
 8004cb8:	2b08      	cmp	r3, #8
 8004cba:	d109      	bne.n	8004cd0 <HAL_TIM_PWM_Start+0x58>
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004cc2:	b2db      	uxtb	r3, r3
 8004cc4:	2b01      	cmp	r3, #1
 8004cc6:	bf14      	ite	ne
 8004cc8:	2301      	movne	r3, #1
 8004cca:	2300      	moveq	r3, #0
 8004ccc:	b2db      	uxtb	r3, r3
 8004cce:	e008      	b.n	8004ce2 <HAL_TIM_PWM_Start+0x6a>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004cd6:	b2db      	uxtb	r3, r3
 8004cd8:	2b01      	cmp	r3, #1
 8004cda:	bf14      	ite	ne
 8004cdc:	2301      	movne	r3, #1
 8004cde:	2300      	moveq	r3, #0
 8004ce0:	b2db      	uxtb	r3, r3
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d001      	beq.n	8004cea <HAL_TIM_PWM_Start+0x72>
 8004ce6:	2301      	movs	r3, #1
 8004ce8:	e07c      	b.n	8004de4 <HAL_TIM_PWM_Start+0x16c>
 8004cea:	683b      	ldr	r3, [r7, #0]
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	d104      	bne.n	8004cfa <HAL_TIM_PWM_Start+0x82>
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	2202      	movs	r2, #2
 8004cf4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004cf8:	e013      	b.n	8004d22 <HAL_TIM_PWM_Start+0xaa>
 8004cfa:	683b      	ldr	r3, [r7, #0]
 8004cfc:	2b04      	cmp	r3, #4
 8004cfe:	d104      	bne.n	8004d0a <HAL_TIM_PWM_Start+0x92>
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	2202      	movs	r2, #2
 8004d04:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004d08:	e00b      	b.n	8004d22 <HAL_TIM_PWM_Start+0xaa>
 8004d0a:	683b      	ldr	r3, [r7, #0]
 8004d0c:	2b08      	cmp	r3, #8
 8004d0e:	d104      	bne.n	8004d1a <HAL_TIM_PWM_Start+0xa2>
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	2202      	movs	r2, #2
 8004d14:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004d18:	e003      	b.n	8004d22 <HAL_TIM_PWM_Start+0xaa>
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	2202      	movs	r2, #2
 8004d1e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	2201      	movs	r2, #1
 8004d28:	6839      	ldr	r1, [r7, #0]
 8004d2a:	4618      	mov	r0, r3
 8004d2c:	f000 fce6 	bl	80056fc <TIM_CCxChannelCmd>
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	4a2d      	ldr	r2, [pc, #180]	@ (8004dec <HAL_TIM_PWM_Start+0x174>)
 8004d36:	4293      	cmp	r3, r2
 8004d38:	d004      	beq.n	8004d44 <HAL_TIM_PWM_Start+0xcc>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	4a2c      	ldr	r2, [pc, #176]	@ (8004df0 <HAL_TIM_PWM_Start+0x178>)
 8004d40:	4293      	cmp	r3, r2
 8004d42:	d101      	bne.n	8004d48 <HAL_TIM_PWM_Start+0xd0>
 8004d44:	2301      	movs	r3, #1
 8004d46:	e000      	b.n	8004d4a <HAL_TIM_PWM_Start+0xd2>
 8004d48:	2300      	movs	r3, #0
 8004d4a:	2b00      	cmp	r3, #0
 8004d4c:	d007      	beq.n	8004d5e <HAL_TIM_PWM_Start+0xe6>
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004d5c:	645a      	str	r2, [r3, #68]	@ 0x44
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	681b      	ldr	r3, [r3, #0]
 8004d62:	4a22      	ldr	r2, [pc, #136]	@ (8004dec <HAL_TIM_PWM_Start+0x174>)
 8004d64:	4293      	cmp	r3, r2
 8004d66:	d022      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004d70:	d01d      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	4a1f      	ldr	r2, [pc, #124]	@ (8004df4 <HAL_TIM_PWM_Start+0x17c>)
 8004d78:	4293      	cmp	r3, r2
 8004d7a:	d018      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	681b      	ldr	r3, [r3, #0]
 8004d80:	4a1d      	ldr	r2, [pc, #116]	@ (8004df8 <HAL_TIM_PWM_Start+0x180>)
 8004d82:	4293      	cmp	r3, r2
 8004d84:	d013      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	4a1c      	ldr	r2, [pc, #112]	@ (8004dfc <HAL_TIM_PWM_Start+0x184>)
 8004d8c:	4293      	cmp	r3, r2
 8004d8e:	d00e      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	4a16      	ldr	r2, [pc, #88]	@ (8004df0 <HAL_TIM_PWM_Start+0x178>)
 8004d96:	4293      	cmp	r3, r2
 8004d98:	d009      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	4a18      	ldr	r2, [pc, #96]	@ (8004e00 <HAL_TIM_PWM_Start+0x188>)
 8004da0:	4293      	cmp	r3, r2
 8004da2:	d004      	beq.n	8004dae <HAL_TIM_PWM_Start+0x136>
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	4a16      	ldr	r2, [pc, #88]	@ (8004e04 <HAL_TIM_PWM_Start+0x18c>)
 8004daa:	4293      	cmp	r3, r2
 8004dac:	d111      	bne.n	8004dd2 <HAL_TIM_PWM_Start+0x15a>
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	689b      	ldr	r3, [r3, #8]
 8004db4:	f003 0307 	and.w	r3, r3, #7
 8004db8:	60fb      	str	r3, [r7, #12]
 8004dba:	68fb      	ldr	r3, [r7, #12]
 8004dbc:	2b06      	cmp	r3, #6
 8004dbe:	d010      	beq.n	8004de2 <HAL_TIM_PWM_Start+0x16a>
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	681b      	ldr	r3, [r3, #0]
 8004dc4:	681a      	ldr	r2, [r3, #0]
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	f042 0201 	orr.w	r2, r2, #1
 8004dce:	601a      	str	r2, [r3, #0]
 8004dd0:	e007      	b.n	8004de2 <HAL_TIM_PWM_Start+0x16a>
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	681a      	ldr	r2, [r3, #0]
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	f042 0201 	orr.w	r2, r2, #1
 8004de0:	601a      	str	r2, [r3, #0]
 8004de2:	2300      	movs	r3, #0
 8004de4:	4618      	mov	r0, r3
 8004de6:	3710      	adds	r7, #16
 8004de8:	46bd      	mov	sp, r7
 8004dea:	bd80      	pop	{r7, pc}
 8004dec:	40010000 	.word	0x40010000
 8004df0:	40010400 	.word	0x40010400
 8004df4:	40000400 	.word	0x40000400
 8004df8:	40000800 	.word	0x40000800
 8004dfc:	40000c00 	.word	0x40000c00
 8004e00:	40014000 	.word	0x40014000
 8004e04:	40001800 	.word	0x40001800

08004e08 <HAL_TIM_PWM_ConfigChannel>:
 8004e08:	b580      	push	{r7, lr}
 8004e0a:	b086      	sub	sp, #24
 8004e0c:	af00      	add	r7, sp, #0
 8004e0e:	60f8      	str	r0, [r7, #12]
 8004e10:	60b9      	str	r1, [r7, #8]
 8004e12:	607a      	str	r2, [r7, #4]
 8004e14:	2300      	movs	r3, #0
 8004e16:	75fb      	strb	r3, [r7, #23]
 8004e18:	68fb      	ldr	r3, [r7, #12]
 8004e1a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004e1e:	2b01      	cmp	r3, #1
 8004e20:	d101      	bne.n	8004e26 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8004e22:	2302      	movs	r3, #2
 8004e24:	e0ae      	b.n	8004f84 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	2201      	movs	r2, #1
 8004e2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	2b0c      	cmp	r3, #12
 8004e32:	f200 809f 	bhi.w	8004f74 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8004e36:	a201      	add	r2, pc, #4	@ (adr r2, 8004e3c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8004e38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004e3c:	08004e71 	.word	0x08004e71
 8004e40:	08004f75 	.word	0x08004f75
 8004e44:	08004f75 	.word	0x08004f75
 8004e48:	08004f75 	.word	0x08004f75
 8004e4c:	08004eb1 	.word	0x08004eb1
 8004e50:	08004f75 	.word	0x08004f75
 8004e54:	08004f75 	.word	0x08004f75
 8004e58:	08004f75 	.word	0x08004f75
 8004e5c:	08004ef3 	.word	0x08004ef3
 8004e60:	08004f75 	.word	0x08004f75
 8004e64:	08004f75 	.word	0x08004f75
 8004e68:	08004f75 	.word	0x08004f75
 8004e6c:	08004f33 	.word	0x08004f33
 8004e70:	68fb      	ldr	r3, [r7, #12]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	68b9      	ldr	r1, [r7, #8]
 8004e76:	4618      	mov	r0, r3
 8004e78:	f000 f9f6 	bl	8005268 <TIM_OC1_SetConfig>
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	699a      	ldr	r2, [r3, #24]
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	f042 0208 	orr.w	r2, r2, #8
 8004e8a:	619a      	str	r2, [r3, #24]
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	699a      	ldr	r2, [r3, #24]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	f022 0204 	bic.w	r2, r2, #4
 8004e9a:	619a      	str	r2, [r3, #24]
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	6999      	ldr	r1, [r3, #24]
 8004ea2:	68bb      	ldr	r3, [r7, #8]
 8004ea4:	691a      	ldr	r2, [r3, #16]
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	430a      	orrs	r2, r1
 8004eac:	619a      	str	r2, [r3, #24]
 8004eae:	e064      	b.n	8004f7a <HAL_TIM_PWM_ConfigChannel+0x172>
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	68b9      	ldr	r1, [r7, #8]
 8004eb6:	4618      	mov	r0, r3
 8004eb8:	f000 fa46 	bl	8005348 <TIM_OC2_SetConfig>
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	681b      	ldr	r3, [r3, #0]
 8004ec0:	699a      	ldr	r2, [r3, #24]
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004eca:	619a      	str	r2, [r3, #24]
 8004ecc:	68fb      	ldr	r3, [r7, #12]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	699a      	ldr	r2, [r3, #24]
 8004ed2:	68fb      	ldr	r3, [r7, #12]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004eda:	619a      	str	r2, [r3, #24]
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	6999      	ldr	r1, [r3, #24]
 8004ee2:	68bb      	ldr	r3, [r7, #8]
 8004ee4:	691b      	ldr	r3, [r3, #16]
 8004ee6:	021a      	lsls	r2, r3, #8
 8004ee8:	68fb      	ldr	r3, [r7, #12]
 8004eea:	681b      	ldr	r3, [r3, #0]
 8004eec:	430a      	orrs	r2, r1
 8004eee:	619a      	str	r2, [r3, #24]
 8004ef0:	e043      	b.n	8004f7a <HAL_TIM_PWM_ConfigChannel+0x172>
 8004ef2:	68fb      	ldr	r3, [r7, #12]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	68b9      	ldr	r1, [r7, #8]
 8004ef8:	4618      	mov	r0, r3
 8004efa:	f000 fa9b 	bl	8005434 <TIM_OC3_SetConfig>
 8004efe:	68fb      	ldr	r3, [r7, #12]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	69da      	ldr	r2, [r3, #28]
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f042 0208 	orr.w	r2, r2, #8
 8004f0c:	61da      	str	r2, [r3, #28]
 8004f0e:	68fb      	ldr	r3, [r7, #12]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	69da      	ldr	r2, [r3, #28]
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	f022 0204 	bic.w	r2, r2, #4
 8004f1c:	61da      	str	r2, [r3, #28]
 8004f1e:	68fb      	ldr	r3, [r7, #12]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	69d9      	ldr	r1, [r3, #28]
 8004f24:	68bb      	ldr	r3, [r7, #8]
 8004f26:	691a      	ldr	r2, [r3, #16]
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	430a      	orrs	r2, r1
 8004f2e:	61da      	str	r2, [r3, #28]
 8004f30:	e023      	b.n	8004f7a <HAL_TIM_PWM_ConfigChannel+0x172>
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	68b9      	ldr	r1, [r7, #8]
 8004f38:	4618      	mov	r0, r3
 8004f3a:	f000 faef 	bl	800551c <TIM_OC4_SetConfig>
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	69da      	ldr	r2, [r3, #28]
 8004f44:	68fb      	ldr	r3, [r7, #12]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004f4c:	61da      	str	r2, [r3, #28]
 8004f4e:	68fb      	ldr	r3, [r7, #12]
 8004f50:	681b      	ldr	r3, [r3, #0]
 8004f52:	69da      	ldr	r2, [r3, #28]
 8004f54:	68fb      	ldr	r3, [r7, #12]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004f5c:	61da      	str	r2, [r3, #28]
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	69d9      	ldr	r1, [r3, #28]
 8004f64:	68bb      	ldr	r3, [r7, #8]
 8004f66:	691b      	ldr	r3, [r3, #16]
 8004f68:	021a      	lsls	r2, r3, #8
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	430a      	orrs	r2, r1
 8004f70:	61da      	str	r2, [r3, #28]
 8004f72:	e002      	b.n	8004f7a <HAL_TIM_PWM_ConfigChannel+0x172>
 8004f74:	2301      	movs	r3, #1
 8004f76:	75fb      	strb	r3, [r7, #23]
 8004f78:	bf00      	nop
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	2200      	movs	r2, #0
 8004f7e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f82:	7dfb      	ldrb	r3, [r7, #23]
 8004f84:	4618      	mov	r0, r3
 8004f86:	3718      	adds	r7, #24
 8004f88:	46bd      	mov	sp, r7
 8004f8a:	bd80      	pop	{r7, pc}

08004f8c <HAL_TIM_ConfigClockSource>:
 8004f8c:	b580      	push	{r7, lr}
 8004f8e:	b084      	sub	sp, #16
 8004f90:	af00      	add	r7, sp, #0
 8004f92:	6078      	str	r0, [r7, #4]
 8004f94:	6039      	str	r1, [r7, #0]
 8004f96:	2300      	movs	r3, #0
 8004f98:	73fb      	strb	r3, [r7, #15]
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004fa0:	2b01      	cmp	r3, #1
 8004fa2:	d101      	bne.n	8004fa8 <HAL_TIM_ConfigClockSource+0x1c>
 8004fa4:	2302      	movs	r3, #2
 8004fa6:	e0b4      	b.n	8005112 <HAL_TIM_ConfigClockSource+0x186>
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	2201      	movs	r2, #1
 8004fac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	2202      	movs	r2, #2
 8004fb4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	689b      	ldr	r3, [r3, #8]
 8004fbe:	60bb      	str	r3, [r7, #8]
 8004fc0:	68bb      	ldr	r3, [r7, #8]
 8004fc2:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8004fc6:	60bb      	str	r3, [r7, #8]
 8004fc8:	68bb      	ldr	r3, [r7, #8]
 8004fca:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8004fce:	60bb      	str	r3, [r7, #8]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	681b      	ldr	r3, [r3, #0]
 8004fd4:	68ba      	ldr	r2, [r7, #8]
 8004fd6:	609a      	str	r2, [r3, #8]
 8004fd8:	683b      	ldr	r3, [r7, #0]
 8004fda:	681b      	ldr	r3, [r3, #0]
 8004fdc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004fe0:	d03e      	beq.n	8005060 <HAL_TIM_ConfigClockSource+0xd4>
 8004fe2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004fe6:	f200 8087 	bhi.w	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8004fea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004fee:	f000 8086 	beq.w	80050fe <HAL_TIM_ConfigClockSource+0x172>
 8004ff2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004ff6:	d87f      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8004ff8:	2b70      	cmp	r3, #112	@ 0x70
 8004ffa:	d01a      	beq.n	8005032 <HAL_TIM_ConfigClockSource+0xa6>
 8004ffc:	2b70      	cmp	r3, #112	@ 0x70
 8004ffe:	d87b      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005000:	2b60      	cmp	r3, #96	@ 0x60
 8005002:	d050      	beq.n	80050a6 <HAL_TIM_ConfigClockSource+0x11a>
 8005004:	2b60      	cmp	r3, #96	@ 0x60
 8005006:	d877      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005008:	2b50      	cmp	r3, #80	@ 0x50
 800500a:	d03c      	beq.n	8005086 <HAL_TIM_ConfigClockSource+0xfa>
 800500c:	2b50      	cmp	r3, #80	@ 0x50
 800500e:	d873      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005010:	2b40      	cmp	r3, #64	@ 0x40
 8005012:	d058      	beq.n	80050c6 <HAL_TIM_ConfigClockSource+0x13a>
 8005014:	2b40      	cmp	r3, #64	@ 0x40
 8005016:	d86f      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005018:	2b30      	cmp	r3, #48	@ 0x30
 800501a:	d064      	beq.n	80050e6 <HAL_TIM_ConfigClockSource+0x15a>
 800501c:	2b30      	cmp	r3, #48	@ 0x30
 800501e:	d86b      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005020:	2b20      	cmp	r3, #32
 8005022:	d060      	beq.n	80050e6 <HAL_TIM_ConfigClockSource+0x15a>
 8005024:	2b20      	cmp	r3, #32
 8005026:	d867      	bhi.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005028:	2b00      	cmp	r3, #0
 800502a:	d05c      	beq.n	80050e6 <HAL_TIM_ConfigClockSource+0x15a>
 800502c:	2b10      	cmp	r3, #16
 800502e:	d05a      	beq.n	80050e6 <HAL_TIM_ConfigClockSource+0x15a>
 8005030:	e062      	b.n	80050f8 <HAL_TIM_ConfigClockSource+0x16c>
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	6818      	ldr	r0, [r3, #0]
 8005036:	683b      	ldr	r3, [r7, #0]
 8005038:	6899      	ldr	r1, [r3, #8]
 800503a:	683b      	ldr	r3, [r7, #0]
 800503c:	685a      	ldr	r2, [r3, #4]
 800503e:	683b      	ldr	r3, [r7, #0]
 8005040:	68db      	ldr	r3, [r3, #12]
 8005042:	f000 fb3b 	bl	80056bc <TIM_ETR_SetConfig>
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	689b      	ldr	r3, [r3, #8]
 800504c:	60bb      	str	r3, [r7, #8]
 800504e:	68bb      	ldr	r3, [r7, #8]
 8005050:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005054:	60bb      	str	r3, [r7, #8]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	68ba      	ldr	r2, [r7, #8]
 800505c:	609a      	str	r2, [r3, #8]
 800505e:	e04f      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	6818      	ldr	r0, [r3, #0]
 8005064:	683b      	ldr	r3, [r7, #0]
 8005066:	6899      	ldr	r1, [r3, #8]
 8005068:	683b      	ldr	r3, [r7, #0]
 800506a:	685a      	ldr	r2, [r3, #4]
 800506c:	683b      	ldr	r3, [r7, #0]
 800506e:	68db      	ldr	r3, [r3, #12]
 8005070:	f000 fb24 	bl	80056bc <TIM_ETR_SetConfig>
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	689a      	ldr	r2, [r3, #8]
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005082:	609a      	str	r2, [r3, #8]
 8005084:	e03c      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	6818      	ldr	r0, [r3, #0]
 800508a:	683b      	ldr	r3, [r7, #0]
 800508c:	6859      	ldr	r1, [r3, #4]
 800508e:	683b      	ldr	r3, [r7, #0]
 8005090:	68db      	ldr	r3, [r3, #12]
 8005092:	461a      	mov	r2, r3
 8005094:	f000 fa98 	bl	80055c8 <TIM_TI1_ConfigInputStage>
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	2150      	movs	r1, #80	@ 0x50
 800509e:	4618      	mov	r0, r3
 80050a0:	f000 faf1 	bl	8005686 <TIM_ITRx_SetConfig>
 80050a4:	e02c      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	6818      	ldr	r0, [r3, #0]
 80050aa:	683b      	ldr	r3, [r7, #0]
 80050ac:	6859      	ldr	r1, [r3, #4]
 80050ae:	683b      	ldr	r3, [r7, #0]
 80050b0:	68db      	ldr	r3, [r3, #12]
 80050b2:	461a      	mov	r2, r3
 80050b4:	f000 fab7 	bl	8005626 <TIM_TI2_ConfigInputStage>
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	2160      	movs	r1, #96	@ 0x60
 80050be:	4618      	mov	r0, r3
 80050c0:	f000 fae1 	bl	8005686 <TIM_ITRx_SetConfig>
 80050c4:	e01c      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	6818      	ldr	r0, [r3, #0]
 80050ca:	683b      	ldr	r3, [r7, #0]
 80050cc:	6859      	ldr	r1, [r3, #4]
 80050ce:	683b      	ldr	r3, [r7, #0]
 80050d0:	68db      	ldr	r3, [r3, #12]
 80050d2:	461a      	mov	r2, r3
 80050d4:	f000 fa78 	bl	80055c8 <TIM_TI1_ConfigInputStage>
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	2140      	movs	r1, #64	@ 0x40
 80050de:	4618      	mov	r0, r3
 80050e0:	f000 fad1 	bl	8005686 <TIM_ITRx_SetConfig>
 80050e4:	e00c      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	681a      	ldr	r2, [r3, #0]
 80050ea:	683b      	ldr	r3, [r7, #0]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	4619      	mov	r1, r3
 80050f0:	4610      	mov	r0, r2
 80050f2:	f000 fac8 	bl	8005686 <TIM_ITRx_SetConfig>
 80050f6:	e003      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 80050f8:	2301      	movs	r3, #1
 80050fa:	73fb      	strb	r3, [r7, #15]
 80050fc:	e000      	b.n	8005100 <HAL_TIM_ConfigClockSource+0x174>
 80050fe:	bf00      	nop
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	2201      	movs	r2, #1
 8005104:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	2200      	movs	r2, #0
 800510c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005110:	7bfb      	ldrb	r3, [r7, #15]
 8005112:	4618      	mov	r0, r3
 8005114:	3710      	adds	r7, #16
 8005116:	46bd      	mov	sp, r7
 8005118:	bd80      	pop	{r7, pc}
	...

0800511c <TIM_Base_SetConfig>:
 800511c:	b480      	push	{r7}
 800511e:	b085      	sub	sp, #20
 8005120:	af00      	add	r7, sp, #0
 8005122:	6078      	str	r0, [r7, #4]
 8005124:	6039      	str	r1, [r7, #0]
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	60fb      	str	r3, [r7, #12]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	4a43      	ldr	r2, [pc, #268]	@ (800523c <TIM_Base_SetConfig+0x120>)
 8005130:	4293      	cmp	r3, r2
 8005132:	d013      	beq.n	800515c <TIM_Base_SetConfig+0x40>
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800513a:	d00f      	beq.n	800515c <TIM_Base_SetConfig+0x40>
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	4a40      	ldr	r2, [pc, #256]	@ (8005240 <TIM_Base_SetConfig+0x124>)
 8005140:	4293      	cmp	r3, r2
 8005142:	d00b      	beq.n	800515c <TIM_Base_SetConfig+0x40>
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	4a3f      	ldr	r2, [pc, #252]	@ (8005244 <TIM_Base_SetConfig+0x128>)
 8005148:	4293      	cmp	r3, r2
 800514a:	d007      	beq.n	800515c <TIM_Base_SetConfig+0x40>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	4a3e      	ldr	r2, [pc, #248]	@ (8005248 <TIM_Base_SetConfig+0x12c>)
 8005150:	4293      	cmp	r3, r2
 8005152:	d003      	beq.n	800515c <TIM_Base_SetConfig+0x40>
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	4a3d      	ldr	r2, [pc, #244]	@ (800524c <TIM_Base_SetConfig+0x130>)
 8005158:	4293      	cmp	r3, r2
 800515a:	d108      	bne.n	800516e <TIM_Base_SetConfig+0x52>
 800515c:	68fb      	ldr	r3, [r7, #12]
 800515e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005162:	60fb      	str	r3, [r7, #12]
 8005164:	683b      	ldr	r3, [r7, #0]
 8005166:	685b      	ldr	r3, [r3, #4]
 8005168:	68fa      	ldr	r2, [r7, #12]
 800516a:	4313      	orrs	r3, r2
 800516c:	60fb      	str	r3, [r7, #12]
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	4a32      	ldr	r2, [pc, #200]	@ (800523c <TIM_Base_SetConfig+0x120>)
 8005172:	4293      	cmp	r3, r2
 8005174:	d02b      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800517c:	d027      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	4a2f      	ldr	r2, [pc, #188]	@ (8005240 <TIM_Base_SetConfig+0x124>)
 8005182:	4293      	cmp	r3, r2
 8005184:	d023      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	4a2e      	ldr	r2, [pc, #184]	@ (8005244 <TIM_Base_SetConfig+0x128>)
 800518a:	4293      	cmp	r3, r2
 800518c:	d01f      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	4a2d      	ldr	r2, [pc, #180]	@ (8005248 <TIM_Base_SetConfig+0x12c>)
 8005192:	4293      	cmp	r3, r2
 8005194:	d01b      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	4a2c      	ldr	r2, [pc, #176]	@ (800524c <TIM_Base_SetConfig+0x130>)
 800519a:	4293      	cmp	r3, r2
 800519c:	d017      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	4a2b      	ldr	r2, [pc, #172]	@ (8005250 <TIM_Base_SetConfig+0x134>)
 80051a2:	4293      	cmp	r3, r2
 80051a4:	d013      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	4a2a      	ldr	r2, [pc, #168]	@ (8005254 <TIM_Base_SetConfig+0x138>)
 80051aa:	4293      	cmp	r3, r2
 80051ac:	d00f      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	4a29      	ldr	r2, [pc, #164]	@ (8005258 <TIM_Base_SetConfig+0x13c>)
 80051b2:	4293      	cmp	r3, r2
 80051b4:	d00b      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	4a28      	ldr	r2, [pc, #160]	@ (800525c <TIM_Base_SetConfig+0x140>)
 80051ba:	4293      	cmp	r3, r2
 80051bc:	d007      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	4a27      	ldr	r2, [pc, #156]	@ (8005260 <TIM_Base_SetConfig+0x144>)
 80051c2:	4293      	cmp	r3, r2
 80051c4:	d003      	beq.n	80051ce <TIM_Base_SetConfig+0xb2>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	4a26      	ldr	r2, [pc, #152]	@ (8005264 <TIM_Base_SetConfig+0x148>)
 80051ca:	4293      	cmp	r3, r2
 80051cc:	d108      	bne.n	80051e0 <TIM_Base_SetConfig+0xc4>
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80051d4:	60fb      	str	r3, [r7, #12]
 80051d6:	683b      	ldr	r3, [r7, #0]
 80051d8:	68db      	ldr	r3, [r3, #12]
 80051da:	68fa      	ldr	r2, [r7, #12]
 80051dc:	4313      	orrs	r3, r2
 80051de:	60fb      	str	r3, [r7, #12]
 80051e0:	68fb      	ldr	r3, [r7, #12]
 80051e2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80051e6:	683b      	ldr	r3, [r7, #0]
 80051e8:	695b      	ldr	r3, [r3, #20]
 80051ea:	4313      	orrs	r3, r2
 80051ec:	60fb      	str	r3, [r7, #12]
 80051ee:	683b      	ldr	r3, [r7, #0]
 80051f0:	689a      	ldr	r2, [r3, #8]
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80051f6:	683b      	ldr	r3, [r7, #0]
 80051f8:	681a      	ldr	r2, [r3, #0]
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	629a      	str	r2, [r3, #40]	@ 0x28
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	4a0e      	ldr	r2, [pc, #56]	@ (800523c <TIM_Base_SetConfig+0x120>)
 8005202:	4293      	cmp	r3, r2
 8005204:	d003      	beq.n	800520e <TIM_Base_SetConfig+0xf2>
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	4a10      	ldr	r2, [pc, #64]	@ (800524c <TIM_Base_SetConfig+0x130>)
 800520a:	4293      	cmp	r3, r2
 800520c:	d103      	bne.n	8005216 <TIM_Base_SetConfig+0xfa>
 800520e:	683b      	ldr	r3, [r7, #0]
 8005210:	691a      	ldr	r2, [r3, #16]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	631a      	str	r2, [r3, #48]	@ 0x30
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	f043 0204 	orr.w	r2, r3, #4
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	601a      	str	r2, [r3, #0]
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	2201      	movs	r2, #1
 8005226:	615a      	str	r2, [r3, #20]
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	68fa      	ldr	r2, [r7, #12]
 800522c:	601a      	str	r2, [r3, #0]
 800522e:	bf00      	nop
 8005230:	3714      	adds	r7, #20
 8005232:	46bd      	mov	sp, r7
 8005234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005238:	4770      	bx	lr
 800523a:	bf00      	nop
 800523c:	40010000 	.word	0x40010000
 8005240:	40000400 	.word	0x40000400
 8005244:	40000800 	.word	0x40000800
 8005248:	40000c00 	.word	0x40000c00
 800524c:	40010400 	.word	0x40010400
 8005250:	40014000 	.word	0x40014000
 8005254:	40014400 	.word	0x40014400
 8005258:	40014800 	.word	0x40014800
 800525c:	40001800 	.word	0x40001800
 8005260:	40001c00 	.word	0x40001c00
 8005264:	40002000 	.word	0x40002000

08005268 <TIM_OC1_SetConfig>:
 8005268:	b480      	push	{r7}
 800526a:	b087      	sub	sp, #28
 800526c:	af00      	add	r7, sp, #0
 800526e:	6078      	str	r0, [r7, #4]
 8005270:	6039      	str	r1, [r7, #0]
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	6a1b      	ldr	r3, [r3, #32]
 8005276:	617b      	str	r3, [r7, #20]
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	6a1b      	ldr	r3, [r3, #32]
 800527c:	f023 0201 	bic.w	r2, r3, #1
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	621a      	str	r2, [r3, #32]
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	685b      	ldr	r3, [r3, #4]
 8005288:	613b      	str	r3, [r7, #16]
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	699b      	ldr	r3, [r3, #24]
 800528e:	60fb      	str	r3, [r7, #12]
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005296:	60fb      	str	r3, [r7, #12]
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	f023 0303 	bic.w	r3, r3, #3
 800529e:	60fb      	str	r3, [r7, #12]
 80052a0:	683b      	ldr	r3, [r7, #0]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	68fa      	ldr	r2, [r7, #12]
 80052a6:	4313      	orrs	r3, r2
 80052a8:	60fb      	str	r3, [r7, #12]
 80052aa:	697b      	ldr	r3, [r7, #20]
 80052ac:	f023 0302 	bic.w	r3, r3, #2
 80052b0:	617b      	str	r3, [r7, #20]
 80052b2:	683b      	ldr	r3, [r7, #0]
 80052b4:	689b      	ldr	r3, [r3, #8]
 80052b6:	697a      	ldr	r2, [r7, #20]
 80052b8:	4313      	orrs	r3, r2
 80052ba:	617b      	str	r3, [r7, #20]
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	4a20      	ldr	r2, [pc, #128]	@ (8005340 <TIM_OC1_SetConfig+0xd8>)
 80052c0:	4293      	cmp	r3, r2
 80052c2:	d003      	beq.n	80052cc <TIM_OC1_SetConfig+0x64>
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	4a1f      	ldr	r2, [pc, #124]	@ (8005344 <TIM_OC1_SetConfig+0xdc>)
 80052c8:	4293      	cmp	r3, r2
 80052ca:	d10c      	bne.n	80052e6 <TIM_OC1_SetConfig+0x7e>
 80052cc:	697b      	ldr	r3, [r7, #20]
 80052ce:	f023 0308 	bic.w	r3, r3, #8
 80052d2:	617b      	str	r3, [r7, #20]
 80052d4:	683b      	ldr	r3, [r7, #0]
 80052d6:	68db      	ldr	r3, [r3, #12]
 80052d8:	697a      	ldr	r2, [r7, #20]
 80052da:	4313      	orrs	r3, r2
 80052dc:	617b      	str	r3, [r7, #20]
 80052de:	697b      	ldr	r3, [r7, #20]
 80052e0:	f023 0304 	bic.w	r3, r3, #4
 80052e4:	617b      	str	r3, [r7, #20]
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	4a15      	ldr	r2, [pc, #84]	@ (8005340 <TIM_OC1_SetConfig+0xd8>)
 80052ea:	4293      	cmp	r3, r2
 80052ec:	d003      	beq.n	80052f6 <TIM_OC1_SetConfig+0x8e>
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	4a14      	ldr	r2, [pc, #80]	@ (8005344 <TIM_OC1_SetConfig+0xdc>)
 80052f2:	4293      	cmp	r3, r2
 80052f4:	d111      	bne.n	800531a <TIM_OC1_SetConfig+0xb2>
 80052f6:	693b      	ldr	r3, [r7, #16]
 80052f8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80052fc:	613b      	str	r3, [r7, #16]
 80052fe:	693b      	ldr	r3, [r7, #16]
 8005300:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005304:	613b      	str	r3, [r7, #16]
 8005306:	683b      	ldr	r3, [r7, #0]
 8005308:	695b      	ldr	r3, [r3, #20]
 800530a:	693a      	ldr	r2, [r7, #16]
 800530c:	4313      	orrs	r3, r2
 800530e:	613b      	str	r3, [r7, #16]
 8005310:	683b      	ldr	r3, [r7, #0]
 8005312:	699b      	ldr	r3, [r3, #24]
 8005314:	693a      	ldr	r2, [r7, #16]
 8005316:	4313      	orrs	r3, r2
 8005318:	613b      	str	r3, [r7, #16]
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	693a      	ldr	r2, [r7, #16]
 800531e:	605a      	str	r2, [r3, #4]
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	68fa      	ldr	r2, [r7, #12]
 8005324:	619a      	str	r2, [r3, #24]
 8005326:	683b      	ldr	r3, [r7, #0]
 8005328:	685a      	ldr	r2, [r3, #4]
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	635a      	str	r2, [r3, #52]	@ 0x34
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	697a      	ldr	r2, [r7, #20]
 8005332:	621a      	str	r2, [r3, #32]
 8005334:	bf00      	nop
 8005336:	371c      	adds	r7, #28
 8005338:	46bd      	mov	sp, r7
 800533a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800533e:	4770      	bx	lr
 8005340:	40010000 	.word	0x40010000
 8005344:	40010400 	.word	0x40010400

08005348 <TIM_OC2_SetConfig>:
 8005348:	b480      	push	{r7}
 800534a:	b087      	sub	sp, #28
 800534c:	af00      	add	r7, sp, #0
 800534e:	6078      	str	r0, [r7, #4]
 8005350:	6039      	str	r1, [r7, #0]
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	6a1b      	ldr	r3, [r3, #32]
 8005356:	617b      	str	r3, [r7, #20]
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	6a1b      	ldr	r3, [r3, #32]
 800535c:	f023 0210 	bic.w	r2, r3, #16
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	621a      	str	r2, [r3, #32]
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	685b      	ldr	r3, [r3, #4]
 8005368:	613b      	str	r3, [r7, #16]
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	699b      	ldr	r3, [r3, #24]
 800536e:	60fb      	str	r3, [r7, #12]
 8005370:	68fb      	ldr	r3, [r7, #12]
 8005372:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005376:	60fb      	str	r3, [r7, #12]
 8005378:	68fb      	ldr	r3, [r7, #12]
 800537a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800537e:	60fb      	str	r3, [r7, #12]
 8005380:	683b      	ldr	r3, [r7, #0]
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	021b      	lsls	r3, r3, #8
 8005386:	68fa      	ldr	r2, [r7, #12]
 8005388:	4313      	orrs	r3, r2
 800538a:	60fb      	str	r3, [r7, #12]
 800538c:	697b      	ldr	r3, [r7, #20]
 800538e:	f023 0320 	bic.w	r3, r3, #32
 8005392:	617b      	str	r3, [r7, #20]
 8005394:	683b      	ldr	r3, [r7, #0]
 8005396:	689b      	ldr	r3, [r3, #8]
 8005398:	011b      	lsls	r3, r3, #4
 800539a:	697a      	ldr	r2, [r7, #20]
 800539c:	4313      	orrs	r3, r2
 800539e:	617b      	str	r3, [r7, #20]
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	4a22      	ldr	r2, [pc, #136]	@ (800542c <TIM_OC2_SetConfig+0xe4>)
 80053a4:	4293      	cmp	r3, r2
 80053a6:	d003      	beq.n	80053b0 <TIM_OC2_SetConfig+0x68>
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	4a21      	ldr	r2, [pc, #132]	@ (8005430 <TIM_OC2_SetConfig+0xe8>)
 80053ac:	4293      	cmp	r3, r2
 80053ae:	d10d      	bne.n	80053cc <TIM_OC2_SetConfig+0x84>
 80053b0:	697b      	ldr	r3, [r7, #20]
 80053b2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80053b6:	617b      	str	r3, [r7, #20]
 80053b8:	683b      	ldr	r3, [r7, #0]
 80053ba:	68db      	ldr	r3, [r3, #12]
 80053bc:	011b      	lsls	r3, r3, #4
 80053be:	697a      	ldr	r2, [r7, #20]
 80053c0:	4313      	orrs	r3, r2
 80053c2:	617b      	str	r3, [r7, #20]
 80053c4:	697b      	ldr	r3, [r7, #20]
 80053c6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80053ca:	617b      	str	r3, [r7, #20]
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	4a17      	ldr	r2, [pc, #92]	@ (800542c <TIM_OC2_SetConfig+0xe4>)
 80053d0:	4293      	cmp	r3, r2
 80053d2:	d003      	beq.n	80053dc <TIM_OC2_SetConfig+0x94>
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	4a16      	ldr	r2, [pc, #88]	@ (8005430 <TIM_OC2_SetConfig+0xe8>)
 80053d8:	4293      	cmp	r3, r2
 80053da:	d113      	bne.n	8005404 <TIM_OC2_SetConfig+0xbc>
 80053dc:	693b      	ldr	r3, [r7, #16]
 80053de:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80053e2:	613b      	str	r3, [r7, #16]
 80053e4:	693b      	ldr	r3, [r7, #16]
 80053e6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80053ea:	613b      	str	r3, [r7, #16]
 80053ec:	683b      	ldr	r3, [r7, #0]
 80053ee:	695b      	ldr	r3, [r3, #20]
 80053f0:	009b      	lsls	r3, r3, #2
 80053f2:	693a      	ldr	r2, [r7, #16]
 80053f4:	4313      	orrs	r3, r2
 80053f6:	613b      	str	r3, [r7, #16]
 80053f8:	683b      	ldr	r3, [r7, #0]
 80053fa:	699b      	ldr	r3, [r3, #24]
 80053fc:	009b      	lsls	r3, r3, #2
 80053fe:	693a      	ldr	r2, [r7, #16]
 8005400:	4313      	orrs	r3, r2
 8005402:	613b      	str	r3, [r7, #16]
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	693a      	ldr	r2, [r7, #16]
 8005408:	605a      	str	r2, [r3, #4]
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	68fa      	ldr	r2, [r7, #12]
 800540e:	619a      	str	r2, [r3, #24]
 8005410:	683b      	ldr	r3, [r7, #0]
 8005412:	685a      	ldr	r2, [r3, #4]
 8005414:	687b      	ldr	r3, [r7, #4]
 8005416:	639a      	str	r2, [r3, #56]	@ 0x38
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	697a      	ldr	r2, [r7, #20]
 800541c:	621a      	str	r2, [r3, #32]
 800541e:	bf00      	nop
 8005420:	371c      	adds	r7, #28
 8005422:	46bd      	mov	sp, r7
 8005424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005428:	4770      	bx	lr
 800542a:	bf00      	nop
 800542c:	40010000 	.word	0x40010000
 8005430:	40010400 	.word	0x40010400

08005434 <TIM_OC3_SetConfig>:
 8005434:	b480      	push	{r7}
 8005436:	b087      	sub	sp, #28
 8005438:	af00      	add	r7, sp, #0
 800543a:	6078      	str	r0, [r7, #4]
 800543c:	6039      	str	r1, [r7, #0]
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	6a1b      	ldr	r3, [r3, #32]
 8005442:	617b      	str	r3, [r7, #20]
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	6a1b      	ldr	r3, [r3, #32]
 8005448:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	621a      	str	r2, [r3, #32]
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	685b      	ldr	r3, [r3, #4]
 8005454:	613b      	str	r3, [r7, #16]
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	69db      	ldr	r3, [r3, #28]
 800545a:	60fb      	str	r3, [r7, #12]
 800545c:	68fb      	ldr	r3, [r7, #12]
 800545e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005462:	60fb      	str	r3, [r7, #12]
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	f023 0303 	bic.w	r3, r3, #3
 800546a:	60fb      	str	r3, [r7, #12]
 800546c:	683b      	ldr	r3, [r7, #0]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	68fa      	ldr	r2, [r7, #12]
 8005472:	4313      	orrs	r3, r2
 8005474:	60fb      	str	r3, [r7, #12]
 8005476:	697b      	ldr	r3, [r7, #20]
 8005478:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800547c:	617b      	str	r3, [r7, #20]
 800547e:	683b      	ldr	r3, [r7, #0]
 8005480:	689b      	ldr	r3, [r3, #8]
 8005482:	021b      	lsls	r3, r3, #8
 8005484:	697a      	ldr	r2, [r7, #20]
 8005486:	4313      	orrs	r3, r2
 8005488:	617b      	str	r3, [r7, #20]
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	4a21      	ldr	r2, [pc, #132]	@ (8005514 <TIM_OC3_SetConfig+0xe0>)
 800548e:	4293      	cmp	r3, r2
 8005490:	d003      	beq.n	800549a <TIM_OC3_SetConfig+0x66>
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	4a20      	ldr	r2, [pc, #128]	@ (8005518 <TIM_OC3_SetConfig+0xe4>)
 8005496:	4293      	cmp	r3, r2
 8005498:	d10d      	bne.n	80054b6 <TIM_OC3_SetConfig+0x82>
 800549a:	697b      	ldr	r3, [r7, #20]
 800549c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80054a0:	617b      	str	r3, [r7, #20]
 80054a2:	683b      	ldr	r3, [r7, #0]
 80054a4:	68db      	ldr	r3, [r3, #12]
 80054a6:	021b      	lsls	r3, r3, #8
 80054a8:	697a      	ldr	r2, [r7, #20]
 80054aa:	4313      	orrs	r3, r2
 80054ac:	617b      	str	r3, [r7, #20]
 80054ae:	697b      	ldr	r3, [r7, #20]
 80054b0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80054b4:	617b      	str	r3, [r7, #20]
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	4a16      	ldr	r2, [pc, #88]	@ (8005514 <TIM_OC3_SetConfig+0xe0>)
 80054ba:	4293      	cmp	r3, r2
 80054bc:	d003      	beq.n	80054c6 <TIM_OC3_SetConfig+0x92>
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	4a15      	ldr	r2, [pc, #84]	@ (8005518 <TIM_OC3_SetConfig+0xe4>)
 80054c2:	4293      	cmp	r3, r2
 80054c4:	d113      	bne.n	80054ee <TIM_OC3_SetConfig+0xba>
 80054c6:	693b      	ldr	r3, [r7, #16]
 80054c8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80054cc:	613b      	str	r3, [r7, #16]
 80054ce:	693b      	ldr	r3, [r7, #16]
 80054d0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80054d4:	613b      	str	r3, [r7, #16]
 80054d6:	683b      	ldr	r3, [r7, #0]
 80054d8:	695b      	ldr	r3, [r3, #20]
 80054da:	011b      	lsls	r3, r3, #4
 80054dc:	693a      	ldr	r2, [r7, #16]
 80054de:	4313      	orrs	r3, r2
 80054e0:	613b      	str	r3, [r7, #16]
 80054e2:	683b      	ldr	r3, [r7, #0]
 80054e4:	699b      	ldr	r3, [r3, #24]
 80054e6:	011b      	lsls	r3, r3, #4
 80054e8:	693a      	ldr	r2, [r7, #16]
 80054ea:	4313      	orrs	r3, r2
 80054ec:	613b      	str	r3, [r7, #16]
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	693a      	ldr	r2, [r7, #16]
 80054f2:	605a      	str	r2, [r3, #4]
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	68fa      	ldr	r2, [r7, #12]
 80054f8:	61da      	str	r2, [r3, #28]
 80054fa:	683b      	ldr	r3, [r7, #0]
 80054fc:	685a      	ldr	r2, [r3, #4]
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	697a      	ldr	r2, [r7, #20]
 8005506:	621a      	str	r2, [r3, #32]
 8005508:	bf00      	nop
 800550a:	371c      	adds	r7, #28
 800550c:	46bd      	mov	sp, r7
 800550e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005512:	4770      	bx	lr
 8005514:	40010000 	.word	0x40010000
 8005518:	40010400 	.word	0x40010400

0800551c <TIM_OC4_SetConfig>:
 800551c:	b480      	push	{r7}
 800551e:	b087      	sub	sp, #28
 8005520:	af00      	add	r7, sp, #0
 8005522:	6078      	str	r0, [r7, #4]
 8005524:	6039      	str	r1, [r7, #0]
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	6a1b      	ldr	r3, [r3, #32]
 800552a:	613b      	str	r3, [r7, #16]
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	6a1b      	ldr	r3, [r3, #32]
 8005530:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	621a      	str	r2, [r3, #32]
 8005538:	687b      	ldr	r3, [r7, #4]
 800553a:	685b      	ldr	r3, [r3, #4]
 800553c:	617b      	str	r3, [r7, #20]
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	69db      	ldr	r3, [r3, #28]
 8005542:	60fb      	str	r3, [r7, #12]
 8005544:	68fb      	ldr	r3, [r7, #12]
 8005546:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800554a:	60fb      	str	r3, [r7, #12]
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005552:	60fb      	str	r3, [r7, #12]
 8005554:	683b      	ldr	r3, [r7, #0]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	021b      	lsls	r3, r3, #8
 800555a:	68fa      	ldr	r2, [r7, #12]
 800555c:	4313      	orrs	r3, r2
 800555e:	60fb      	str	r3, [r7, #12]
 8005560:	693b      	ldr	r3, [r7, #16]
 8005562:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005566:	613b      	str	r3, [r7, #16]
 8005568:	683b      	ldr	r3, [r7, #0]
 800556a:	689b      	ldr	r3, [r3, #8]
 800556c:	031b      	lsls	r3, r3, #12
 800556e:	693a      	ldr	r2, [r7, #16]
 8005570:	4313      	orrs	r3, r2
 8005572:	613b      	str	r3, [r7, #16]
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	4a12      	ldr	r2, [pc, #72]	@ (80055c0 <TIM_OC4_SetConfig+0xa4>)
 8005578:	4293      	cmp	r3, r2
 800557a:	d003      	beq.n	8005584 <TIM_OC4_SetConfig+0x68>
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	4a11      	ldr	r2, [pc, #68]	@ (80055c4 <TIM_OC4_SetConfig+0xa8>)
 8005580:	4293      	cmp	r3, r2
 8005582:	d109      	bne.n	8005598 <TIM_OC4_SetConfig+0x7c>
 8005584:	697b      	ldr	r3, [r7, #20]
 8005586:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800558a:	617b      	str	r3, [r7, #20]
 800558c:	683b      	ldr	r3, [r7, #0]
 800558e:	695b      	ldr	r3, [r3, #20]
 8005590:	019b      	lsls	r3, r3, #6
 8005592:	697a      	ldr	r2, [r7, #20]
 8005594:	4313      	orrs	r3, r2
 8005596:	617b      	str	r3, [r7, #20]
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	697a      	ldr	r2, [r7, #20]
 800559c:	605a      	str	r2, [r3, #4]
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	68fa      	ldr	r2, [r7, #12]
 80055a2:	61da      	str	r2, [r3, #28]
 80055a4:	683b      	ldr	r3, [r7, #0]
 80055a6:	685a      	ldr	r2, [r3, #4]
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	641a      	str	r2, [r3, #64]	@ 0x40
 80055ac:	687b      	ldr	r3, [r7, #4]
 80055ae:	693a      	ldr	r2, [r7, #16]
 80055b0:	621a      	str	r2, [r3, #32]
 80055b2:	bf00      	nop
 80055b4:	371c      	adds	r7, #28
 80055b6:	46bd      	mov	sp, r7
 80055b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055bc:	4770      	bx	lr
 80055be:	bf00      	nop
 80055c0:	40010000 	.word	0x40010000
 80055c4:	40010400 	.word	0x40010400

080055c8 <TIM_TI1_ConfigInputStage>:
 80055c8:	b480      	push	{r7}
 80055ca:	b087      	sub	sp, #28
 80055cc:	af00      	add	r7, sp, #0
 80055ce:	60f8      	str	r0, [r7, #12]
 80055d0:	60b9      	str	r1, [r7, #8]
 80055d2:	607a      	str	r2, [r7, #4]
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	6a1b      	ldr	r3, [r3, #32]
 80055d8:	617b      	str	r3, [r7, #20]
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	6a1b      	ldr	r3, [r3, #32]
 80055de:	f023 0201 	bic.w	r2, r3, #1
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	621a      	str	r2, [r3, #32]
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	699b      	ldr	r3, [r3, #24]
 80055ea:	613b      	str	r3, [r7, #16]
 80055ec:	693b      	ldr	r3, [r7, #16]
 80055ee:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80055f2:	613b      	str	r3, [r7, #16]
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	011b      	lsls	r3, r3, #4
 80055f8:	693a      	ldr	r2, [r7, #16]
 80055fa:	4313      	orrs	r3, r2
 80055fc:	613b      	str	r3, [r7, #16]
 80055fe:	697b      	ldr	r3, [r7, #20]
 8005600:	f023 030a 	bic.w	r3, r3, #10
 8005604:	617b      	str	r3, [r7, #20]
 8005606:	697a      	ldr	r2, [r7, #20]
 8005608:	68bb      	ldr	r3, [r7, #8]
 800560a:	4313      	orrs	r3, r2
 800560c:	617b      	str	r3, [r7, #20]
 800560e:	68fb      	ldr	r3, [r7, #12]
 8005610:	693a      	ldr	r2, [r7, #16]
 8005612:	619a      	str	r2, [r3, #24]
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	697a      	ldr	r2, [r7, #20]
 8005618:	621a      	str	r2, [r3, #32]
 800561a:	bf00      	nop
 800561c:	371c      	adds	r7, #28
 800561e:	46bd      	mov	sp, r7
 8005620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005624:	4770      	bx	lr

08005626 <TIM_TI2_ConfigInputStage>:
 8005626:	b480      	push	{r7}
 8005628:	b087      	sub	sp, #28
 800562a:	af00      	add	r7, sp, #0
 800562c:	60f8      	str	r0, [r7, #12]
 800562e:	60b9      	str	r1, [r7, #8]
 8005630:	607a      	str	r2, [r7, #4]
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	6a1b      	ldr	r3, [r3, #32]
 8005636:	617b      	str	r3, [r7, #20]
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	6a1b      	ldr	r3, [r3, #32]
 800563c:	f023 0210 	bic.w	r2, r3, #16
 8005640:	68fb      	ldr	r3, [r7, #12]
 8005642:	621a      	str	r2, [r3, #32]
 8005644:	68fb      	ldr	r3, [r7, #12]
 8005646:	699b      	ldr	r3, [r3, #24]
 8005648:	613b      	str	r3, [r7, #16]
 800564a:	693b      	ldr	r3, [r7, #16]
 800564c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005650:	613b      	str	r3, [r7, #16]
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	031b      	lsls	r3, r3, #12
 8005656:	693a      	ldr	r2, [r7, #16]
 8005658:	4313      	orrs	r3, r2
 800565a:	613b      	str	r3, [r7, #16]
 800565c:	697b      	ldr	r3, [r7, #20]
 800565e:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005662:	617b      	str	r3, [r7, #20]
 8005664:	68bb      	ldr	r3, [r7, #8]
 8005666:	011b      	lsls	r3, r3, #4
 8005668:	697a      	ldr	r2, [r7, #20]
 800566a:	4313      	orrs	r3, r2
 800566c:	617b      	str	r3, [r7, #20]
 800566e:	68fb      	ldr	r3, [r7, #12]
 8005670:	693a      	ldr	r2, [r7, #16]
 8005672:	619a      	str	r2, [r3, #24]
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	697a      	ldr	r2, [r7, #20]
 8005678:	621a      	str	r2, [r3, #32]
 800567a:	bf00      	nop
 800567c:	371c      	adds	r7, #28
 800567e:	46bd      	mov	sp, r7
 8005680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005684:	4770      	bx	lr

08005686 <TIM_ITRx_SetConfig>:
 8005686:	b480      	push	{r7}
 8005688:	b085      	sub	sp, #20
 800568a:	af00      	add	r7, sp, #0
 800568c:	6078      	str	r0, [r7, #4]
 800568e:	6039      	str	r1, [r7, #0]
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	689b      	ldr	r3, [r3, #8]
 8005694:	60fb      	str	r3, [r7, #12]
 8005696:	68fb      	ldr	r3, [r7, #12]
 8005698:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800569c:	60fb      	str	r3, [r7, #12]
 800569e:	683a      	ldr	r2, [r7, #0]
 80056a0:	68fb      	ldr	r3, [r7, #12]
 80056a2:	4313      	orrs	r3, r2
 80056a4:	f043 0307 	orr.w	r3, r3, #7
 80056a8:	60fb      	str	r3, [r7, #12]
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	68fa      	ldr	r2, [r7, #12]
 80056ae:	609a      	str	r2, [r3, #8]
 80056b0:	bf00      	nop
 80056b2:	3714      	adds	r7, #20
 80056b4:	46bd      	mov	sp, r7
 80056b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ba:	4770      	bx	lr

080056bc <TIM_ETR_SetConfig>:
 80056bc:	b480      	push	{r7}
 80056be:	b087      	sub	sp, #28
 80056c0:	af00      	add	r7, sp, #0
 80056c2:	60f8      	str	r0, [r7, #12]
 80056c4:	60b9      	str	r1, [r7, #8]
 80056c6:	607a      	str	r2, [r7, #4]
 80056c8:	603b      	str	r3, [r7, #0]
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	689b      	ldr	r3, [r3, #8]
 80056ce:	617b      	str	r3, [r7, #20]
 80056d0:	697b      	ldr	r3, [r7, #20]
 80056d2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80056d6:	617b      	str	r3, [r7, #20]
 80056d8:	683b      	ldr	r3, [r7, #0]
 80056da:	021a      	lsls	r2, r3, #8
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	431a      	orrs	r2, r3
 80056e0:	68bb      	ldr	r3, [r7, #8]
 80056e2:	4313      	orrs	r3, r2
 80056e4:	697a      	ldr	r2, [r7, #20]
 80056e6:	4313      	orrs	r3, r2
 80056e8:	617b      	str	r3, [r7, #20]
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	697a      	ldr	r2, [r7, #20]
 80056ee:	609a      	str	r2, [r3, #8]
 80056f0:	bf00      	nop
 80056f2:	371c      	adds	r7, #28
 80056f4:	46bd      	mov	sp, r7
 80056f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056fa:	4770      	bx	lr

080056fc <TIM_CCxChannelCmd>:
 80056fc:	b480      	push	{r7}
 80056fe:	b087      	sub	sp, #28
 8005700:	af00      	add	r7, sp, #0
 8005702:	60f8      	str	r0, [r7, #12]
 8005704:	60b9      	str	r1, [r7, #8]
 8005706:	607a      	str	r2, [r7, #4]
 8005708:	68bb      	ldr	r3, [r7, #8]
 800570a:	f003 031f 	and.w	r3, r3, #31
 800570e:	2201      	movs	r2, #1
 8005710:	fa02 f303 	lsl.w	r3, r2, r3
 8005714:	617b      	str	r3, [r7, #20]
 8005716:	68fb      	ldr	r3, [r7, #12]
 8005718:	6a1a      	ldr	r2, [r3, #32]
 800571a:	697b      	ldr	r3, [r7, #20]
 800571c:	43db      	mvns	r3, r3
 800571e:	401a      	ands	r2, r3
 8005720:	68fb      	ldr	r3, [r7, #12]
 8005722:	621a      	str	r2, [r3, #32]
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	6a1a      	ldr	r2, [r3, #32]
 8005728:	68bb      	ldr	r3, [r7, #8]
 800572a:	f003 031f 	and.w	r3, r3, #31
 800572e:	6879      	ldr	r1, [r7, #4]
 8005730:	fa01 f303 	lsl.w	r3, r1, r3
 8005734:	431a      	orrs	r2, r3
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	621a      	str	r2, [r3, #32]
 800573a:	bf00      	nop
 800573c:	371c      	adds	r7, #28
 800573e:	46bd      	mov	sp, r7
 8005740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005744:	4770      	bx	lr
	...

08005748 <HAL_TIMEx_MasterConfigSynchronization>:
 8005748:	b480      	push	{r7}
 800574a:	b085      	sub	sp, #20
 800574c:	af00      	add	r7, sp, #0
 800574e:	6078      	str	r0, [r7, #4]
 8005750:	6039      	str	r1, [r7, #0]
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005758:	2b01      	cmp	r3, #1
 800575a:	d101      	bne.n	8005760 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800575c:	2302      	movs	r3, #2
 800575e:	e05a      	b.n	8005816 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	2201      	movs	r2, #1
 8005764:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	2202      	movs	r2, #2
 800576c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	685b      	ldr	r3, [r3, #4]
 8005776:	60fb      	str	r3, [r7, #12]
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	689b      	ldr	r3, [r3, #8]
 800577e:	60bb      	str	r3, [r7, #8]
 8005780:	68fb      	ldr	r3, [r7, #12]
 8005782:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005786:	60fb      	str	r3, [r7, #12]
 8005788:	683b      	ldr	r3, [r7, #0]
 800578a:	681b      	ldr	r3, [r3, #0]
 800578c:	68fa      	ldr	r2, [r7, #12]
 800578e:	4313      	orrs	r3, r2
 8005790:	60fb      	str	r3, [r7, #12]
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	68fa      	ldr	r2, [r7, #12]
 8005798:	605a      	str	r2, [r3, #4]
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	4a21      	ldr	r2, [pc, #132]	@ (8005824 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80057a0:	4293      	cmp	r3, r2
 80057a2:	d022      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80057ac:	d01d      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	681b      	ldr	r3, [r3, #0]
 80057b2:	4a1d      	ldr	r2, [pc, #116]	@ (8005828 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80057b4:	4293      	cmp	r3, r2
 80057b6:	d018      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	4a1b      	ldr	r2, [pc, #108]	@ (800582c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80057be:	4293      	cmp	r3, r2
 80057c0:	d013      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	4a1a      	ldr	r2, [pc, #104]	@ (8005830 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80057c8:	4293      	cmp	r3, r2
 80057ca:	d00e      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	4a18      	ldr	r2, [pc, #96]	@ (8005834 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80057d2:	4293      	cmp	r3, r2
 80057d4:	d009      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	4a17      	ldr	r2, [pc, #92]	@ (8005838 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80057dc:	4293      	cmp	r3, r2
 80057de:	d004      	beq.n	80057ea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	4a15      	ldr	r2, [pc, #84]	@ (800583c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80057e6:	4293      	cmp	r3, r2
 80057e8:	d10c      	bne.n	8005804 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80057ea:	68bb      	ldr	r3, [r7, #8]
 80057ec:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80057f0:	60bb      	str	r3, [r7, #8]
 80057f2:	683b      	ldr	r3, [r7, #0]
 80057f4:	685b      	ldr	r3, [r3, #4]
 80057f6:	68ba      	ldr	r2, [r7, #8]
 80057f8:	4313      	orrs	r3, r2
 80057fa:	60bb      	str	r3, [r7, #8]
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	681b      	ldr	r3, [r3, #0]
 8005800:	68ba      	ldr	r2, [r7, #8]
 8005802:	609a      	str	r2, [r3, #8]
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	2201      	movs	r2, #1
 8005808:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	2200      	movs	r2, #0
 8005810:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005814:	2300      	movs	r3, #0
 8005816:	4618      	mov	r0, r3
 8005818:	3714      	adds	r7, #20
 800581a:	46bd      	mov	sp, r7
 800581c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005820:	4770      	bx	lr
 8005822:	bf00      	nop
 8005824:	40010000 	.word	0x40010000
 8005828:	40000400 	.word	0x40000400
 800582c:	40000800 	.word	0x40000800
 8005830:	40000c00 	.word	0x40000c00
 8005834:	40010400 	.word	0x40010400
 8005838:	40014000 	.word	0x40014000
 800583c:	40001800 	.word	0x40001800

08005840 <HAL_UART_Init>:
 8005840:	b580      	push	{r7, lr}
 8005842:	b082      	sub	sp, #8
 8005844:	af00      	add	r7, sp, #0
 8005846:	6078      	str	r0, [r7, #4]
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	2b00      	cmp	r3, #0
 800584c:	d101      	bne.n	8005852 <HAL_UART_Init+0x12>
 800584e:	2301      	movs	r3, #1
 8005850:	e042      	b.n	80058d8 <HAL_UART_Init+0x98>
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005858:	b2db      	uxtb	r3, r3
 800585a:	2b00      	cmp	r3, #0
 800585c:	d106      	bne.n	800586c <HAL_UART_Init+0x2c>
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	2200      	movs	r2, #0
 8005862:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005866:	6878      	ldr	r0, [r7, #4]
 8005868:	f7fd f804 	bl	8002874 <HAL_UART_MspInit>
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	2224      	movs	r2, #36	@ 0x24
 8005870:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	68da      	ldr	r2, [r3, #12]
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005882:	60da      	str	r2, [r3, #12]
 8005884:	6878      	ldr	r0, [r7, #4]
 8005886:	f000 fd7f 	bl	8006388 <UART_SetConfig>
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	691a      	ldr	r2, [r3, #16]
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005898:	611a      	str	r2, [r3, #16]
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	695a      	ldr	r2, [r3, #20]
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80058a8:	615a      	str	r2, [r3, #20]
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	68da      	ldr	r2, [r3, #12]
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80058b8:	60da      	str	r2, [r3, #12]
 80058ba:	687b      	ldr	r3, [r7, #4]
 80058bc:	2200      	movs	r2, #0
 80058be:	645a      	str	r2, [r3, #68]	@ 0x44
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	2220      	movs	r2, #32
 80058c4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	2220      	movs	r2, #32
 80058cc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	2200      	movs	r2, #0
 80058d4:	635a      	str	r2, [r3, #52]	@ 0x34
 80058d6:	2300      	movs	r3, #0
 80058d8:	4618      	mov	r0, r3
 80058da:	3708      	adds	r7, #8
 80058dc:	46bd      	mov	sp, r7
 80058de:	bd80      	pop	{r7, pc}

080058e0 <HAL_UART_Transmit>:
 80058e0:	b580      	push	{r7, lr}
 80058e2:	b08a      	sub	sp, #40	@ 0x28
 80058e4:	af02      	add	r7, sp, #8
 80058e6:	60f8      	str	r0, [r7, #12]
 80058e8:	60b9      	str	r1, [r7, #8]
 80058ea:	603b      	str	r3, [r7, #0]
 80058ec:	4613      	mov	r3, r2
 80058ee:	80fb      	strh	r3, [r7, #6]
 80058f0:	2300      	movs	r3, #0
 80058f2:	617b      	str	r3, [r7, #20]
 80058f4:	68fb      	ldr	r3, [r7, #12]
 80058f6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80058fa:	b2db      	uxtb	r3, r3
 80058fc:	2b20      	cmp	r3, #32
 80058fe:	d175      	bne.n	80059ec <HAL_UART_Transmit+0x10c>
 8005900:	68bb      	ldr	r3, [r7, #8]
 8005902:	2b00      	cmp	r3, #0
 8005904:	d002      	beq.n	800590c <HAL_UART_Transmit+0x2c>
 8005906:	88fb      	ldrh	r3, [r7, #6]
 8005908:	2b00      	cmp	r3, #0
 800590a:	d101      	bne.n	8005910 <HAL_UART_Transmit+0x30>
 800590c:	2301      	movs	r3, #1
 800590e:	e06e      	b.n	80059ee <HAL_UART_Transmit+0x10e>
 8005910:	68fb      	ldr	r3, [r7, #12]
 8005912:	2200      	movs	r2, #0
 8005914:	645a      	str	r2, [r3, #68]	@ 0x44
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	2221      	movs	r2, #33	@ 0x21
 800591a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800591e:	f7fd f93f 	bl	8002ba0 <HAL_GetTick>
 8005922:	6178      	str	r0, [r7, #20]
 8005924:	68fb      	ldr	r3, [r7, #12]
 8005926:	88fa      	ldrh	r2, [r7, #6]
 8005928:	849a      	strh	r2, [r3, #36]	@ 0x24
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	88fa      	ldrh	r2, [r7, #6]
 800592e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005930:	68fb      	ldr	r3, [r7, #12]
 8005932:	689b      	ldr	r3, [r3, #8]
 8005934:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005938:	d108      	bne.n	800594c <HAL_UART_Transmit+0x6c>
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	691b      	ldr	r3, [r3, #16]
 800593e:	2b00      	cmp	r3, #0
 8005940:	d104      	bne.n	800594c <HAL_UART_Transmit+0x6c>
 8005942:	2300      	movs	r3, #0
 8005944:	61fb      	str	r3, [r7, #28]
 8005946:	68bb      	ldr	r3, [r7, #8]
 8005948:	61bb      	str	r3, [r7, #24]
 800594a:	e003      	b.n	8005954 <HAL_UART_Transmit+0x74>
 800594c:	68bb      	ldr	r3, [r7, #8]
 800594e:	61fb      	str	r3, [r7, #28]
 8005950:	2300      	movs	r3, #0
 8005952:	61bb      	str	r3, [r7, #24]
 8005954:	e02e      	b.n	80059b4 <HAL_UART_Transmit+0xd4>
 8005956:	683b      	ldr	r3, [r7, #0]
 8005958:	9300      	str	r3, [sp, #0]
 800595a:	697b      	ldr	r3, [r7, #20]
 800595c:	2200      	movs	r2, #0
 800595e:	2180      	movs	r1, #128	@ 0x80
 8005960:	68f8      	ldr	r0, [r7, #12]
 8005962:	f000 fb1d 	bl	8005fa0 <UART_WaitOnFlagUntilTimeout>
 8005966:	4603      	mov	r3, r0
 8005968:	2b00      	cmp	r3, #0
 800596a:	d005      	beq.n	8005978 <HAL_UART_Transmit+0x98>
 800596c:	68fb      	ldr	r3, [r7, #12]
 800596e:	2220      	movs	r2, #32
 8005970:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005974:	2303      	movs	r3, #3
 8005976:	e03a      	b.n	80059ee <HAL_UART_Transmit+0x10e>
 8005978:	69fb      	ldr	r3, [r7, #28]
 800597a:	2b00      	cmp	r3, #0
 800597c:	d10b      	bne.n	8005996 <HAL_UART_Transmit+0xb6>
 800597e:	69bb      	ldr	r3, [r7, #24]
 8005980:	881b      	ldrh	r3, [r3, #0]
 8005982:	461a      	mov	r2, r3
 8005984:	68fb      	ldr	r3, [r7, #12]
 8005986:	681b      	ldr	r3, [r3, #0]
 8005988:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800598c:	605a      	str	r2, [r3, #4]
 800598e:	69bb      	ldr	r3, [r7, #24]
 8005990:	3302      	adds	r3, #2
 8005992:	61bb      	str	r3, [r7, #24]
 8005994:	e007      	b.n	80059a6 <HAL_UART_Transmit+0xc6>
 8005996:	69fb      	ldr	r3, [r7, #28]
 8005998:	781a      	ldrb	r2, [r3, #0]
 800599a:	68fb      	ldr	r3, [r7, #12]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	605a      	str	r2, [r3, #4]
 80059a0:	69fb      	ldr	r3, [r7, #28]
 80059a2:	3301      	adds	r3, #1
 80059a4:	61fb      	str	r3, [r7, #28]
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80059aa:	b29b      	uxth	r3, r3
 80059ac:	3b01      	subs	r3, #1
 80059ae:	b29a      	uxth	r2, r3
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	84da      	strh	r2, [r3, #38]	@ 0x26
 80059b4:	68fb      	ldr	r3, [r7, #12]
 80059b6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80059b8:	b29b      	uxth	r3, r3
 80059ba:	2b00      	cmp	r3, #0
 80059bc:	d1cb      	bne.n	8005956 <HAL_UART_Transmit+0x76>
 80059be:	683b      	ldr	r3, [r7, #0]
 80059c0:	9300      	str	r3, [sp, #0]
 80059c2:	697b      	ldr	r3, [r7, #20]
 80059c4:	2200      	movs	r2, #0
 80059c6:	2140      	movs	r1, #64	@ 0x40
 80059c8:	68f8      	ldr	r0, [r7, #12]
 80059ca:	f000 fae9 	bl	8005fa0 <UART_WaitOnFlagUntilTimeout>
 80059ce:	4603      	mov	r3, r0
 80059d0:	2b00      	cmp	r3, #0
 80059d2:	d005      	beq.n	80059e0 <HAL_UART_Transmit+0x100>
 80059d4:	68fb      	ldr	r3, [r7, #12]
 80059d6:	2220      	movs	r2, #32
 80059d8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80059dc:	2303      	movs	r3, #3
 80059de:	e006      	b.n	80059ee <HAL_UART_Transmit+0x10e>
 80059e0:	68fb      	ldr	r3, [r7, #12]
 80059e2:	2220      	movs	r2, #32
 80059e4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80059e8:	2300      	movs	r3, #0
 80059ea:	e000      	b.n	80059ee <HAL_UART_Transmit+0x10e>
 80059ec:	2302      	movs	r3, #2
 80059ee:	4618      	mov	r0, r3
 80059f0:	3720      	adds	r7, #32
 80059f2:	46bd      	mov	sp, r7
 80059f4:	bd80      	pop	{r7, pc}
	...

080059f8 <HAL_UART_IRQHandler>:
 80059f8:	b580      	push	{r7, lr}
 80059fa:	b0ba      	sub	sp, #232	@ 0xe8
 80059fc:	af00      	add	r7, sp, #0
 80059fe:	6078      	str	r0, [r7, #4]
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	681b      	ldr	r3, [r3, #0]
 8005a06:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	68db      	ldr	r3, [r3, #12]
 8005a10:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	695b      	ldr	r3, [r3, #20]
 8005a1a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005a1e:	2300      	movs	r3, #0
 8005a20:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005a24:	2300      	movs	r3, #0
 8005a26:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005a2a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005a2e:	f003 030f 	and.w	r3, r3, #15
 8005a32:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005a36:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	d10f      	bne.n	8005a5e <HAL_UART_IRQHandler+0x66>
 8005a3e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005a42:	f003 0320 	and.w	r3, r3, #32
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	d009      	beq.n	8005a5e <HAL_UART_IRQHandler+0x66>
 8005a4a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005a4e:	f003 0320 	and.w	r3, r3, #32
 8005a52:	2b00      	cmp	r3, #0
 8005a54:	d003      	beq.n	8005a5e <HAL_UART_IRQHandler+0x66>
 8005a56:	6878      	ldr	r0, [r7, #4]
 8005a58:	f000 fbd7 	bl	800620a <UART_Receive_IT>
 8005a5c:	e273      	b.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005a5e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8005a62:	2b00      	cmp	r3, #0
 8005a64:	f000 80de 	beq.w	8005c24 <HAL_UART_IRQHandler+0x22c>
 8005a68:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005a6c:	f003 0301 	and.w	r3, r3, #1
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d106      	bne.n	8005a82 <HAL_UART_IRQHandler+0x8a>
 8005a74:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005a78:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8005a7c:	2b00      	cmp	r3, #0
 8005a7e:	f000 80d1 	beq.w	8005c24 <HAL_UART_IRQHandler+0x22c>
 8005a82:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005a86:	f003 0301 	and.w	r3, r3, #1
 8005a8a:	2b00      	cmp	r3, #0
 8005a8c:	d00b      	beq.n	8005aa6 <HAL_UART_IRQHandler+0xae>
 8005a8e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005a92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005a96:	2b00      	cmp	r3, #0
 8005a98:	d005      	beq.n	8005aa6 <HAL_UART_IRQHandler+0xae>
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a9e:	f043 0201 	orr.w	r2, r3, #1
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	645a      	str	r2, [r3, #68]	@ 0x44
 8005aa6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005aaa:	f003 0304 	and.w	r3, r3, #4
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d00b      	beq.n	8005aca <HAL_UART_IRQHandler+0xd2>
 8005ab2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005ab6:	f003 0301 	and.w	r3, r3, #1
 8005aba:	2b00      	cmp	r3, #0
 8005abc:	d005      	beq.n	8005aca <HAL_UART_IRQHandler+0xd2>
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005ac2:	f043 0202 	orr.w	r2, r3, #2
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	645a      	str	r2, [r3, #68]	@ 0x44
 8005aca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005ace:	f003 0302 	and.w	r3, r3, #2
 8005ad2:	2b00      	cmp	r3, #0
 8005ad4:	d00b      	beq.n	8005aee <HAL_UART_IRQHandler+0xf6>
 8005ad6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005ada:	f003 0301 	and.w	r3, r3, #1
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d005      	beq.n	8005aee <HAL_UART_IRQHandler+0xf6>
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005ae6:	f043 0204 	orr.w	r2, r3, #4
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	645a      	str	r2, [r3, #68]	@ 0x44
 8005aee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005af2:	f003 0308 	and.w	r3, r3, #8
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	d011      	beq.n	8005b1e <HAL_UART_IRQHandler+0x126>
 8005afa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005afe:	f003 0320 	and.w	r3, r3, #32
 8005b02:	2b00      	cmp	r3, #0
 8005b04:	d105      	bne.n	8005b12 <HAL_UART_IRQHandler+0x11a>
 8005b06:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8005b0a:	f003 0301 	and.w	r3, r3, #1
 8005b0e:	2b00      	cmp	r3, #0
 8005b10:	d005      	beq.n	8005b1e <HAL_UART_IRQHandler+0x126>
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b16:	f043 0208 	orr.w	r2, r3, #8
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b22:	2b00      	cmp	r3, #0
 8005b24:	f000 820a 	beq.w	8005f3c <HAL_UART_IRQHandler+0x544>
 8005b28:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005b2c:	f003 0320 	and.w	r3, r3, #32
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d008      	beq.n	8005b46 <HAL_UART_IRQHandler+0x14e>
 8005b34:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005b38:	f003 0320 	and.w	r3, r3, #32
 8005b3c:	2b00      	cmp	r3, #0
 8005b3e:	d002      	beq.n	8005b46 <HAL_UART_IRQHandler+0x14e>
 8005b40:	6878      	ldr	r0, [r7, #4]
 8005b42:	f000 fb62 	bl	800620a <UART_Receive_IT>
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	695b      	ldr	r3, [r3, #20]
 8005b4c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b50:	2b40      	cmp	r3, #64	@ 0x40
 8005b52:	bf0c      	ite	eq
 8005b54:	2301      	moveq	r3, #1
 8005b56:	2300      	movne	r3, #0
 8005b58:	b2db      	uxtb	r3, r3
 8005b5a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b62:	f003 0308 	and.w	r3, r3, #8
 8005b66:	2b00      	cmp	r3, #0
 8005b68:	d103      	bne.n	8005b72 <HAL_UART_IRQHandler+0x17a>
 8005b6a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8005b6e:	2b00      	cmp	r3, #0
 8005b70:	d04f      	beq.n	8005c12 <HAL_UART_IRQHandler+0x21a>
 8005b72:	6878      	ldr	r0, [r7, #4]
 8005b74:	f000 fa6d 	bl	8006052 <UART_EndRxTransfer>
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	695b      	ldr	r3, [r3, #20]
 8005b7e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b82:	2b40      	cmp	r3, #64	@ 0x40
 8005b84:	d141      	bne.n	8005c0a <HAL_UART_IRQHandler+0x212>
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	3314      	adds	r3, #20
 8005b8c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005b90:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005b94:	e853 3f00 	ldrex	r3, [r3]
 8005b98:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005b9c:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005ba0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005ba4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	3314      	adds	r3, #20
 8005bae:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8005bb2:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8005bb6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005bba:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8005bbe:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8005bc2:	e841 2300 	strex	r3, r2, [r1]
 8005bc6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005bca:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005bce:	2b00      	cmp	r3, #0
 8005bd0:	d1d9      	bne.n	8005b86 <HAL_UART_IRQHandler+0x18e>
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d013      	beq.n	8005c02 <HAL_UART_IRQHandler+0x20a>
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005bde:	4a8a      	ldr	r2, [pc, #552]	@ (8005e08 <HAL_UART_IRQHandler+0x410>)
 8005be0:	651a      	str	r2, [r3, #80]	@ 0x50
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005be6:	4618      	mov	r0, r3
 8005be8:	f7fd fe94 	bl	8003914 <HAL_DMA_Abort_IT>
 8005bec:	4603      	mov	r3, r0
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d016      	beq.n	8005c20 <HAL_UART_IRQHandler+0x228>
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005bf6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005bf8:	687a      	ldr	r2, [r7, #4]
 8005bfa:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8005bfc:	4610      	mov	r0, r2
 8005bfe:	4798      	blx	r3
 8005c00:	e00e      	b.n	8005c20 <HAL_UART_IRQHandler+0x228>
 8005c02:	6878      	ldr	r0, [r7, #4]
 8005c04:	f000 f9b6 	bl	8005f74 <HAL_UART_ErrorCallback>
 8005c08:	e00a      	b.n	8005c20 <HAL_UART_IRQHandler+0x228>
 8005c0a:	6878      	ldr	r0, [r7, #4]
 8005c0c:	f000 f9b2 	bl	8005f74 <HAL_UART_ErrorCallback>
 8005c10:	e006      	b.n	8005c20 <HAL_UART_IRQHandler+0x228>
 8005c12:	6878      	ldr	r0, [r7, #4]
 8005c14:	f000 f9ae 	bl	8005f74 <HAL_UART_ErrorCallback>
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	2200      	movs	r2, #0
 8005c1c:	645a      	str	r2, [r3, #68]	@ 0x44
 8005c1e:	e18d      	b.n	8005f3c <HAL_UART_IRQHandler+0x544>
 8005c20:	bf00      	nop
 8005c22:	e18b      	b.n	8005f3c <HAL_UART_IRQHandler+0x544>
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005c28:	2b01      	cmp	r3, #1
 8005c2a:	f040 8167 	bne.w	8005efc <HAL_UART_IRQHandler+0x504>
 8005c2e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005c32:	f003 0310 	and.w	r3, r3, #16
 8005c36:	2b00      	cmp	r3, #0
 8005c38:	f000 8160 	beq.w	8005efc <HAL_UART_IRQHandler+0x504>
 8005c3c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005c40:	f003 0310 	and.w	r3, r3, #16
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	f000 8159 	beq.w	8005efc <HAL_UART_IRQHandler+0x504>
 8005c4a:	2300      	movs	r3, #0
 8005c4c:	60bb      	str	r3, [r7, #8]
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	60bb      	str	r3, [r7, #8]
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	685b      	ldr	r3, [r3, #4]
 8005c5c:	60bb      	str	r3, [r7, #8]
 8005c5e:	68bb      	ldr	r3, [r7, #8]
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	695b      	ldr	r3, [r3, #20]
 8005c66:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005c6a:	2b40      	cmp	r3, #64	@ 0x40
 8005c6c:	f040 80ce 	bne.w	8005e0c <HAL_UART_IRQHandler+0x414>
 8005c70:	687b      	ldr	r3, [r7, #4]
 8005c72:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	685b      	ldr	r3, [r3, #4]
 8005c78:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8005c7c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	f000 80a9 	beq.w	8005dd8 <HAL_UART_IRQHandler+0x3e0>
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005c8a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005c8e:	429a      	cmp	r2, r3
 8005c90:	f080 80a2 	bcs.w	8005dd8 <HAL_UART_IRQHandler+0x3e0>
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005c9a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005ca0:	69db      	ldr	r3, [r3, #28]
 8005ca2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005ca6:	f000 8088 	beq.w	8005dba <HAL_UART_IRQHandler+0x3c2>
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	330c      	adds	r3, #12
 8005cb0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005cb4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8005cb8:	e853 3f00 	ldrex	r3, [r3]
 8005cbc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005cc0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005cc4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005cc8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	330c      	adds	r3, #12
 8005cd2:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8005cd6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005cda:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005cde:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8005ce2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8005ce6:	e841 2300 	strex	r3, r2, [r1]
 8005cea:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005cee:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005cf2:	2b00      	cmp	r3, #0
 8005cf4:	d1d9      	bne.n	8005caa <HAL_UART_IRQHandler+0x2b2>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	3314      	adds	r3, #20
 8005cfc:	677b      	str	r3, [r7, #116]	@ 0x74
 8005cfe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8005d00:	e853 3f00 	ldrex	r3, [r3]
 8005d04:	673b      	str	r3, [r7, #112]	@ 0x70
 8005d06:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8005d08:	f023 0301 	bic.w	r3, r3, #1
 8005d0c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	3314      	adds	r3, #20
 8005d16:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005d1a:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8005d1e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005d20:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8005d22:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8005d26:	e841 2300 	strex	r3, r2, [r1]
 8005d2a:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005d2c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	d1e1      	bne.n	8005cf6 <HAL_UART_IRQHandler+0x2fe>
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	681b      	ldr	r3, [r3, #0]
 8005d36:	3314      	adds	r3, #20
 8005d38:	663b      	str	r3, [r7, #96]	@ 0x60
 8005d3a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8005d3c:	e853 3f00 	ldrex	r3, [r3]
 8005d40:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8005d42:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8005d44:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005d48:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	3314      	adds	r3, #20
 8005d52:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8005d56:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005d58:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005d5a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8005d5c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8005d5e:	e841 2300 	strex	r3, r2, [r1]
 8005d62:	667b      	str	r3, [r7, #100]	@ 0x64
 8005d64:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d1e3      	bne.n	8005d32 <HAL_UART_IRQHandler+0x33a>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	2220      	movs	r2, #32
 8005d6e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	2200      	movs	r2, #0
 8005d76:	631a      	str	r2, [r3, #48]	@ 0x30
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	330c      	adds	r3, #12
 8005d7e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005d80:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005d82:	e853 3f00 	ldrex	r3, [r3]
 8005d86:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005d88:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005d8a:	f023 0310 	bic.w	r3, r3, #16
 8005d8e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	681b      	ldr	r3, [r3, #0]
 8005d96:	330c      	adds	r3, #12
 8005d98:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8005d9c:	65ba      	str	r2, [r7, #88]	@ 0x58
 8005d9e:	657b      	str	r3, [r7, #84]	@ 0x54
 8005da0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8005da2:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8005da4:	e841 2300 	strex	r3, r2, [r1]
 8005da8:	653b      	str	r3, [r7, #80]	@ 0x50
 8005daa:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d1e3      	bne.n	8005d78 <HAL_UART_IRQHandler+0x380>
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005db4:	4618      	mov	r0, r3
 8005db6:	f7fd fd3d 	bl	8003834 <HAL_DMA_Abort>
 8005dba:	687b      	ldr	r3, [r7, #4]
 8005dbc:	2202      	movs	r2, #2
 8005dbe:	635a      	str	r2, [r3, #52]	@ 0x34
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005dc8:	b29b      	uxth	r3, r3
 8005dca:	1ad3      	subs	r3, r2, r3
 8005dcc:	b29b      	uxth	r3, r3
 8005dce:	4619      	mov	r1, r3
 8005dd0:	6878      	ldr	r0, [r7, #4]
 8005dd2:	f000 f8d9 	bl	8005f88 <HAL_UARTEx_RxEventCallback>
 8005dd6:	e0b3      	b.n	8005f40 <HAL_UART_IRQHandler+0x548>
 8005dd8:	687b      	ldr	r3, [r7, #4]
 8005dda:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005ddc:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8005de0:	429a      	cmp	r2, r3
 8005de2:	f040 80ad 	bne.w	8005f40 <HAL_UART_IRQHandler+0x548>
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005dea:	69db      	ldr	r3, [r3, #28]
 8005dec:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005df0:	f040 80a6 	bne.w	8005f40 <HAL_UART_IRQHandler+0x548>
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	2202      	movs	r2, #2
 8005df8:	635a      	str	r2, [r3, #52]	@ 0x34
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8005dfe:	4619      	mov	r1, r3
 8005e00:	6878      	ldr	r0, [r7, #4]
 8005e02:	f000 f8c1 	bl	8005f88 <HAL_UARTEx_RxEventCallback>
 8005e06:	e09b      	b.n	8005f40 <HAL_UART_IRQHandler+0x548>
 8005e08:	08006119 	.word	0x08006119
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005e14:	b29b      	uxth	r3, r3
 8005e16:	1ad3      	subs	r3, r2, r3
 8005e18:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8005e20:	b29b      	uxth	r3, r3
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	f000 808e 	beq.w	8005f44 <HAL_UART_IRQHandler+0x54c>
 8005e28:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	f000 8089 	beq.w	8005f44 <HAL_UART_IRQHandler+0x54c>
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	330c      	adds	r3, #12
 8005e38:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005e3a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005e3c:	e853 3f00 	ldrex	r3, [r3]
 8005e40:	637b      	str	r3, [r7, #52]	@ 0x34
 8005e42:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005e44:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005e48:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	330c      	adds	r3, #12
 8005e52:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8005e56:	647a      	str	r2, [r7, #68]	@ 0x44
 8005e58:	643b      	str	r3, [r7, #64]	@ 0x40
 8005e5a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8005e5c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8005e5e:	e841 2300 	strex	r3, r2, [r1]
 8005e62:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005e64:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005e66:	2b00      	cmp	r3, #0
 8005e68:	d1e3      	bne.n	8005e32 <HAL_UART_IRQHandler+0x43a>
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	3314      	adds	r3, #20
 8005e70:	627b      	str	r3, [r7, #36]	@ 0x24
 8005e72:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005e74:	e853 3f00 	ldrex	r3, [r3]
 8005e78:	623b      	str	r3, [r7, #32]
 8005e7a:	6a3b      	ldr	r3, [r7, #32]
 8005e7c:	f023 0301 	bic.w	r3, r3, #1
 8005e80:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	3314      	adds	r3, #20
 8005e8a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8005e8e:	633a      	str	r2, [r7, #48]	@ 0x30
 8005e90:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005e92:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8005e94:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8005e96:	e841 2300 	strex	r3, r2, [r1]
 8005e9a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e9c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005e9e:	2b00      	cmp	r3, #0
 8005ea0:	d1e3      	bne.n	8005e6a <HAL_UART_IRQHandler+0x472>
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	2220      	movs	r2, #32
 8005ea6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	2200      	movs	r2, #0
 8005eae:	631a      	str	r2, [r3, #48]	@ 0x30
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	330c      	adds	r3, #12
 8005eb6:	613b      	str	r3, [r7, #16]
 8005eb8:	693b      	ldr	r3, [r7, #16]
 8005eba:	e853 3f00 	ldrex	r3, [r3]
 8005ebe:	60fb      	str	r3, [r7, #12]
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	f023 0310 	bic.w	r3, r3, #16
 8005ec6:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	330c      	adds	r3, #12
 8005ed0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8005ed4:	61fa      	str	r2, [r7, #28]
 8005ed6:	61bb      	str	r3, [r7, #24]
 8005ed8:	69b9      	ldr	r1, [r7, #24]
 8005eda:	69fa      	ldr	r2, [r7, #28]
 8005edc:	e841 2300 	strex	r3, r2, [r1]
 8005ee0:	617b      	str	r3, [r7, #20]
 8005ee2:	697b      	ldr	r3, [r7, #20]
 8005ee4:	2b00      	cmp	r3, #0
 8005ee6:	d1e3      	bne.n	8005eb0 <HAL_UART_IRQHandler+0x4b8>
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	2202      	movs	r2, #2
 8005eec:	635a      	str	r2, [r3, #52]	@ 0x34
 8005eee:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8005ef2:	4619      	mov	r1, r3
 8005ef4:	6878      	ldr	r0, [r7, #4]
 8005ef6:	f000 f847 	bl	8005f88 <HAL_UARTEx_RxEventCallback>
 8005efa:	e023      	b.n	8005f44 <HAL_UART_IRQHandler+0x54c>
 8005efc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005f00:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f04:	2b00      	cmp	r3, #0
 8005f06:	d009      	beq.n	8005f1c <HAL_UART_IRQHandler+0x524>
 8005f08:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005f0c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d003      	beq.n	8005f1c <HAL_UART_IRQHandler+0x524>
 8005f14:	6878      	ldr	r0, [r7, #4]
 8005f16:	f000 f910 	bl	800613a <UART_Transmit_IT>
 8005f1a:	e014      	b.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005f1c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005f20:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d00e      	beq.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005f28:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005f2c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f30:	2b00      	cmp	r3, #0
 8005f32:	d008      	beq.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005f34:	6878      	ldr	r0, [r7, #4]
 8005f36:	f000 f950 	bl	80061da <UART_EndTransmit_IT>
 8005f3a:	e004      	b.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005f3c:	bf00      	nop
 8005f3e:	e002      	b.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005f40:	bf00      	nop
 8005f42:	e000      	b.n	8005f46 <HAL_UART_IRQHandler+0x54e>
 8005f44:	bf00      	nop
 8005f46:	37e8      	adds	r7, #232	@ 0xe8
 8005f48:	46bd      	mov	sp, r7
 8005f4a:	bd80      	pop	{r7, pc}

08005f4c <HAL_UART_TxCpltCallback>:
 8005f4c:	b480      	push	{r7}
 8005f4e:	b083      	sub	sp, #12
 8005f50:	af00      	add	r7, sp, #0
 8005f52:	6078      	str	r0, [r7, #4]
 8005f54:	bf00      	nop
 8005f56:	370c      	adds	r7, #12
 8005f58:	46bd      	mov	sp, r7
 8005f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f5e:	4770      	bx	lr

08005f60 <HAL_UART_RxCpltCallback>:
 8005f60:	b480      	push	{r7}
 8005f62:	b083      	sub	sp, #12
 8005f64:	af00      	add	r7, sp, #0
 8005f66:	6078      	str	r0, [r7, #4]
 8005f68:	bf00      	nop
 8005f6a:	370c      	adds	r7, #12
 8005f6c:	46bd      	mov	sp, r7
 8005f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f72:	4770      	bx	lr

08005f74 <HAL_UART_ErrorCallback>:
 8005f74:	b480      	push	{r7}
 8005f76:	b083      	sub	sp, #12
 8005f78:	af00      	add	r7, sp, #0
 8005f7a:	6078      	str	r0, [r7, #4]
 8005f7c:	bf00      	nop
 8005f7e:	370c      	adds	r7, #12
 8005f80:	46bd      	mov	sp, r7
 8005f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f86:	4770      	bx	lr

08005f88 <HAL_UARTEx_RxEventCallback>:
 8005f88:	b480      	push	{r7}
 8005f8a:	b083      	sub	sp, #12
 8005f8c:	af00      	add	r7, sp, #0
 8005f8e:	6078      	str	r0, [r7, #4]
 8005f90:	460b      	mov	r3, r1
 8005f92:	807b      	strh	r3, [r7, #2]
 8005f94:	bf00      	nop
 8005f96:	370c      	adds	r7, #12
 8005f98:	46bd      	mov	sp, r7
 8005f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f9e:	4770      	bx	lr

08005fa0 <UART_WaitOnFlagUntilTimeout>:
 8005fa0:	b580      	push	{r7, lr}
 8005fa2:	b086      	sub	sp, #24
 8005fa4:	af00      	add	r7, sp, #0
 8005fa6:	60f8      	str	r0, [r7, #12]
 8005fa8:	60b9      	str	r1, [r7, #8]
 8005faa:	603b      	str	r3, [r7, #0]
 8005fac:	4613      	mov	r3, r2
 8005fae:	71fb      	strb	r3, [r7, #7]
 8005fb0:	e03b      	b.n	800602a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005fb2:	6a3b      	ldr	r3, [r7, #32]
 8005fb4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fb8:	d037      	beq.n	800602a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005fba:	f7fc fdf1 	bl	8002ba0 <HAL_GetTick>
 8005fbe:	4602      	mov	r2, r0
 8005fc0:	683b      	ldr	r3, [r7, #0]
 8005fc2:	1ad3      	subs	r3, r2, r3
 8005fc4:	6a3a      	ldr	r2, [r7, #32]
 8005fc6:	429a      	cmp	r2, r3
 8005fc8:	d302      	bcc.n	8005fd0 <UART_WaitOnFlagUntilTimeout+0x30>
 8005fca:	6a3b      	ldr	r3, [r7, #32]
 8005fcc:	2b00      	cmp	r3, #0
 8005fce:	d101      	bne.n	8005fd4 <UART_WaitOnFlagUntilTimeout+0x34>
 8005fd0:	2303      	movs	r3, #3
 8005fd2:	e03a      	b.n	800604a <UART_WaitOnFlagUntilTimeout+0xaa>
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	68db      	ldr	r3, [r3, #12]
 8005fda:	f003 0304 	and.w	r3, r3, #4
 8005fde:	2b00      	cmp	r3, #0
 8005fe0:	d023      	beq.n	800602a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005fe2:	68bb      	ldr	r3, [r7, #8]
 8005fe4:	2b80      	cmp	r3, #128	@ 0x80
 8005fe6:	d020      	beq.n	800602a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005fe8:	68bb      	ldr	r3, [r7, #8]
 8005fea:	2b40      	cmp	r3, #64	@ 0x40
 8005fec:	d01d      	beq.n	800602a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	f003 0308 	and.w	r3, r3, #8
 8005ff8:	2b08      	cmp	r3, #8
 8005ffa:	d116      	bne.n	800602a <UART_WaitOnFlagUntilTimeout+0x8a>
 8005ffc:	2300      	movs	r3, #0
 8005ffe:	617b      	str	r3, [r7, #20]
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	617b      	str	r3, [r7, #20]
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	685b      	ldr	r3, [r3, #4]
 800600e:	617b      	str	r3, [r7, #20]
 8006010:	697b      	ldr	r3, [r7, #20]
 8006012:	68f8      	ldr	r0, [r7, #12]
 8006014:	f000 f81d 	bl	8006052 <UART_EndRxTransfer>
 8006018:	68fb      	ldr	r3, [r7, #12]
 800601a:	2208      	movs	r2, #8
 800601c:	645a      	str	r2, [r3, #68]	@ 0x44
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	2200      	movs	r2, #0
 8006022:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006026:	2301      	movs	r3, #1
 8006028:	e00f      	b.n	800604a <UART_WaitOnFlagUntilTimeout+0xaa>
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	681b      	ldr	r3, [r3, #0]
 800602e:	681a      	ldr	r2, [r3, #0]
 8006030:	68bb      	ldr	r3, [r7, #8]
 8006032:	4013      	ands	r3, r2
 8006034:	68ba      	ldr	r2, [r7, #8]
 8006036:	429a      	cmp	r2, r3
 8006038:	bf0c      	ite	eq
 800603a:	2301      	moveq	r3, #1
 800603c:	2300      	movne	r3, #0
 800603e:	b2db      	uxtb	r3, r3
 8006040:	461a      	mov	r2, r3
 8006042:	79fb      	ldrb	r3, [r7, #7]
 8006044:	429a      	cmp	r2, r3
 8006046:	d0b4      	beq.n	8005fb2 <UART_WaitOnFlagUntilTimeout+0x12>
 8006048:	2300      	movs	r3, #0
 800604a:	4618      	mov	r0, r3
 800604c:	3718      	adds	r7, #24
 800604e:	46bd      	mov	sp, r7
 8006050:	bd80      	pop	{r7, pc}

08006052 <UART_EndRxTransfer>:
 8006052:	b480      	push	{r7}
 8006054:	b095      	sub	sp, #84	@ 0x54
 8006056:	af00      	add	r7, sp, #0
 8006058:	6078      	str	r0, [r7, #4]
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	330c      	adds	r3, #12
 8006060:	637b      	str	r3, [r7, #52]	@ 0x34
 8006062:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006064:	e853 3f00 	ldrex	r3, [r3]
 8006068:	633b      	str	r3, [r7, #48]	@ 0x30
 800606a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800606c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8006070:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	330c      	adds	r3, #12
 8006078:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800607a:	643a      	str	r2, [r7, #64]	@ 0x40
 800607c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800607e:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8006080:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8006082:	e841 2300 	strex	r3, r2, [r1]
 8006086:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006088:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800608a:	2b00      	cmp	r3, #0
 800608c:	d1e5      	bne.n	800605a <UART_EndRxTransfer+0x8>
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	3314      	adds	r3, #20
 8006094:	623b      	str	r3, [r7, #32]
 8006096:	6a3b      	ldr	r3, [r7, #32]
 8006098:	e853 3f00 	ldrex	r3, [r3]
 800609c:	61fb      	str	r3, [r7, #28]
 800609e:	69fb      	ldr	r3, [r7, #28]
 80060a0:	f023 0301 	bic.w	r3, r3, #1
 80060a4:	64bb      	str	r3, [r7, #72]	@ 0x48
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	681b      	ldr	r3, [r3, #0]
 80060aa:	3314      	adds	r3, #20
 80060ac:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80060ae:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80060b0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80060b2:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80060b4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80060b6:	e841 2300 	strex	r3, r2, [r1]
 80060ba:	627b      	str	r3, [r7, #36]	@ 0x24
 80060bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80060be:	2b00      	cmp	r3, #0
 80060c0:	d1e5      	bne.n	800608e <UART_EndRxTransfer+0x3c>
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80060c6:	2b01      	cmp	r3, #1
 80060c8:	d119      	bne.n	80060fe <UART_EndRxTransfer+0xac>
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	330c      	adds	r3, #12
 80060d0:	60fb      	str	r3, [r7, #12]
 80060d2:	68fb      	ldr	r3, [r7, #12]
 80060d4:	e853 3f00 	ldrex	r3, [r3]
 80060d8:	60bb      	str	r3, [r7, #8]
 80060da:	68bb      	ldr	r3, [r7, #8]
 80060dc:	f023 0310 	bic.w	r3, r3, #16
 80060e0:	647b      	str	r3, [r7, #68]	@ 0x44
 80060e2:	687b      	ldr	r3, [r7, #4]
 80060e4:	681b      	ldr	r3, [r3, #0]
 80060e6:	330c      	adds	r3, #12
 80060e8:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80060ea:	61ba      	str	r2, [r7, #24]
 80060ec:	617b      	str	r3, [r7, #20]
 80060ee:	6979      	ldr	r1, [r7, #20]
 80060f0:	69ba      	ldr	r2, [r7, #24]
 80060f2:	e841 2300 	strex	r3, r2, [r1]
 80060f6:	613b      	str	r3, [r7, #16]
 80060f8:	693b      	ldr	r3, [r7, #16]
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d1e5      	bne.n	80060ca <UART_EndRxTransfer+0x78>
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	2220      	movs	r2, #32
 8006102:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006106:	687b      	ldr	r3, [r7, #4]
 8006108:	2200      	movs	r2, #0
 800610a:	631a      	str	r2, [r3, #48]	@ 0x30
 800610c:	bf00      	nop
 800610e:	3754      	adds	r7, #84	@ 0x54
 8006110:	46bd      	mov	sp, r7
 8006112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006116:	4770      	bx	lr

08006118 <UART_DMAAbortOnError>:
 8006118:	b580      	push	{r7, lr}
 800611a:	b084      	sub	sp, #16
 800611c:	af00      	add	r7, sp, #0
 800611e:	6078      	str	r0, [r7, #4]
 8006120:	687b      	ldr	r3, [r7, #4]
 8006122:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006124:	60fb      	str	r3, [r7, #12]
 8006126:	68fb      	ldr	r3, [r7, #12]
 8006128:	2200      	movs	r2, #0
 800612a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800612c:	68f8      	ldr	r0, [r7, #12]
 800612e:	f7ff ff21 	bl	8005f74 <HAL_UART_ErrorCallback>
 8006132:	bf00      	nop
 8006134:	3710      	adds	r7, #16
 8006136:	46bd      	mov	sp, r7
 8006138:	bd80      	pop	{r7, pc}

0800613a <UART_Transmit_IT>:
 800613a:	b480      	push	{r7}
 800613c:	b085      	sub	sp, #20
 800613e:	af00      	add	r7, sp, #0
 8006140:	6078      	str	r0, [r7, #4]
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006148:	b2db      	uxtb	r3, r3
 800614a:	2b21      	cmp	r3, #33	@ 0x21
 800614c:	d13e      	bne.n	80061cc <UART_Transmit_IT+0x92>
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	689b      	ldr	r3, [r3, #8]
 8006152:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006156:	d114      	bne.n	8006182 <UART_Transmit_IT+0x48>
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	691b      	ldr	r3, [r3, #16]
 800615c:	2b00      	cmp	r3, #0
 800615e:	d110      	bne.n	8006182 <UART_Transmit_IT+0x48>
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	6a1b      	ldr	r3, [r3, #32]
 8006164:	60fb      	str	r3, [r7, #12]
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	881b      	ldrh	r3, [r3, #0]
 800616a:	461a      	mov	r2, r3
 800616c:	687b      	ldr	r3, [r7, #4]
 800616e:	681b      	ldr	r3, [r3, #0]
 8006170:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006174:	605a      	str	r2, [r3, #4]
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	6a1b      	ldr	r3, [r3, #32]
 800617a:	1c9a      	adds	r2, r3, #2
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	621a      	str	r2, [r3, #32]
 8006180:	e008      	b.n	8006194 <UART_Transmit_IT+0x5a>
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	6a1b      	ldr	r3, [r3, #32]
 8006186:	1c59      	adds	r1, r3, #1
 8006188:	687a      	ldr	r2, [r7, #4]
 800618a:	6211      	str	r1, [r2, #32]
 800618c:	781a      	ldrb	r2, [r3, #0]
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	605a      	str	r2, [r3, #4]
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006198:	b29b      	uxth	r3, r3
 800619a:	3b01      	subs	r3, #1
 800619c:	b29b      	uxth	r3, r3
 800619e:	687a      	ldr	r2, [r7, #4]
 80061a0:	4619      	mov	r1, r3
 80061a2:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	d10f      	bne.n	80061c8 <UART_Transmit_IT+0x8e>
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	681b      	ldr	r3, [r3, #0]
 80061ac:	68da      	ldr	r2, [r3, #12]
 80061ae:	687b      	ldr	r3, [r7, #4]
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80061b6:	60da      	str	r2, [r3, #12]
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	68da      	ldr	r2, [r3, #12]
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80061c6:	60da      	str	r2, [r3, #12]
 80061c8:	2300      	movs	r3, #0
 80061ca:	e000      	b.n	80061ce <UART_Transmit_IT+0x94>
 80061cc:	2302      	movs	r3, #2
 80061ce:	4618      	mov	r0, r3
 80061d0:	3714      	adds	r7, #20
 80061d2:	46bd      	mov	sp, r7
 80061d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061d8:	4770      	bx	lr

080061da <UART_EndTransmit_IT>:
 80061da:	b580      	push	{r7, lr}
 80061dc:	b082      	sub	sp, #8
 80061de:	af00      	add	r7, sp, #0
 80061e0:	6078      	str	r0, [r7, #4]
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	68da      	ldr	r2, [r3, #12]
 80061e8:	687b      	ldr	r3, [r7, #4]
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80061f0:	60da      	str	r2, [r3, #12]
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	2220      	movs	r2, #32
 80061f6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80061fa:	6878      	ldr	r0, [r7, #4]
 80061fc:	f7ff fea6 	bl	8005f4c <HAL_UART_TxCpltCallback>
 8006200:	2300      	movs	r3, #0
 8006202:	4618      	mov	r0, r3
 8006204:	3708      	adds	r7, #8
 8006206:	46bd      	mov	sp, r7
 8006208:	bd80      	pop	{r7, pc}

0800620a <UART_Receive_IT>:
 800620a:	b580      	push	{r7, lr}
 800620c:	b08c      	sub	sp, #48	@ 0x30
 800620e:	af00      	add	r7, sp, #0
 8006210:	6078      	str	r0, [r7, #4]
 8006212:	2300      	movs	r3, #0
 8006214:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006216:	2300      	movs	r3, #0
 8006218:	62bb      	str	r3, [r7, #40]	@ 0x28
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006220:	b2db      	uxtb	r3, r3
 8006222:	2b22      	cmp	r3, #34	@ 0x22
 8006224:	f040 80aa 	bne.w	800637c <UART_Receive_IT+0x172>
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	689b      	ldr	r3, [r3, #8]
 800622c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006230:	d115      	bne.n	800625e <UART_Receive_IT+0x54>
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	691b      	ldr	r3, [r3, #16]
 8006236:	2b00      	cmp	r3, #0
 8006238:	d111      	bne.n	800625e <UART_Receive_IT+0x54>
 800623a:	687b      	ldr	r3, [r7, #4]
 800623c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800623e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	681b      	ldr	r3, [r3, #0]
 8006244:	685b      	ldr	r3, [r3, #4]
 8006246:	b29b      	uxth	r3, r3
 8006248:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800624c:	b29a      	uxth	r2, r3
 800624e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006250:	801a      	strh	r2, [r3, #0]
 8006252:	687b      	ldr	r3, [r7, #4]
 8006254:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006256:	1c9a      	adds	r2, r3, #2
 8006258:	687b      	ldr	r3, [r7, #4]
 800625a:	629a      	str	r2, [r3, #40]	@ 0x28
 800625c:	e024      	b.n	80062a8 <UART_Receive_IT+0x9e>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006262:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	689b      	ldr	r3, [r3, #8]
 8006268:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800626c:	d007      	beq.n	800627e <UART_Receive_IT+0x74>
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	689b      	ldr	r3, [r3, #8]
 8006272:	2b00      	cmp	r3, #0
 8006274:	d10a      	bne.n	800628c <UART_Receive_IT+0x82>
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	691b      	ldr	r3, [r3, #16]
 800627a:	2b00      	cmp	r3, #0
 800627c:	d106      	bne.n	800628c <UART_Receive_IT+0x82>
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	685b      	ldr	r3, [r3, #4]
 8006284:	b2da      	uxtb	r2, r3
 8006286:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006288:	701a      	strb	r2, [r3, #0]
 800628a:	e008      	b.n	800629e <UART_Receive_IT+0x94>
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	685b      	ldr	r3, [r3, #4]
 8006292:	b2db      	uxtb	r3, r3
 8006294:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006298:	b2da      	uxtb	r2, r3
 800629a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800629c:	701a      	strb	r2, [r3, #0]
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80062a2:	1c5a      	adds	r2, r3, #1
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80062ac:	b29b      	uxth	r3, r3
 80062ae:	3b01      	subs	r3, #1
 80062b0:	b29b      	uxth	r3, r3
 80062b2:	687a      	ldr	r2, [r7, #4]
 80062b4:	4619      	mov	r1, r3
 80062b6:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80062b8:	2b00      	cmp	r3, #0
 80062ba:	d15d      	bne.n	8006378 <UART_Receive_IT+0x16e>
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	68da      	ldr	r2, [r3, #12]
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	681b      	ldr	r3, [r3, #0]
 80062c6:	f022 0220 	bic.w	r2, r2, #32
 80062ca:	60da      	str	r2, [r3, #12]
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	68da      	ldr	r2, [r3, #12]
 80062d2:	687b      	ldr	r3, [r7, #4]
 80062d4:	681b      	ldr	r3, [r3, #0]
 80062d6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80062da:	60da      	str	r2, [r3, #12]
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	695a      	ldr	r2, [r3, #20]
 80062e2:	687b      	ldr	r3, [r7, #4]
 80062e4:	681b      	ldr	r3, [r3, #0]
 80062e6:	f022 0201 	bic.w	r2, r2, #1
 80062ea:	615a      	str	r2, [r3, #20]
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	2220      	movs	r2, #32
 80062f0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80062f4:	687b      	ldr	r3, [r7, #4]
 80062f6:	2200      	movs	r2, #0
 80062f8:	635a      	str	r2, [r3, #52]	@ 0x34
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80062fe:	2b01      	cmp	r3, #1
 8006300:	d135      	bne.n	800636e <UART_Receive_IT+0x164>
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	2200      	movs	r2, #0
 8006306:	631a      	str	r2, [r3, #48]	@ 0x30
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	681b      	ldr	r3, [r3, #0]
 800630c:	330c      	adds	r3, #12
 800630e:	617b      	str	r3, [r7, #20]
 8006310:	697b      	ldr	r3, [r7, #20]
 8006312:	e853 3f00 	ldrex	r3, [r3]
 8006316:	613b      	str	r3, [r7, #16]
 8006318:	693b      	ldr	r3, [r7, #16]
 800631a:	f023 0310 	bic.w	r3, r3, #16
 800631e:	627b      	str	r3, [r7, #36]	@ 0x24
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	330c      	adds	r3, #12
 8006326:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006328:	623a      	str	r2, [r7, #32]
 800632a:	61fb      	str	r3, [r7, #28]
 800632c:	69f9      	ldr	r1, [r7, #28]
 800632e:	6a3a      	ldr	r2, [r7, #32]
 8006330:	e841 2300 	strex	r3, r2, [r1]
 8006334:	61bb      	str	r3, [r7, #24]
 8006336:	69bb      	ldr	r3, [r7, #24]
 8006338:	2b00      	cmp	r3, #0
 800633a:	d1e5      	bne.n	8006308 <UART_Receive_IT+0xfe>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	681b      	ldr	r3, [r3, #0]
 8006342:	f003 0310 	and.w	r3, r3, #16
 8006346:	2b10      	cmp	r3, #16
 8006348:	d10a      	bne.n	8006360 <UART_Receive_IT+0x156>
 800634a:	2300      	movs	r3, #0
 800634c:	60fb      	str	r3, [r7, #12]
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	60fb      	str	r3, [r7, #12]
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	681b      	ldr	r3, [r3, #0]
 800635a:	685b      	ldr	r3, [r3, #4]
 800635c:	60fb      	str	r3, [r7, #12]
 800635e:	68fb      	ldr	r3, [r7, #12]
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8006364:	4619      	mov	r1, r3
 8006366:	6878      	ldr	r0, [r7, #4]
 8006368:	f7ff fe0e 	bl	8005f88 <HAL_UARTEx_RxEventCallback>
 800636c:	e002      	b.n	8006374 <UART_Receive_IT+0x16a>
 800636e:	6878      	ldr	r0, [r7, #4]
 8006370:	f7ff fdf6 	bl	8005f60 <HAL_UART_RxCpltCallback>
 8006374:	2300      	movs	r3, #0
 8006376:	e002      	b.n	800637e <UART_Receive_IT+0x174>
 8006378:	2300      	movs	r3, #0
 800637a:	e000      	b.n	800637e <UART_Receive_IT+0x174>
 800637c:	2302      	movs	r3, #2
 800637e:	4618      	mov	r0, r3
 8006380:	3730      	adds	r7, #48	@ 0x30
 8006382:	46bd      	mov	sp, r7
 8006384:	bd80      	pop	{r7, pc}
	...

08006388 <UART_SetConfig>:
 8006388:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800638c:	b0c0      	sub	sp, #256	@ 0x100
 800638e:	af00      	add	r7, sp, #0
 8006390:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8006394:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	691b      	ldr	r3, [r3, #16]
 800639c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 80063a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063a4:	68d9      	ldr	r1, [r3, #12]
 80063a6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063aa:	681a      	ldr	r2, [r3, #0]
 80063ac:	ea40 0301 	orr.w	r3, r0, r1
 80063b0:	6113      	str	r3, [r2, #16]
 80063b2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063b6:	689a      	ldr	r2, [r3, #8]
 80063b8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063bc:	691b      	ldr	r3, [r3, #16]
 80063be:	431a      	orrs	r2, r3
 80063c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063c4:	695b      	ldr	r3, [r3, #20]
 80063c6:	431a      	orrs	r2, r3
 80063c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063cc:	69db      	ldr	r3, [r3, #28]
 80063ce:	4313      	orrs	r3, r2
 80063d0:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80063d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	68db      	ldr	r3, [r3, #12]
 80063dc:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80063e0:	f021 010c 	bic.w	r1, r1, #12
 80063e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063e8:	681a      	ldr	r2, [r3, #0]
 80063ea:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80063ee:	430b      	orrs	r3, r1
 80063f0:	60d3      	str	r3, [r2, #12]
 80063f2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	695b      	ldr	r3, [r3, #20]
 80063fa:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80063fe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006402:	6999      	ldr	r1, [r3, #24]
 8006404:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006408:	681a      	ldr	r2, [r3, #0]
 800640a:	ea40 0301 	orr.w	r3, r0, r1
 800640e:	6153      	str	r3, [r2, #20]
 8006410:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006414:	681a      	ldr	r2, [r3, #0]
 8006416:	4b8f      	ldr	r3, [pc, #572]	@ (8006654 <UART_SetConfig+0x2cc>)
 8006418:	429a      	cmp	r2, r3
 800641a:	d005      	beq.n	8006428 <UART_SetConfig+0xa0>
 800641c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006420:	681a      	ldr	r2, [r3, #0]
 8006422:	4b8d      	ldr	r3, [pc, #564]	@ (8006658 <UART_SetConfig+0x2d0>)
 8006424:	429a      	cmp	r2, r3
 8006426:	d104      	bne.n	8006432 <UART_SetConfig+0xaa>
 8006428:	f7fe fb6a 	bl	8004b00 <HAL_RCC_GetPCLK2Freq>
 800642c:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8006430:	e003      	b.n	800643a <UART_SetConfig+0xb2>
 8006432:	f7fe fb51 	bl	8004ad8 <HAL_RCC_GetPCLK1Freq>
 8006436:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800643a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800643e:	69db      	ldr	r3, [r3, #28]
 8006440:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006444:	f040 810c 	bne.w	8006660 <UART_SetConfig+0x2d8>
 8006448:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800644c:	2200      	movs	r2, #0
 800644e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8006452:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8006456:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 800645a:	4622      	mov	r2, r4
 800645c:	462b      	mov	r3, r5
 800645e:	1891      	adds	r1, r2, r2
 8006460:	65b9      	str	r1, [r7, #88]	@ 0x58
 8006462:	415b      	adcs	r3, r3
 8006464:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006466:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800646a:	4621      	mov	r1, r4
 800646c:	eb12 0801 	adds.w	r8, r2, r1
 8006470:	4629      	mov	r1, r5
 8006472:	eb43 0901 	adc.w	r9, r3, r1
 8006476:	f04f 0200 	mov.w	r2, #0
 800647a:	f04f 0300 	mov.w	r3, #0
 800647e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006482:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006486:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800648a:	4690      	mov	r8, r2
 800648c:	4699      	mov	r9, r3
 800648e:	4623      	mov	r3, r4
 8006490:	eb18 0303 	adds.w	r3, r8, r3
 8006494:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006498:	462b      	mov	r3, r5
 800649a:	eb49 0303 	adc.w	r3, r9, r3
 800649e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80064a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80064a6:	685b      	ldr	r3, [r3, #4]
 80064a8:	2200      	movs	r2, #0
 80064aa:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80064ae:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80064b2:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80064b6:	460b      	mov	r3, r1
 80064b8:	18db      	adds	r3, r3, r3
 80064ba:	653b      	str	r3, [r7, #80]	@ 0x50
 80064bc:	4613      	mov	r3, r2
 80064be:	eb42 0303 	adc.w	r3, r2, r3
 80064c2:	657b      	str	r3, [r7, #84]	@ 0x54
 80064c4:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80064c8:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80064cc:	f7fa f9de 	bl	800088c <__aeabi_uldivmod>
 80064d0:	4602      	mov	r2, r0
 80064d2:	460b      	mov	r3, r1
 80064d4:	4b61      	ldr	r3, [pc, #388]	@ (800665c <UART_SetConfig+0x2d4>)
 80064d6:	fba3 2302 	umull	r2, r3, r3, r2
 80064da:	095b      	lsrs	r3, r3, #5
 80064dc:	011c      	lsls	r4, r3, #4
 80064de:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80064e2:	2200      	movs	r2, #0
 80064e4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80064e8:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80064ec:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80064f0:	4642      	mov	r2, r8
 80064f2:	464b      	mov	r3, r9
 80064f4:	1891      	adds	r1, r2, r2
 80064f6:	64b9      	str	r1, [r7, #72]	@ 0x48
 80064f8:	415b      	adcs	r3, r3
 80064fa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80064fc:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006500:	4641      	mov	r1, r8
 8006502:	eb12 0a01 	adds.w	sl, r2, r1
 8006506:	4649      	mov	r1, r9
 8006508:	eb43 0b01 	adc.w	fp, r3, r1
 800650c:	f04f 0200 	mov.w	r2, #0
 8006510:	f04f 0300 	mov.w	r3, #0
 8006514:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006518:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800651c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006520:	4692      	mov	sl, r2
 8006522:	469b      	mov	fp, r3
 8006524:	4643      	mov	r3, r8
 8006526:	eb1a 0303 	adds.w	r3, sl, r3
 800652a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800652e:	464b      	mov	r3, r9
 8006530:	eb4b 0303 	adc.w	r3, fp, r3
 8006534:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006538:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800653c:	685b      	ldr	r3, [r3, #4]
 800653e:	2200      	movs	r2, #0
 8006540:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006544:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8006548:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800654c:	460b      	mov	r3, r1
 800654e:	18db      	adds	r3, r3, r3
 8006550:	643b      	str	r3, [r7, #64]	@ 0x40
 8006552:	4613      	mov	r3, r2
 8006554:	eb42 0303 	adc.w	r3, r2, r3
 8006558:	647b      	str	r3, [r7, #68]	@ 0x44
 800655a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800655e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8006562:	f7fa f993 	bl	800088c <__aeabi_uldivmod>
 8006566:	4602      	mov	r2, r0
 8006568:	460b      	mov	r3, r1
 800656a:	4611      	mov	r1, r2
 800656c:	4b3b      	ldr	r3, [pc, #236]	@ (800665c <UART_SetConfig+0x2d4>)
 800656e:	fba3 2301 	umull	r2, r3, r3, r1
 8006572:	095b      	lsrs	r3, r3, #5
 8006574:	2264      	movs	r2, #100	@ 0x64
 8006576:	fb02 f303 	mul.w	r3, r2, r3
 800657a:	1acb      	subs	r3, r1, r3
 800657c:	00db      	lsls	r3, r3, #3
 800657e:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8006582:	4b36      	ldr	r3, [pc, #216]	@ (800665c <UART_SetConfig+0x2d4>)
 8006584:	fba3 2302 	umull	r2, r3, r3, r2
 8006588:	095b      	lsrs	r3, r3, #5
 800658a:	005b      	lsls	r3, r3, #1
 800658c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8006590:	441c      	add	r4, r3
 8006592:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006596:	2200      	movs	r2, #0
 8006598:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800659c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80065a0:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80065a4:	4642      	mov	r2, r8
 80065a6:	464b      	mov	r3, r9
 80065a8:	1891      	adds	r1, r2, r2
 80065aa:	63b9      	str	r1, [r7, #56]	@ 0x38
 80065ac:	415b      	adcs	r3, r3
 80065ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80065b0:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80065b4:	4641      	mov	r1, r8
 80065b6:	1851      	adds	r1, r2, r1
 80065b8:	6339      	str	r1, [r7, #48]	@ 0x30
 80065ba:	4649      	mov	r1, r9
 80065bc:	414b      	adcs	r3, r1
 80065be:	637b      	str	r3, [r7, #52]	@ 0x34
 80065c0:	f04f 0200 	mov.w	r2, #0
 80065c4:	f04f 0300 	mov.w	r3, #0
 80065c8:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80065cc:	4659      	mov	r1, fp
 80065ce:	00cb      	lsls	r3, r1, #3
 80065d0:	4651      	mov	r1, sl
 80065d2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80065d6:	4651      	mov	r1, sl
 80065d8:	00ca      	lsls	r2, r1, #3
 80065da:	4610      	mov	r0, r2
 80065dc:	4619      	mov	r1, r3
 80065de:	4603      	mov	r3, r0
 80065e0:	4642      	mov	r2, r8
 80065e2:	189b      	adds	r3, r3, r2
 80065e4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80065e8:	464b      	mov	r3, r9
 80065ea:	460a      	mov	r2, r1
 80065ec:	eb42 0303 	adc.w	r3, r2, r3
 80065f0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80065f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80065f8:	685b      	ldr	r3, [r3, #4]
 80065fa:	2200      	movs	r2, #0
 80065fc:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8006600:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006604:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006608:	460b      	mov	r3, r1
 800660a:	18db      	adds	r3, r3, r3
 800660c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800660e:	4613      	mov	r3, r2
 8006610:	eb42 0303 	adc.w	r3, r2, r3
 8006614:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006616:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800661a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800661e:	f7fa f935 	bl	800088c <__aeabi_uldivmod>
 8006622:	4602      	mov	r2, r0
 8006624:	460b      	mov	r3, r1
 8006626:	4b0d      	ldr	r3, [pc, #52]	@ (800665c <UART_SetConfig+0x2d4>)
 8006628:	fba3 1302 	umull	r1, r3, r3, r2
 800662c:	095b      	lsrs	r3, r3, #5
 800662e:	2164      	movs	r1, #100	@ 0x64
 8006630:	fb01 f303 	mul.w	r3, r1, r3
 8006634:	1ad3      	subs	r3, r2, r3
 8006636:	00db      	lsls	r3, r3, #3
 8006638:	3332      	adds	r3, #50	@ 0x32
 800663a:	4a08      	ldr	r2, [pc, #32]	@ (800665c <UART_SetConfig+0x2d4>)
 800663c:	fba2 2303 	umull	r2, r3, r2, r3
 8006640:	095b      	lsrs	r3, r3, #5
 8006642:	f003 0207 	and.w	r2, r3, #7
 8006646:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800664a:	681b      	ldr	r3, [r3, #0]
 800664c:	4422      	add	r2, r4
 800664e:	609a      	str	r2, [r3, #8]
 8006650:	e106      	b.n	8006860 <UART_SetConfig+0x4d8>
 8006652:	bf00      	nop
 8006654:	40011000 	.word	0x40011000
 8006658:	40011400 	.word	0x40011400
 800665c:	51eb851f 	.word	0x51eb851f
 8006660:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006664:	2200      	movs	r2, #0
 8006666:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800666a:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800666e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8006672:	4642      	mov	r2, r8
 8006674:	464b      	mov	r3, r9
 8006676:	1891      	adds	r1, r2, r2
 8006678:	6239      	str	r1, [r7, #32]
 800667a:	415b      	adcs	r3, r3
 800667c:	627b      	str	r3, [r7, #36]	@ 0x24
 800667e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006682:	4641      	mov	r1, r8
 8006684:	1854      	adds	r4, r2, r1
 8006686:	4649      	mov	r1, r9
 8006688:	eb43 0501 	adc.w	r5, r3, r1
 800668c:	f04f 0200 	mov.w	r2, #0
 8006690:	f04f 0300 	mov.w	r3, #0
 8006694:	00eb      	lsls	r3, r5, #3
 8006696:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800669a:	00e2      	lsls	r2, r4, #3
 800669c:	4614      	mov	r4, r2
 800669e:	461d      	mov	r5, r3
 80066a0:	4643      	mov	r3, r8
 80066a2:	18e3      	adds	r3, r4, r3
 80066a4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80066a8:	464b      	mov	r3, r9
 80066aa:	eb45 0303 	adc.w	r3, r5, r3
 80066ae:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80066b2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80066b6:	685b      	ldr	r3, [r3, #4]
 80066b8:	2200      	movs	r2, #0
 80066ba:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80066be:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80066c2:	f04f 0200 	mov.w	r2, #0
 80066c6:	f04f 0300 	mov.w	r3, #0
 80066ca:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80066ce:	4629      	mov	r1, r5
 80066d0:	008b      	lsls	r3, r1, #2
 80066d2:	4621      	mov	r1, r4
 80066d4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80066d8:	4621      	mov	r1, r4
 80066da:	008a      	lsls	r2, r1, #2
 80066dc:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80066e0:	f7fa f8d4 	bl	800088c <__aeabi_uldivmod>
 80066e4:	4602      	mov	r2, r0
 80066e6:	460b      	mov	r3, r1
 80066e8:	4b60      	ldr	r3, [pc, #384]	@ (800686c <UART_SetConfig+0x4e4>)
 80066ea:	fba3 2302 	umull	r2, r3, r3, r2
 80066ee:	095b      	lsrs	r3, r3, #5
 80066f0:	011c      	lsls	r4, r3, #4
 80066f2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80066f6:	2200      	movs	r2, #0
 80066f8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80066fc:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8006700:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006704:	4642      	mov	r2, r8
 8006706:	464b      	mov	r3, r9
 8006708:	1891      	adds	r1, r2, r2
 800670a:	61b9      	str	r1, [r7, #24]
 800670c:	415b      	adcs	r3, r3
 800670e:	61fb      	str	r3, [r7, #28]
 8006710:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006714:	4641      	mov	r1, r8
 8006716:	1851      	adds	r1, r2, r1
 8006718:	6139      	str	r1, [r7, #16]
 800671a:	4649      	mov	r1, r9
 800671c:	414b      	adcs	r3, r1
 800671e:	617b      	str	r3, [r7, #20]
 8006720:	f04f 0200 	mov.w	r2, #0
 8006724:	f04f 0300 	mov.w	r3, #0
 8006728:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800672c:	4659      	mov	r1, fp
 800672e:	00cb      	lsls	r3, r1, #3
 8006730:	4651      	mov	r1, sl
 8006732:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006736:	4651      	mov	r1, sl
 8006738:	00ca      	lsls	r2, r1, #3
 800673a:	4610      	mov	r0, r2
 800673c:	4619      	mov	r1, r3
 800673e:	4603      	mov	r3, r0
 8006740:	4642      	mov	r2, r8
 8006742:	189b      	adds	r3, r3, r2
 8006744:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8006748:	464b      	mov	r3, r9
 800674a:	460a      	mov	r2, r1
 800674c:	eb42 0303 	adc.w	r3, r2, r3
 8006750:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006754:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006758:	685b      	ldr	r3, [r3, #4]
 800675a:	2200      	movs	r2, #0
 800675c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800675e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8006760:	f04f 0200 	mov.w	r2, #0
 8006764:	f04f 0300 	mov.w	r3, #0
 8006768:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 800676c:	4649      	mov	r1, r9
 800676e:	008b      	lsls	r3, r1, #2
 8006770:	4641      	mov	r1, r8
 8006772:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006776:	4641      	mov	r1, r8
 8006778:	008a      	lsls	r2, r1, #2
 800677a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800677e:	f7fa f885 	bl	800088c <__aeabi_uldivmod>
 8006782:	4602      	mov	r2, r0
 8006784:	460b      	mov	r3, r1
 8006786:	4611      	mov	r1, r2
 8006788:	4b38      	ldr	r3, [pc, #224]	@ (800686c <UART_SetConfig+0x4e4>)
 800678a:	fba3 2301 	umull	r2, r3, r3, r1
 800678e:	095b      	lsrs	r3, r3, #5
 8006790:	2264      	movs	r2, #100	@ 0x64
 8006792:	fb02 f303 	mul.w	r3, r2, r3
 8006796:	1acb      	subs	r3, r1, r3
 8006798:	011b      	lsls	r3, r3, #4
 800679a:	3332      	adds	r3, #50	@ 0x32
 800679c:	4a33      	ldr	r2, [pc, #204]	@ (800686c <UART_SetConfig+0x4e4>)
 800679e:	fba2 2303 	umull	r2, r3, r2, r3
 80067a2:	095b      	lsrs	r3, r3, #5
 80067a4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80067a8:	441c      	add	r4, r3
 80067aa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80067ae:	2200      	movs	r2, #0
 80067b0:	673b      	str	r3, [r7, #112]	@ 0x70
 80067b2:	677a      	str	r2, [r7, #116]	@ 0x74
 80067b4:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80067b8:	4642      	mov	r2, r8
 80067ba:	464b      	mov	r3, r9
 80067bc:	1891      	adds	r1, r2, r2
 80067be:	60b9      	str	r1, [r7, #8]
 80067c0:	415b      	adcs	r3, r3
 80067c2:	60fb      	str	r3, [r7, #12]
 80067c4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80067c8:	4641      	mov	r1, r8
 80067ca:	1851      	adds	r1, r2, r1
 80067cc:	6039      	str	r1, [r7, #0]
 80067ce:	4649      	mov	r1, r9
 80067d0:	414b      	adcs	r3, r1
 80067d2:	607b      	str	r3, [r7, #4]
 80067d4:	f04f 0200 	mov.w	r2, #0
 80067d8:	f04f 0300 	mov.w	r3, #0
 80067dc:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80067e0:	4659      	mov	r1, fp
 80067e2:	00cb      	lsls	r3, r1, #3
 80067e4:	4651      	mov	r1, sl
 80067e6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80067ea:	4651      	mov	r1, sl
 80067ec:	00ca      	lsls	r2, r1, #3
 80067ee:	4610      	mov	r0, r2
 80067f0:	4619      	mov	r1, r3
 80067f2:	4603      	mov	r3, r0
 80067f4:	4642      	mov	r2, r8
 80067f6:	189b      	adds	r3, r3, r2
 80067f8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80067fa:	464b      	mov	r3, r9
 80067fc:	460a      	mov	r2, r1
 80067fe:	eb42 0303 	adc.w	r3, r2, r3
 8006802:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006804:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006808:	685b      	ldr	r3, [r3, #4]
 800680a:	2200      	movs	r2, #0
 800680c:	663b      	str	r3, [r7, #96]	@ 0x60
 800680e:	667a      	str	r2, [r7, #100]	@ 0x64
 8006810:	f04f 0200 	mov.w	r2, #0
 8006814:	f04f 0300 	mov.w	r3, #0
 8006818:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 800681c:	4649      	mov	r1, r9
 800681e:	008b      	lsls	r3, r1, #2
 8006820:	4641      	mov	r1, r8
 8006822:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006826:	4641      	mov	r1, r8
 8006828:	008a      	lsls	r2, r1, #2
 800682a:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800682e:	f7fa f82d 	bl	800088c <__aeabi_uldivmod>
 8006832:	4602      	mov	r2, r0
 8006834:	460b      	mov	r3, r1
 8006836:	4b0d      	ldr	r3, [pc, #52]	@ (800686c <UART_SetConfig+0x4e4>)
 8006838:	fba3 1302 	umull	r1, r3, r3, r2
 800683c:	095b      	lsrs	r3, r3, #5
 800683e:	2164      	movs	r1, #100	@ 0x64
 8006840:	fb01 f303 	mul.w	r3, r1, r3
 8006844:	1ad3      	subs	r3, r2, r3
 8006846:	011b      	lsls	r3, r3, #4
 8006848:	3332      	adds	r3, #50	@ 0x32
 800684a:	4a08      	ldr	r2, [pc, #32]	@ (800686c <UART_SetConfig+0x4e4>)
 800684c:	fba2 2303 	umull	r2, r3, r2, r3
 8006850:	095b      	lsrs	r3, r3, #5
 8006852:	f003 020f 	and.w	r2, r3, #15
 8006856:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800685a:	681b      	ldr	r3, [r3, #0]
 800685c:	4422      	add	r2, r4
 800685e:	609a      	str	r2, [r3, #8]
 8006860:	bf00      	nop
 8006862:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8006866:	46bd      	mov	sp, r7
 8006868:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800686c:	51eb851f 	.word	0x51eb851f

08006870 <siprintf>:
 8006870:	b40e      	push	{r1, r2, r3}
 8006872:	b510      	push	{r4, lr}
 8006874:	b09d      	sub	sp, #116	@ 0x74
 8006876:	ab1f      	add	r3, sp, #124	@ 0x7c
 8006878:	9002      	str	r0, [sp, #8]
 800687a:	9006      	str	r0, [sp, #24]
 800687c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8006880:	480a      	ldr	r0, [pc, #40]	@ (80068ac <siprintf+0x3c>)
 8006882:	9107      	str	r1, [sp, #28]
 8006884:	9104      	str	r1, [sp, #16]
 8006886:	490a      	ldr	r1, [pc, #40]	@ (80068b0 <siprintf+0x40>)
 8006888:	f853 2b04 	ldr.w	r2, [r3], #4
 800688c:	9105      	str	r1, [sp, #20]
 800688e:	2400      	movs	r4, #0
 8006890:	a902      	add	r1, sp, #8
 8006892:	6800      	ldr	r0, [r0, #0]
 8006894:	9301      	str	r3, [sp, #4]
 8006896:	941b      	str	r4, [sp, #108]	@ 0x6c
 8006898:	f000 f994 	bl	8006bc4 <_svfiprintf_r>
 800689c:	9b02      	ldr	r3, [sp, #8]
 800689e:	701c      	strb	r4, [r3, #0]
 80068a0:	b01d      	add	sp, #116	@ 0x74
 80068a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80068a6:	b003      	add	sp, #12
 80068a8:	4770      	bx	lr
 80068aa:	bf00      	nop
 80068ac:	20000014 	.word	0x20000014
 80068b0:	ffff0208 	.word	0xffff0208

080068b4 <memset>:
 80068b4:	4402      	add	r2, r0
 80068b6:	4603      	mov	r3, r0
 80068b8:	4293      	cmp	r3, r2
 80068ba:	d100      	bne.n	80068be <memset+0xa>
 80068bc:	4770      	bx	lr
 80068be:	f803 1b01 	strb.w	r1, [r3], #1
 80068c2:	e7f9      	b.n	80068b8 <memset+0x4>

080068c4 <__errno>:
 80068c4:	4b01      	ldr	r3, [pc, #4]	@ (80068cc <__errno+0x8>)
 80068c6:	6818      	ldr	r0, [r3, #0]
 80068c8:	4770      	bx	lr
 80068ca:	bf00      	nop
 80068cc:	20000014 	.word	0x20000014

080068d0 <__libc_init_array>:
 80068d0:	b570      	push	{r4, r5, r6, lr}
 80068d2:	4d0d      	ldr	r5, [pc, #52]	@ (8006908 <__libc_init_array+0x38>)
 80068d4:	4c0d      	ldr	r4, [pc, #52]	@ (800690c <__libc_init_array+0x3c>)
 80068d6:	1b64      	subs	r4, r4, r5
 80068d8:	10a4      	asrs	r4, r4, #2
 80068da:	2600      	movs	r6, #0
 80068dc:	42a6      	cmp	r6, r4
 80068de:	d109      	bne.n	80068f4 <__libc_init_array+0x24>
 80068e0:	4d0b      	ldr	r5, [pc, #44]	@ (8006910 <__libc_init_array+0x40>)
 80068e2:	4c0c      	ldr	r4, [pc, #48]	@ (8006914 <__libc_init_array+0x44>)
 80068e4:	f000 fc64 	bl	80071b0 <_init>
 80068e8:	1b64      	subs	r4, r4, r5
 80068ea:	10a4      	asrs	r4, r4, #2
 80068ec:	2600      	movs	r6, #0
 80068ee:	42a6      	cmp	r6, r4
 80068f0:	d105      	bne.n	80068fe <__libc_init_array+0x2e>
 80068f2:	bd70      	pop	{r4, r5, r6, pc}
 80068f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80068f8:	4798      	blx	r3
 80068fa:	3601      	adds	r6, #1
 80068fc:	e7ee      	b.n	80068dc <__libc_init_array+0xc>
 80068fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8006902:	4798      	blx	r3
 8006904:	3601      	adds	r6, #1
 8006906:	e7f2      	b.n	80068ee <__libc_init_array+0x1e>
 8006908:	08007268 	.word	0x08007268
 800690c:	08007268 	.word	0x08007268
 8006910:	08007268 	.word	0x08007268
 8006914:	0800726c 	.word	0x0800726c

08006918 <__retarget_lock_acquire_recursive>:
 8006918:	4770      	bx	lr

0800691a <__retarget_lock_release_recursive>:
 800691a:	4770      	bx	lr

0800691c <_free_r>:
 800691c:	b538      	push	{r3, r4, r5, lr}
 800691e:	4605      	mov	r5, r0
 8006920:	2900      	cmp	r1, #0
 8006922:	d041      	beq.n	80069a8 <_free_r+0x8c>
 8006924:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006928:	1f0c      	subs	r4, r1, #4
 800692a:	2b00      	cmp	r3, #0
 800692c:	bfb8      	it	lt
 800692e:	18e4      	addlt	r4, r4, r3
 8006930:	f000 f8e0 	bl	8006af4 <__malloc_lock>
 8006934:	4a1d      	ldr	r2, [pc, #116]	@ (80069ac <_free_r+0x90>)
 8006936:	6813      	ldr	r3, [r2, #0]
 8006938:	b933      	cbnz	r3, 8006948 <_free_r+0x2c>
 800693a:	6063      	str	r3, [r4, #4]
 800693c:	6014      	str	r4, [r2, #0]
 800693e:	4628      	mov	r0, r5
 8006940:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006944:	f000 b8dc 	b.w	8006b00 <__malloc_unlock>
 8006948:	42a3      	cmp	r3, r4
 800694a:	d908      	bls.n	800695e <_free_r+0x42>
 800694c:	6820      	ldr	r0, [r4, #0]
 800694e:	1821      	adds	r1, r4, r0
 8006950:	428b      	cmp	r3, r1
 8006952:	bf01      	itttt	eq
 8006954:	6819      	ldreq	r1, [r3, #0]
 8006956:	685b      	ldreq	r3, [r3, #4]
 8006958:	1809      	addeq	r1, r1, r0
 800695a:	6021      	streq	r1, [r4, #0]
 800695c:	e7ed      	b.n	800693a <_free_r+0x1e>
 800695e:	461a      	mov	r2, r3
 8006960:	685b      	ldr	r3, [r3, #4]
 8006962:	b10b      	cbz	r3, 8006968 <_free_r+0x4c>
 8006964:	42a3      	cmp	r3, r4
 8006966:	d9fa      	bls.n	800695e <_free_r+0x42>
 8006968:	6811      	ldr	r1, [r2, #0]
 800696a:	1850      	adds	r0, r2, r1
 800696c:	42a0      	cmp	r0, r4
 800696e:	d10b      	bne.n	8006988 <_free_r+0x6c>
 8006970:	6820      	ldr	r0, [r4, #0]
 8006972:	4401      	add	r1, r0
 8006974:	1850      	adds	r0, r2, r1
 8006976:	4283      	cmp	r3, r0
 8006978:	6011      	str	r1, [r2, #0]
 800697a:	d1e0      	bne.n	800693e <_free_r+0x22>
 800697c:	6818      	ldr	r0, [r3, #0]
 800697e:	685b      	ldr	r3, [r3, #4]
 8006980:	6053      	str	r3, [r2, #4]
 8006982:	4408      	add	r0, r1
 8006984:	6010      	str	r0, [r2, #0]
 8006986:	e7da      	b.n	800693e <_free_r+0x22>
 8006988:	d902      	bls.n	8006990 <_free_r+0x74>
 800698a:	230c      	movs	r3, #12
 800698c:	602b      	str	r3, [r5, #0]
 800698e:	e7d6      	b.n	800693e <_free_r+0x22>
 8006990:	6820      	ldr	r0, [r4, #0]
 8006992:	1821      	adds	r1, r4, r0
 8006994:	428b      	cmp	r3, r1
 8006996:	bf04      	itt	eq
 8006998:	6819      	ldreq	r1, [r3, #0]
 800699a:	685b      	ldreq	r3, [r3, #4]
 800699c:	6063      	str	r3, [r4, #4]
 800699e:	bf04      	itt	eq
 80069a0:	1809      	addeq	r1, r1, r0
 80069a2:	6021      	streq	r1, [r4, #0]
 80069a4:	6054      	str	r4, [r2, #4]
 80069a6:	e7ca      	b.n	800693e <_free_r+0x22>
 80069a8:	bd38      	pop	{r3, r4, r5, pc}
 80069aa:	bf00      	nop
 80069ac:	2000040c 	.word	0x2000040c

080069b0 <sbrk_aligned>:
 80069b0:	b570      	push	{r4, r5, r6, lr}
 80069b2:	4e0f      	ldr	r6, [pc, #60]	@ (80069f0 <sbrk_aligned+0x40>)
 80069b4:	460c      	mov	r4, r1
 80069b6:	6831      	ldr	r1, [r6, #0]
 80069b8:	4605      	mov	r5, r0
 80069ba:	b911      	cbnz	r1, 80069c2 <sbrk_aligned+0x12>
 80069bc:	f000 fba4 	bl	8007108 <_sbrk_r>
 80069c0:	6030      	str	r0, [r6, #0]
 80069c2:	4621      	mov	r1, r4
 80069c4:	4628      	mov	r0, r5
 80069c6:	f000 fb9f 	bl	8007108 <_sbrk_r>
 80069ca:	1c43      	adds	r3, r0, #1
 80069cc:	d103      	bne.n	80069d6 <sbrk_aligned+0x26>
 80069ce:	f04f 34ff 	mov.w	r4, #4294967295
 80069d2:	4620      	mov	r0, r4
 80069d4:	bd70      	pop	{r4, r5, r6, pc}
 80069d6:	1cc4      	adds	r4, r0, #3
 80069d8:	f024 0403 	bic.w	r4, r4, #3
 80069dc:	42a0      	cmp	r0, r4
 80069de:	d0f8      	beq.n	80069d2 <sbrk_aligned+0x22>
 80069e0:	1a21      	subs	r1, r4, r0
 80069e2:	4628      	mov	r0, r5
 80069e4:	f000 fb90 	bl	8007108 <_sbrk_r>
 80069e8:	3001      	adds	r0, #1
 80069ea:	d1f2      	bne.n	80069d2 <sbrk_aligned+0x22>
 80069ec:	e7ef      	b.n	80069ce <sbrk_aligned+0x1e>
 80069ee:	bf00      	nop
 80069f0:	20000408 	.word	0x20000408

080069f4 <_malloc_r>:
 80069f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80069f8:	1ccd      	adds	r5, r1, #3
 80069fa:	f025 0503 	bic.w	r5, r5, #3
 80069fe:	3508      	adds	r5, #8
 8006a00:	2d0c      	cmp	r5, #12
 8006a02:	bf38      	it	cc
 8006a04:	250c      	movcc	r5, #12
 8006a06:	2d00      	cmp	r5, #0
 8006a08:	4606      	mov	r6, r0
 8006a0a:	db01      	blt.n	8006a10 <_malloc_r+0x1c>
 8006a0c:	42a9      	cmp	r1, r5
 8006a0e:	d904      	bls.n	8006a1a <_malloc_r+0x26>
 8006a10:	230c      	movs	r3, #12
 8006a12:	6033      	str	r3, [r6, #0]
 8006a14:	2000      	movs	r0, #0
 8006a16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006a1a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8006af0 <_malloc_r+0xfc>
 8006a1e:	f000 f869 	bl	8006af4 <__malloc_lock>
 8006a22:	f8d8 3000 	ldr.w	r3, [r8]
 8006a26:	461c      	mov	r4, r3
 8006a28:	bb44      	cbnz	r4, 8006a7c <_malloc_r+0x88>
 8006a2a:	4629      	mov	r1, r5
 8006a2c:	4630      	mov	r0, r6
 8006a2e:	f7ff ffbf 	bl	80069b0 <sbrk_aligned>
 8006a32:	1c43      	adds	r3, r0, #1
 8006a34:	4604      	mov	r4, r0
 8006a36:	d158      	bne.n	8006aea <_malloc_r+0xf6>
 8006a38:	f8d8 4000 	ldr.w	r4, [r8]
 8006a3c:	4627      	mov	r7, r4
 8006a3e:	2f00      	cmp	r7, #0
 8006a40:	d143      	bne.n	8006aca <_malloc_r+0xd6>
 8006a42:	2c00      	cmp	r4, #0
 8006a44:	d04b      	beq.n	8006ade <_malloc_r+0xea>
 8006a46:	6823      	ldr	r3, [r4, #0]
 8006a48:	4639      	mov	r1, r7
 8006a4a:	4630      	mov	r0, r6
 8006a4c:	eb04 0903 	add.w	r9, r4, r3
 8006a50:	f000 fb5a 	bl	8007108 <_sbrk_r>
 8006a54:	4581      	cmp	r9, r0
 8006a56:	d142      	bne.n	8006ade <_malloc_r+0xea>
 8006a58:	6821      	ldr	r1, [r4, #0]
 8006a5a:	1a6d      	subs	r5, r5, r1
 8006a5c:	4629      	mov	r1, r5
 8006a5e:	4630      	mov	r0, r6
 8006a60:	f7ff ffa6 	bl	80069b0 <sbrk_aligned>
 8006a64:	3001      	adds	r0, #1
 8006a66:	d03a      	beq.n	8006ade <_malloc_r+0xea>
 8006a68:	6823      	ldr	r3, [r4, #0]
 8006a6a:	442b      	add	r3, r5
 8006a6c:	6023      	str	r3, [r4, #0]
 8006a6e:	f8d8 3000 	ldr.w	r3, [r8]
 8006a72:	685a      	ldr	r2, [r3, #4]
 8006a74:	bb62      	cbnz	r2, 8006ad0 <_malloc_r+0xdc>
 8006a76:	f8c8 7000 	str.w	r7, [r8]
 8006a7a:	e00f      	b.n	8006a9c <_malloc_r+0xa8>
 8006a7c:	6822      	ldr	r2, [r4, #0]
 8006a7e:	1b52      	subs	r2, r2, r5
 8006a80:	d420      	bmi.n	8006ac4 <_malloc_r+0xd0>
 8006a82:	2a0b      	cmp	r2, #11
 8006a84:	d917      	bls.n	8006ab6 <_malloc_r+0xc2>
 8006a86:	1961      	adds	r1, r4, r5
 8006a88:	42a3      	cmp	r3, r4
 8006a8a:	6025      	str	r5, [r4, #0]
 8006a8c:	bf18      	it	ne
 8006a8e:	6059      	strne	r1, [r3, #4]
 8006a90:	6863      	ldr	r3, [r4, #4]
 8006a92:	bf08      	it	eq
 8006a94:	f8c8 1000 	streq.w	r1, [r8]
 8006a98:	5162      	str	r2, [r4, r5]
 8006a9a:	604b      	str	r3, [r1, #4]
 8006a9c:	4630      	mov	r0, r6
 8006a9e:	f000 f82f 	bl	8006b00 <__malloc_unlock>
 8006aa2:	f104 000b 	add.w	r0, r4, #11
 8006aa6:	1d23      	adds	r3, r4, #4
 8006aa8:	f020 0007 	bic.w	r0, r0, #7
 8006aac:	1ac2      	subs	r2, r0, r3
 8006aae:	bf1c      	itt	ne
 8006ab0:	1a1b      	subne	r3, r3, r0
 8006ab2:	50a3      	strne	r3, [r4, r2]
 8006ab4:	e7af      	b.n	8006a16 <_malloc_r+0x22>
 8006ab6:	6862      	ldr	r2, [r4, #4]
 8006ab8:	42a3      	cmp	r3, r4
 8006aba:	bf0c      	ite	eq
 8006abc:	f8c8 2000 	streq.w	r2, [r8]
 8006ac0:	605a      	strne	r2, [r3, #4]
 8006ac2:	e7eb      	b.n	8006a9c <_malloc_r+0xa8>
 8006ac4:	4623      	mov	r3, r4
 8006ac6:	6864      	ldr	r4, [r4, #4]
 8006ac8:	e7ae      	b.n	8006a28 <_malloc_r+0x34>
 8006aca:	463c      	mov	r4, r7
 8006acc:	687f      	ldr	r7, [r7, #4]
 8006ace:	e7b6      	b.n	8006a3e <_malloc_r+0x4a>
 8006ad0:	461a      	mov	r2, r3
 8006ad2:	685b      	ldr	r3, [r3, #4]
 8006ad4:	42a3      	cmp	r3, r4
 8006ad6:	d1fb      	bne.n	8006ad0 <_malloc_r+0xdc>
 8006ad8:	2300      	movs	r3, #0
 8006ada:	6053      	str	r3, [r2, #4]
 8006adc:	e7de      	b.n	8006a9c <_malloc_r+0xa8>
 8006ade:	230c      	movs	r3, #12
 8006ae0:	6033      	str	r3, [r6, #0]
 8006ae2:	4630      	mov	r0, r6
 8006ae4:	f000 f80c 	bl	8006b00 <__malloc_unlock>
 8006ae8:	e794      	b.n	8006a14 <_malloc_r+0x20>
 8006aea:	6005      	str	r5, [r0, #0]
 8006aec:	e7d6      	b.n	8006a9c <_malloc_r+0xa8>
 8006aee:	bf00      	nop
 8006af0:	2000040c 	.word	0x2000040c

08006af4 <__malloc_lock>:
 8006af4:	4801      	ldr	r0, [pc, #4]	@ (8006afc <__malloc_lock+0x8>)
 8006af6:	f7ff bf0f 	b.w	8006918 <__retarget_lock_acquire_recursive>
 8006afa:	bf00      	nop
 8006afc:	20000404 	.word	0x20000404

08006b00 <__malloc_unlock>:
 8006b00:	4801      	ldr	r0, [pc, #4]	@ (8006b08 <__malloc_unlock+0x8>)
 8006b02:	f7ff bf0a 	b.w	800691a <__retarget_lock_release_recursive>
 8006b06:	bf00      	nop
 8006b08:	20000404 	.word	0x20000404

08006b0c <__ssputs_r>:
 8006b0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006b10:	688e      	ldr	r6, [r1, #8]
 8006b12:	461f      	mov	r7, r3
 8006b14:	42be      	cmp	r6, r7
 8006b16:	680b      	ldr	r3, [r1, #0]
 8006b18:	4682      	mov	sl, r0
 8006b1a:	460c      	mov	r4, r1
 8006b1c:	4690      	mov	r8, r2
 8006b1e:	d82d      	bhi.n	8006b7c <__ssputs_r+0x70>
 8006b20:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8006b24:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8006b28:	d026      	beq.n	8006b78 <__ssputs_r+0x6c>
 8006b2a:	6965      	ldr	r5, [r4, #20]
 8006b2c:	6909      	ldr	r1, [r1, #16]
 8006b2e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006b32:	eba3 0901 	sub.w	r9, r3, r1
 8006b36:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006b3a:	1c7b      	adds	r3, r7, #1
 8006b3c:	444b      	add	r3, r9
 8006b3e:	106d      	asrs	r5, r5, #1
 8006b40:	429d      	cmp	r5, r3
 8006b42:	bf38      	it	cc
 8006b44:	461d      	movcc	r5, r3
 8006b46:	0553      	lsls	r3, r2, #21
 8006b48:	d527      	bpl.n	8006b9a <__ssputs_r+0x8e>
 8006b4a:	4629      	mov	r1, r5
 8006b4c:	f7ff ff52 	bl	80069f4 <_malloc_r>
 8006b50:	4606      	mov	r6, r0
 8006b52:	b360      	cbz	r0, 8006bae <__ssputs_r+0xa2>
 8006b54:	6921      	ldr	r1, [r4, #16]
 8006b56:	464a      	mov	r2, r9
 8006b58:	f000 fae6 	bl	8007128 <memcpy>
 8006b5c:	89a3      	ldrh	r3, [r4, #12]
 8006b5e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8006b62:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006b66:	81a3      	strh	r3, [r4, #12]
 8006b68:	6126      	str	r6, [r4, #16]
 8006b6a:	6165      	str	r5, [r4, #20]
 8006b6c:	444e      	add	r6, r9
 8006b6e:	eba5 0509 	sub.w	r5, r5, r9
 8006b72:	6026      	str	r6, [r4, #0]
 8006b74:	60a5      	str	r5, [r4, #8]
 8006b76:	463e      	mov	r6, r7
 8006b78:	42be      	cmp	r6, r7
 8006b7a:	d900      	bls.n	8006b7e <__ssputs_r+0x72>
 8006b7c:	463e      	mov	r6, r7
 8006b7e:	6820      	ldr	r0, [r4, #0]
 8006b80:	4632      	mov	r2, r6
 8006b82:	4641      	mov	r1, r8
 8006b84:	f000 faa6 	bl	80070d4 <memmove>
 8006b88:	68a3      	ldr	r3, [r4, #8]
 8006b8a:	1b9b      	subs	r3, r3, r6
 8006b8c:	60a3      	str	r3, [r4, #8]
 8006b8e:	6823      	ldr	r3, [r4, #0]
 8006b90:	4433      	add	r3, r6
 8006b92:	6023      	str	r3, [r4, #0]
 8006b94:	2000      	movs	r0, #0
 8006b96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b9a:	462a      	mov	r2, r5
 8006b9c:	f000 fad2 	bl	8007144 <_realloc_r>
 8006ba0:	4606      	mov	r6, r0
 8006ba2:	2800      	cmp	r0, #0
 8006ba4:	d1e0      	bne.n	8006b68 <__ssputs_r+0x5c>
 8006ba6:	6921      	ldr	r1, [r4, #16]
 8006ba8:	4650      	mov	r0, sl
 8006baa:	f7ff feb7 	bl	800691c <_free_r>
 8006bae:	230c      	movs	r3, #12
 8006bb0:	f8ca 3000 	str.w	r3, [sl]
 8006bb4:	89a3      	ldrh	r3, [r4, #12]
 8006bb6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006bba:	81a3      	strh	r3, [r4, #12]
 8006bbc:	f04f 30ff 	mov.w	r0, #4294967295
 8006bc0:	e7e9      	b.n	8006b96 <__ssputs_r+0x8a>
	...

08006bc4 <_svfiprintf_r>:
 8006bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bc8:	4698      	mov	r8, r3
 8006bca:	898b      	ldrh	r3, [r1, #12]
 8006bcc:	061b      	lsls	r3, r3, #24
 8006bce:	b09d      	sub	sp, #116	@ 0x74
 8006bd0:	4607      	mov	r7, r0
 8006bd2:	460d      	mov	r5, r1
 8006bd4:	4614      	mov	r4, r2
 8006bd6:	d510      	bpl.n	8006bfa <_svfiprintf_r+0x36>
 8006bd8:	690b      	ldr	r3, [r1, #16]
 8006bda:	b973      	cbnz	r3, 8006bfa <_svfiprintf_r+0x36>
 8006bdc:	2140      	movs	r1, #64	@ 0x40
 8006bde:	f7ff ff09 	bl	80069f4 <_malloc_r>
 8006be2:	6028      	str	r0, [r5, #0]
 8006be4:	6128      	str	r0, [r5, #16]
 8006be6:	b930      	cbnz	r0, 8006bf6 <_svfiprintf_r+0x32>
 8006be8:	230c      	movs	r3, #12
 8006bea:	603b      	str	r3, [r7, #0]
 8006bec:	f04f 30ff 	mov.w	r0, #4294967295
 8006bf0:	b01d      	add	sp, #116	@ 0x74
 8006bf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bf6:	2340      	movs	r3, #64	@ 0x40
 8006bf8:	616b      	str	r3, [r5, #20]
 8006bfa:	2300      	movs	r3, #0
 8006bfc:	9309      	str	r3, [sp, #36]	@ 0x24
 8006bfe:	2320      	movs	r3, #32
 8006c00:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006c04:	f8cd 800c 	str.w	r8, [sp, #12]
 8006c08:	2330      	movs	r3, #48	@ 0x30
 8006c0a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8006da8 <_svfiprintf_r+0x1e4>
 8006c0e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006c12:	f04f 0901 	mov.w	r9, #1
 8006c16:	4623      	mov	r3, r4
 8006c18:	469a      	mov	sl, r3
 8006c1a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006c1e:	b10a      	cbz	r2, 8006c24 <_svfiprintf_r+0x60>
 8006c20:	2a25      	cmp	r2, #37	@ 0x25
 8006c22:	d1f9      	bne.n	8006c18 <_svfiprintf_r+0x54>
 8006c24:	ebba 0b04 	subs.w	fp, sl, r4
 8006c28:	d00b      	beq.n	8006c42 <_svfiprintf_r+0x7e>
 8006c2a:	465b      	mov	r3, fp
 8006c2c:	4622      	mov	r2, r4
 8006c2e:	4629      	mov	r1, r5
 8006c30:	4638      	mov	r0, r7
 8006c32:	f7ff ff6b 	bl	8006b0c <__ssputs_r>
 8006c36:	3001      	adds	r0, #1
 8006c38:	f000 80a7 	beq.w	8006d8a <_svfiprintf_r+0x1c6>
 8006c3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006c3e:	445a      	add	r2, fp
 8006c40:	9209      	str	r2, [sp, #36]	@ 0x24
 8006c42:	f89a 3000 	ldrb.w	r3, [sl]
 8006c46:	2b00      	cmp	r3, #0
 8006c48:	f000 809f 	beq.w	8006d8a <_svfiprintf_r+0x1c6>
 8006c4c:	2300      	movs	r3, #0
 8006c4e:	f04f 32ff 	mov.w	r2, #4294967295
 8006c52:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006c56:	f10a 0a01 	add.w	sl, sl, #1
 8006c5a:	9304      	str	r3, [sp, #16]
 8006c5c:	9307      	str	r3, [sp, #28]
 8006c5e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8006c62:	931a      	str	r3, [sp, #104]	@ 0x68
 8006c64:	4654      	mov	r4, sl
 8006c66:	2205      	movs	r2, #5
 8006c68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006c6c:	484e      	ldr	r0, [pc, #312]	@ (8006da8 <_svfiprintf_r+0x1e4>)
 8006c6e:	f7f9 fab7 	bl	80001e0 <memchr>
 8006c72:	9a04      	ldr	r2, [sp, #16]
 8006c74:	b9d8      	cbnz	r0, 8006cae <_svfiprintf_r+0xea>
 8006c76:	06d0      	lsls	r0, r2, #27
 8006c78:	bf44      	itt	mi
 8006c7a:	2320      	movmi	r3, #32
 8006c7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006c80:	0711      	lsls	r1, r2, #28
 8006c82:	bf44      	itt	mi
 8006c84:	232b      	movmi	r3, #43	@ 0x2b
 8006c86:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006c8a:	f89a 3000 	ldrb.w	r3, [sl]
 8006c8e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006c90:	d015      	beq.n	8006cbe <_svfiprintf_r+0xfa>
 8006c92:	9a07      	ldr	r2, [sp, #28]
 8006c94:	4654      	mov	r4, sl
 8006c96:	2000      	movs	r0, #0
 8006c98:	f04f 0c0a 	mov.w	ip, #10
 8006c9c:	4621      	mov	r1, r4
 8006c9e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006ca2:	3b30      	subs	r3, #48	@ 0x30
 8006ca4:	2b09      	cmp	r3, #9
 8006ca6:	d94b      	bls.n	8006d40 <_svfiprintf_r+0x17c>
 8006ca8:	b1b0      	cbz	r0, 8006cd8 <_svfiprintf_r+0x114>
 8006caa:	9207      	str	r2, [sp, #28]
 8006cac:	e014      	b.n	8006cd8 <_svfiprintf_r+0x114>
 8006cae:	eba0 0308 	sub.w	r3, r0, r8
 8006cb2:	fa09 f303 	lsl.w	r3, r9, r3
 8006cb6:	4313      	orrs	r3, r2
 8006cb8:	9304      	str	r3, [sp, #16]
 8006cba:	46a2      	mov	sl, r4
 8006cbc:	e7d2      	b.n	8006c64 <_svfiprintf_r+0xa0>
 8006cbe:	9b03      	ldr	r3, [sp, #12]
 8006cc0:	1d19      	adds	r1, r3, #4
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	9103      	str	r1, [sp, #12]
 8006cc6:	2b00      	cmp	r3, #0
 8006cc8:	bfbb      	ittet	lt
 8006cca:	425b      	neglt	r3, r3
 8006ccc:	f042 0202 	orrlt.w	r2, r2, #2
 8006cd0:	9307      	strge	r3, [sp, #28]
 8006cd2:	9307      	strlt	r3, [sp, #28]
 8006cd4:	bfb8      	it	lt
 8006cd6:	9204      	strlt	r2, [sp, #16]
 8006cd8:	7823      	ldrb	r3, [r4, #0]
 8006cda:	2b2e      	cmp	r3, #46	@ 0x2e
 8006cdc:	d10a      	bne.n	8006cf4 <_svfiprintf_r+0x130>
 8006cde:	7863      	ldrb	r3, [r4, #1]
 8006ce0:	2b2a      	cmp	r3, #42	@ 0x2a
 8006ce2:	d132      	bne.n	8006d4a <_svfiprintf_r+0x186>
 8006ce4:	9b03      	ldr	r3, [sp, #12]
 8006ce6:	1d1a      	adds	r2, r3, #4
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	9203      	str	r2, [sp, #12]
 8006cec:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006cf0:	3402      	adds	r4, #2
 8006cf2:	9305      	str	r3, [sp, #20]
 8006cf4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8006db8 <_svfiprintf_r+0x1f4>
 8006cf8:	7821      	ldrb	r1, [r4, #0]
 8006cfa:	2203      	movs	r2, #3
 8006cfc:	4650      	mov	r0, sl
 8006cfe:	f7f9 fa6f 	bl	80001e0 <memchr>
 8006d02:	b138      	cbz	r0, 8006d14 <_svfiprintf_r+0x150>
 8006d04:	9b04      	ldr	r3, [sp, #16]
 8006d06:	eba0 000a 	sub.w	r0, r0, sl
 8006d0a:	2240      	movs	r2, #64	@ 0x40
 8006d0c:	4082      	lsls	r2, r0
 8006d0e:	4313      	orrs	r3, r2
 8006d10:	3401      	adds	r4, #1
 8006d12:	9304      	str	r3, [sp, #16]
 8006d14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006d18:	4824      	ldr	r0, [pc, #144]	@ (8006dac <_svfiprintf_r+0x1e8>)
 8006d1a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8006d1e:	2206      	movs	r2, #6
 8006d20:	f7f9 fa5e 	bl	80001e0 <memchr>
 8006d24:	2800      	cmp	r0, #0
 8006d26:	d036      	beq.n	8006d96 <_svfiprintf_r+0x1d2>
 8006d28:	4b21      	ldr	r3, [pc, #132]	@ (8006db0 <_svfiprintf_r+0x1ec>)
 8006d2a:	bb1b      	cbnz	r3, 8006d74 <_svfiprintf_r+0x1b0>
 8006d2c:	9b03      	ldr	r3, [sp, #12]
 8006d2e:	3307      	adds	r3, #7
 8006d30:	f023 0307 	bic.w	r3, r3, #7
 8006d34:	3308      	adds	r3, #8
 8006d36:	9303      	str	r3, [sp, #12]
 8006d38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006d3a:	4433      	add	r3, r6
 8006d3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8006d3e:	e76a      	b.n	8006c16 <_svfiprintf_r+0x52>
 8006d40:	fb0c 3202 	mla	r2, ip, r2, r3
 8006d44:	460c      	mov	r4, r1
 8006d46:	2001      	movs	r0, #1
 8006d48:	e7a8      	b.n	8006c9c <_svfiprintf_r+0xd8>
 8006d4a:	2300      	movs	r3, #0
 8006d4c:	3401      	adds	r4, #1
 8006d4e:	9305      	str	r3, [sp, #20]
 8006d50:	4619      	mov	r1, r3
 8006d52:	f04f 0c0a 	mov.w	ip, #10
 8006d56:	4620      	mov	r0, r4
 8006d58:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006d5c:	3a30      	subs	r2, #48	@ 0x30
 8006d5e:	2a09      	cmp	r2, #9
 8006d60:	d903      	bls.n	8006d6a <_svfiprintf_r+0x1a6>
 8006d62:	2b00      	cmp	r3, #0
 8006d64:	d0c6      	beq.n	8006cf4 <_svfiprintf_r+0x130>
 8006d66:	9105      	str	r1, [sp, #20]
 8006d68:	e7c4      	b.n	8006cf4 <_svfiprintf_r+0x130>
 8006d6a:	fb0c 2101 	mla	r1, ip, r1, r2
 8006d6e:	4604      	mov	r4, r0
 8006d70:	2301      	movs	r3, #1
 8006d72:	e7f0      	b.n	8006d56 <_svfiprintf_r+0x192>
 8006d74:	ab03      	add	r3, sp, #12
 8006d76:	9300      	str	r3, [sp, #0]
 8006d78:	462a      	mov	r2, r5
 8006d7a:	4b0e      	ldr	r3, [pc, #56]	@ (8006db4 <_svfiprintf_r+0x1f0>)
 8006d7c:	a904      	add	r1, sp, #16
 8006d7e:	4638      	mov	r0, r7
 8006d80:	f3af 8000 	nop.w
 8006d84:	1c42      	adds	r2, r0, #1
 8006d86:	4606      	mov	r6, r0
 8006d88:	d1d6      	bne.n	8006d38 <_svfiprintf_r+0x174>
 8006d8a:	89ab      	ldrh	r3, [r5, #12]
 8006d8c:	065b      	lsls	r3, r3, #25
 8006d8e:	f53f af2d 	bmi.w	8006bec <_svfiprintf_r+0x28>
 8006d92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006d94:	e72c      	b.n	8006bf0 <_svfiprintf_r+0x2c>
 8006d96:	ab03      	add	r3, sp, #12
 8006d98:	9300      	str	r3, [sp, #0]
 8006d9a:	462a      	mov	r2, r5
 8006d9c:	4b05      	ldr	r3, [pc, #20]	@ (8006db4 <_svfiprintf_r+0x1f0>)
 8006d9e:	a904      	add	r1, sp, #16
 8006da0:	4638      	mov	r0, r7
 8006da2:	f000 f879 	bl	8006e98 <_printf_i>
 8006da6:	e7ed      	b.n	8006d84 <_svfiprintf_r+0x1c0>
 8006da8:	0800722c 	.word	0x0800722c
 8006dac:	08007236 	.word	0x08007236
 8006db0:	00000000 	.word	0x00000000
 8006db4:	08006b0d 	.word	0x08006b0d
 8006db8:	08007232 	.word	0x08007232

08006dbc <_printf_common>:
 8006dbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006dc0:	4616      	mov	r6, r2
 8006dc2:	4698      	mov	r8, r3
 8006dc4:	688a      	ldr	r2, [r1, #8]
 8006dc6:	690b      	ldr	r3, [r1, #16]
 8006dc8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006dcc:	4293      	cmp	r3, r2
 8006dce:	bfb8      	it	lt
 8006dd0:	4613      	movlt	r3, r2
 8006dd2:	6033      	str	r3, [r6, #0]
 8006dd4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8006dd8:	4607      	mov	r7, r0
 8006dda:	460c      	mov	r4, r1
 8006ddc:	b10a      	cbz	r2, 8006de2 <_printf_common+0x26>
 8006dde:	3301      	adds	r3, #1
 8006de0:	6033      	str	r3, [r6, #0]
 8006de2:	6823      	ldr	r3, [r4, #0]
 8006de4:	0699      	lsls	r1, r3, #26
 8006de6:	bf42      	ittt	mi
 8006de8:	6833      	ldrmi	r3, [r6, #0]
 8006dea:	3302      	addmi	r3, #2
 8006dec:	6033      	strmi	r3, [r6, #0]
 8006dee:	6825      	ldr	r5, [r4, #0]
 8006df0:	f015 0506 	ands.w	r5, r5, #6
 8006df4:	d106      	bne.n	8006e04 <_printf_common+0x48>
 8006df6:	f104 0a19 	add.w	sl, r4, #25
 8006dfa:	68e3      	ldr	r3, [r4, #12]
 8006dfc:	6832      	ldr	r2, [r6, #0]
 8006dfe:	1a9b      	subs	r3, r3, r2
 8006e00:	42ab      	cmp	r3, r5
 8006e02:	dc26      	bgt.n	8006e52 <_printf_common+0x96>
 8006e04:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8006e08:	6822      	ldr	r2, [r4, #0]
 8006e0a:	3b00      	subs	r3, #0
 8006e0c:	bf18      	it	ne
 8006e0e:	2301      	movne	r3, #1
 8006e10:	0692      	lsls	r2, r2, #26
 8006e12:	d42b      	bmi.n	8006e6c <_printf_common+0xb0>
 8006e14:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8006e18:	4641      	mov	r1, r8
 8006e1a:	4638      	mov	r0, r7
 8006e1c:	47c8      	blx	r9
 8006e1e:	3001      	adds	r0, #1
 8006e20:	d01e      	beq.n	8006e60 <_printf_common+0xa4>
 8006e22:	6823      	ldr	r3, [r4, #0]
 8006e24:	6922      	ldr	r2, [r4, #16]
 8006e26:	f003 0306 	and.w	r3, r3, #6
 8006e2a:	2b04      	cmp	r3, #4
 8006e2c:	bf02      	ittt	eq
 8006e2e:	68e5      	ldreq	r5, [r4, #12]
 8006e30:	6833      	ldreq	r3, [r6, #0]
 8006e32:	1aed      	subeq	r5, r5, r3
 8006e34:	68a3      	ldr	r3, [r4, #8]
 8006e36:	bf0c      	ite	eq
 8006e38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006e3c:	2500      	movne	r5, #0
 8006e3e:	4293      	cmp	r3, r2
 8006e40:	bfc4      	itt	gt
 8006e42:	1a9b      	subgt	r3, r3, r2
 8006e44:	18ed      	addgt	r5, r5, r3
 8006e46:	2600      	movs	r6, #0
 8006e48:	341a      	adds	r4, #26
 8006e4a:	42b5      	cmp	r5, r6
 8006e4c:	d11a      	bne.n	8006e84 <_printf_common+0xc8>
 8006e4e:	2000      	movs	r0, #0
 8006e50:	e008      	b.n	8006e64 <_printf_common+0xa8>
 8006e52:	2301      	movs	r3, #1
 8006e54:	4652      	mov	r2, sl
 8006e56:	4641      	mov	r1, r8
 8006e58:	4638      	mov	r0, r7
 8006e5a:	47c8      	blx	r9
 8006e5c:	3001      	adds	r0, #1
 8006e5e:	d103      	bne.n	8006e68 <_printf_common+0xac>
 8006e60:	f04f 30ff 	mov.w	r0, #4294967295
 8006e64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006e68:	3501      	adds	r5, #1
 8006e6a:	e7c6      	b.n	8006dfa <_printf_common+0x3e>
 8006e6c:	18e1      	adds	r1, r4, r3
 8006e6e:	1c5a      	adds	r2, r3, #1
 8006e70:	2030      	movs	r0, #48	@ 0x30
 8006e72:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8006e76:	4422      	add	r2, r4
 8006e78:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8006e7c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8006e80:	3302      	adds	r3, #2
 8006e82:	e7c7      	b.n	8006e14 <_printf_common+0x58>
 8006e84:	2301      	movs	r3, #1
 8006e86:	4622      	mov	r2, r4
 8006e88:	4641      	mov	r1, r8
 8006e8a:	4638      	mov	r0, r7
 8006e8c:	47c8      	blx	r9
 8006e8e:	3001      	adds	r0, #1
 8006e90:	d0e6      	beq.n	8006e60 <_printf_common+0xa4>
 8006e92:	3601      	adds	r6, #1
 8006e94:	e7d9      	b.n	8006e4a <_printf_common+0x8e>
	...

08006e98 <_printf_i>:
 8006e98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006e9c:	7e0f      	ldrb	r7, [r1, #24]
 8006e9e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8006ea0:	2f78      	cmp	r7, #120	@ 0x78
 8006ea2:	4691      	mov	r9, r2
 8006ea4:	4680      	mov	r8, r0
 8006ea6:	460c      	mov	r4, r1
 8006ea8:	469a      	mov	sl, r3
 8006eaa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8006eae:	d807      	bhi.n	8006ec0 <_printf_i+0x28>
 8006eb0:	2f62      	cmp	r7, #98	@ 0x62
 8006eb2:	d80a      	bhi.n	8006eca <_printf_i+0x32>
 8006eb4:	2f00      	cmp	r7, #0
 8006eb6:	f000 80d1 	beq.w	800705c <_printf_i+0x1c4>
 8006eba:	2f58      	cmp	r7, #88	@ 0x58
 8006ebc:	f000 80b8 	beq.w	8007030 <_printf_i+0x198>
 8006ec0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006ec4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8006ec8:	e03a      	b.n	8006f40 <_printf_i+0xa8>
 8006eca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006ece:	2b15      	cmp	r3, #21
 8006ed0:	d8f6      	bhi.n	8006ec0 <_printf_i+0x28>
 8006ed2:	a101      	add	r1, pc, #4	@ (adr r1, 8006ed8 <_printf_i+0x40>)
 8006ed4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006ed8:	08006f31 	.word	0x08006f31
 8006edc:	08006f45 	.word	0x08006f45
 8006ee0:	08006ec1 	.word	0x08006ec1
 8006ee4:	08006ec1 	.word	0x08006ec1
 8006ee8:	08006ec1 	.word	0x08006ec1
 8006eec:	08006ec1 	.word	0x08006ec1
 8006ef0:	08006f45 	.word	0x08006f45
 8006ef4:	08006ec1 	.word	0x08006ec1
 8006ef8:	08006ec1 	.word	0x08006ec1
 8006efc:	08006ec1 	.word	0x08006ec1
 8006f00:	08006ec1 	.word	0x08006ec1
 8006f04:	08007043 	.word	0x08007043
 8006f08:	08006f6f 	.word	0x08006f6f
 8006f0c:	08006ffd 	.word	0x08006ffd
 8006f10:	08006ec1 	.word	0x08006ec1
 8006f14:	08006ec1 	.word	0x08006ec1
 8006f18:	08007065 	.word	0x08007065
 8006f1c:	08006ec1 	.word	0x08006ec1
 8006f20:	08006f6f 	.word	0x08006f6f
 8006f24:	08006ec1 	.word	0x08006ec1
 8006f28:	08006ec1 	.word	0x08006ec1
 8006f2c:	08007005 	.word	0x08007005
 8006f30:	6833      	ldr	r3, [r6, #0]
 8006f32:	1d1a      	adds	r2, r3, #4
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	6032      	str	r2, [r6, #0]
 8006f38:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006f3c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006f40:	2301      	movs	r3, #1
 8006f42:	e09c      	b.n	800707e <_printf_i+0x1e6>
 8006f44:	6833      	ldr	r3, [r6, #0]
 8006f46:	6820      	ldr	r0, [r4, #0]
 8006f48:	1d19      	adds	r1, r3, #4
 8006f4a:	6031      	str	r1, [r6, #0]
 8006f4c:	0606      	lsls	r6, r0, #24
 8006f4e:	d501      	bpl.n	8006f54 <_printf_i+0xbc>
 8006f50:	681d      	ldr	r5, [r3, #0]
 8006f52:	e003      	b.n	8006f5c <_printf_i+0xc4>
 8006f54:	0645      	lsls	r5, r0, #25
 8006f56:	d5fb      	bpl.n	8006f50 <_printf_i+0xb8>
 8006f58:	f9b3 5000 	ldrsh.w	r5, [r3]
 8006f5c:	2d00      	cmp	r5, #0
 8006f5e:	da03      	bge.n	8006f68 <_printf_i+0xd0>
 8006f60:	232d      	movs	r3, #45	@ 0x2d
 8006f62:	426d      	negs	r5, r5
 8006f64:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8006f68:	4858      	ldr	r0, [pc, #352]	@ (80070cc <_printf_i+0x234>)
 8006f6a:	230a      	movs	r3, #10
 8006f6c:	e011      	b.n	8006f92 <_printf_i+0xfa>
 8006f6e:	6821      	ldr	r1, [r4, #0]
 8006f70:	6833      	ldr	r3, [r6, #0]
 8006f72:	0608      	lsls	r0, r1, #24
 8006f74:	f853 5b04 	ldr.w	r5, [r3], #4
 8006f78:	d402      	bmi.n	8006f80 <_printf_i+0xe8>
 8006f7a:	0649      	lsls	r1, r1, #25
 8006f7c:	bf48      	it	mi
 8006f7e:	b2ad      	uxthmi	r5, r5
 8006f80:	2f6f      	cmp	r7, #111	@ 0x6f
 8006f82:	4852      	ldr	r0, [pc, #328]	@ (80070cc <_printf_i+0x234>)
 8006f84:	6033      	str	r3, [r6, #0]
 8006f86:	bf14      	ite	ne
 8006f88:	230a      	movne	r3, #10
 8006f8a:	2308      	moveq	r3, #8
 8006f8c:	2100      	movs	r1, #0
 8006f8e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8006f92:	6866      	ldr	r6, [r4, #4]
 8006f94:	60a6      	str	r6, [r4, #8]
 8006f96:	2e00      	cmp	r6, #0
 8006f98:	db05      	blt.n	8006fa6 <_printf_i+0x10e>
 8006f9a:	6821      	ldr	r1, [r4, #0]
 8006f9c:	432e      	orrs	r6, r5
 8006f9e:	f021 0104 	bic.w	r1, r1, #4
 8006fa2:	6021      	str	r1, [r4, #0]
 8006fa4:	d04b      	beq.n	800703e <_printf_i+0x1a6>
 8006fa6:	4616      	mov	r6, r2
 8006fa8:	fbb5 f1f3 	udiv	r1, r5, r3
 8006fac:	fb03 5711 	mls	r7, r3, r1, r5
 8006fb0:	5dc7      	ldrb	r7, [r0, r7]
 8006fb2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8006fb6:	462f      	mov	r7, r5
 8006fb8:	42bb      	cmp	r3, r7
 8006fba:	460d      	mov	r5, r1
 8006fbc:	d9f4      	bls.n	8006fa8 <_printf_i+0x110>
 8006fbe:	2b08      	cmp	r3, #8
 8006fc0:	d10b      	bne.n	8006fda <_printf_i+0x142>
 8006fc2:	6823      	ldr	r3, [r4, #0]
 8006fc4:	07df      	lsls	r7, r3, #31
 8006fc6:	d508      	bpl.n	8006fda <_printf_i+0x142>
 8006fc8:	6923      	ldr	r3, [r4, #16]
 8006fca:	6861      	ldr	r1, [r4, #4]
 8006fcc:	4299      	cmp	r1, r3
 8006fce:	bfde      	ittt	le
 8006fd0:	2330      	movle	r3, #48	@ 0x30
 8006fd2:	f806 3c01 	strble.w	r3, [r6, #-1]
 8006fd6:	f106 36ff 	addle.w	r6, r6, #4294967295
 8006fda:	1b92      	subs	r2, r2, r6
 8006fdc:	6122      	str	r2, [r4, #16]
 8006fde:	f8cd a000 	str.w	sl, [sp]
 8006fe2:	464b      	mov	r3, r9
 8006fe4:	aa03      	add	r2, sp, #12
 8006fe6:	4621      	mov	r1, r4
 8006fe8:	4640      	mov	r0, r8
 8006fea:	f7ff fee7 	bl	8006dbc <_printf_common>
 8006fee:	3001      	adds	r0, #1
 8006ff0:	d14a      	bne.n	8007088 <_printf_i+0x1f0>
 8006ff2:	f04f 30ff 	mov.w	r0, #4294967295
 8006ff6:	b004      	add	sp, #16
 8006ff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ffc:	6823      	ldr	r3, [r4, #0]
 8006ffe:	f043 0320 	orr.w	r3, r3, #32
 8007002:	6023      	str	r3, [r4, #0]
 8007004:	4832      	ldr	r0, [pc, #200]	@ (80070d0 <_printf_i+0x238>)
 8007006:	2778      	movs	r7, #120	@ 0x78
 8007008:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800700c:	6823      	ldr	r3, [r4, #0]
 800700e:	6831      	ldr	r1, [r6, #0]
 8007010:	061f      	lsls	r7, r3, #24
 8007012:	f851 5b04 	ldr.w	r5, [r1], #4
 8007016:	d402      	bmi.n	800701e <_printf_i+0x186>
 8007018:	065f      	lsls	r7, r3, #25
 800701a:	bf48      	it	mi
 800701c:	b2ad      	uxthmi	r5, r5
 800701e:	6031      	str	r1, [r6, #0]
 8007020:	07d9      	lsls	r1, r3, #31
 8007022:	bf44      	itt	mi
 8007024:	f043 0320 	orrmi.w	r3, r3, #32
 8007028:	6023      	strmi	r3, [r4, #0]
 800702a:	b11d      	cbz	r5, 8007034 <_printf_i+0x19c>
 800702c:	2310      	movs	r3, #16
 800702e:	e7ad      	b.n	8006f8c <_printf_i+0xf4>
 8007030:	4826      	ldr	r0, [pc, #152]	@ (80070cc <_printf_i+0x234>)
 8007032:	e7e9      	b.n	8007008 <_printf_i+0x170>
 8007034:	6823      	ldr	r3, [r4, #0]
 8007036:	f023 0320 	bic.w	r3, r3, #32
 800703a:	6023      	str	r3, [r4, #0]
 800703c:	e7f6      	b.n	800702c <_printf_i+0x194>
 800703e:	4616      	mov	r6, r2
 8007040:	e7bd      	b.n	8006fbe <_printf_i+0x126>
 8007042:	6833      	ldr	r3, [r6, #0]
 8007044:	6825      	ldr	r5, [r4, #0]
 8007046:	6961      	ldr	r1, [r4, #20]
 8007048:	1d18      	adds	r0, r3, #4
 800704a:	6030      	str	r0, [r6, #0]
 800704c:	062e      	lsls	r6, r5, #24
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	d501      	bpl.n	8007056 <_printf_i+0x1be>
 8007052:	6019      	str	r1, [r3, #0]
 8007054:	e002      	b.n	800705c <_printf_i+0x1c4>
 8007056:	0668      	lsls	r0, r5, #25
 8007058:	d5fb      	bpl.n	8007052 <_printf_i+0x1ba>
 800705a:	8019      	strh	r1, [r3, #0]
 800705c:	2300      	movs	r3, #0
 800705e:	6123      	str	r3, [r4, #16]
 8007060:	4616      	mov	r6, r2
 8007062:	e7bc      	b.n	8006fde <_printf_i+0x146>
 8007064:	6833      	ldr	r3, [r6, #0]
 8007066:	1d1a      	adds	r2, r3, #4
 8007068:	6032      	str	r2, [r6, #0]
 800706a:	681e      	ldr	r6, [r3, #0]
 800706c:	6862      	ldr	r2, [r4, #4]
 800706e:	2100      	movs	r1, #0
 8007070:	4630      	mov	r0, r6
 8007072:	f7f9 f8b5 	bl	80001e0 <memchr>
 8007076:	b108      	cbz	r0, 800707c <_printf_i+0x1e4>
 8007078:	1b80      	subs	r0, r0, r6
 800707a:	6060      	str	r0, [r4, #4]
 800707c:	6863      	ldr	r3, [r4, #4]
 800707e:	6123      	str	r3, [r4, #16]
 8007080:	2300      	movs	r3, #0
 8007082:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007086:	e7aa      	b.n	8006fde <_printf_i+0x146>
 8007088:	6923      	ldr	r3, [r4, #16]
 800708a:	4632      	mov	r2, r6
 800708c:	4649      	mov	r1, r9
 800708e:	4640      	mov	r0, r8
 8007090:	47d0      	blx	sl
 8007092:	3001      	adds	r0, #1
 8007094:	d0ad      	beq.n	8006ff2 <_printf_i+0x15a>
 8007096:	6823      	ldr	r3, [r4, #0]
 8007098:	079b      	lsls	r3, r3, #30
 800709a:	d413      	bmi.n	80070c4 <_printf_i+0x22c>
 800709c:	68e0      	ldr	r0, [r4, #12]
 800709e:	9b03      	ldr	r3, [sp, #12]
 80070a0:	4298      	cmp	r0, r3
 80070a2:	bfb8      	it	lt
 80070a4:	4618      	movlt	r0, r3
 80070a6:	e7a6      	b.n	8006ff6 <_printf_i+0x15e>
 80070a8:	2301      	movs	r3, #1
 80070aa:	4632      	mov	r2, r6
 80070ac:	4649      	mov	r1, r9
 80070ae:	4640      	mov	r0, r8
 80070b0:	47d0      	blx	sl
 80070b2:	3001      	adds	r0, #1
 80070b4:	d09d      	beq.n	8006ff2 <_printf_i+0x15a>
 80070b6:	3501      	adds	r5, #1
 80070b8:	68e3      	ldr	r3, [r4, #12]
 80070ba:	9903      	ldr	r1, [sp, #12]
 80070bc:	1a5b      	subs	r3, r3, r1
 80070be:	42ab      	cmp	r3, r5
 80070c0:	dcf2      	bgt.n	80070a8 <_printf_i+0x210>
 80070c2:	e7eb      	b.n	800709c <_printf_i+0x204>
 80070c4:	2500      	movs	r5, #0
 80070c6:	f104 0619 	add.w	r6, r4, #25
 80070ca:	e7f5      	b.n	80070b8 <_printf_i+0x220>
 80070cc:	0800723d 	.word	0x0800723d
 80070d0:	0800724e 	.word	0x0800724e

080070d4 <memmove>:
 80070d4:	4288      	cmp	r0, r1
 80070d6:	b510      	push	{r4, lr}
 80070d8:	eb01 0402 	add.w	r4, r1, r2
 80070dc:	d902      	bls.n	80070e4 <memmove+0x10>
 80070de:	4284      	cmp	r4, r0
 80070e0:	4623      	mov	r3, r4
 80070e2:	d807      	bhi.n	80070f4 <memmove+0x20>
 80070e4:	1e43      	subs	r3, r0, #1
 80070e6:	42a1      	cmp	r1, r4
 80070e8:	d008      	beq.n	80070fc <memmove+0x28>
 80070ea:	f811 2b01 	ldrb.w	r2, [r1], #1
 80070ee:	f803 2f01 	strb.w	r2, [r3, #1]!
 80070f2:	e7f8      	b.n	80070e6 <memmove+0x12>
 80070f4:	4402      	add	r2, r0
 80070f6:	4601      	mov	r1, r0
 80070f8:	428a      	cmp	r2, r1
 80070fa:	d100      	bne.n	80070fe <memmove+0x2a>
 80070fc:	bd10      	pop	{r4, pc}
 80070fe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007102:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007106:	e7f7      	b.n	80070f8 <memmove+0x24>

08007108 <_sbrk_r>:
 8007108:	b538      	push	{r3, r4, r5, lr}
 800710a:	4d06      	ldr	r5, [pc, #24]	@ (8007124 <_sbrk_r+0x1c>)
 800710c:	2300      	movs	r3, #0
 800710e:	4604      	mov	r4, r0
 8007110:	4608      	mov	r0, r1
 8007112:	602b      	str	r3, [r5, #0]
 8007114:	f7fb fc6c 	bl	80029f0 <_sbrk>
 8007118:	1c43      	adds	r3, r0, #1
 800711a:	d102      	bne.n	8007122 <_sbrk_r+0x1a>
 800711c:	682b      	ldr	r3, [r5, #0]
 800711e:	b103      	cbz	r3, 8007122 <_sbrk_r+0x1a>
 8007120:	6023      	str	r3, [r4, #0]
 8007122:	bd38      	pop	{r3, r4, r5, pc}
 8007124:	20000400 	.word	0x20000400

08007128 <memcpy>:
 8007128:	440a      	add	r2, r1
 800712a:	4291      	cmp	r1, r2
 800712c:	f100 33ff 	add.w	r3, r0, #4294967295
 8007130:	d100      	bne.n	8007134 <memcpy+0xc>
 8007132:	4770      	bx	lr
 8007134:	b510      	push	{r4, lr}
 8007136:	f811 4b01 	ldrb.w	r4, [r1], #1
 800713a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800713e:	4291      	cmp	r1, r2
 8007140:	d1f9      	bne.n	8007136 <memcpy+0xe>
 8007142:	bd10      	pop	{r4, pc}

08007144 <_realloc_r>:
 8007144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007148:	4607      	mov	r7, r0
 800714a:	4614      	mov	r4, r2
 800714c:	460d      	mov	r5, r1
 800714e:	b921      	cbnz	r1, 800715a <_realloc_r+0x16>
 8007150:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007154:	4611      	mov	r1, r2
 8007156:	f7ff bc4d 	b.w	80069f4 <_malloc_r>
 800715a:	b92a      	cbnz	r2, 8007168 <_realloc_r+0x24>
 800715c:	f7ff fbde 	bl	800691c <_free_r>
 8007160:	4625      	mov	r5, r4
 8007162:	4628      	mov	r0, r5
 8007164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007168:	f000 f81a 	bl	80071a0 <_malloc_usable_size_r>
 800716c:	4284      	cmp	r4, r0
 800716e:	4606      	mov	r6, r0
 8007170:	d802      	bhi.n	8007178 <_realloc_r+0x34>
 8007172:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8007176:	d8f4      	bhi.n	8007162 <_realloc_r+0x1e>
 8007178:	4621      	mov	r1, r4
 800717a:	4638      	mov	r0, r7
 800717c:	f7ff fc3a 	bl	80069f4 <_malloc_r>
 8007180:	4680      	mov	r8, r0
 8007182:	b908      	cbnz	r0, 8007188 <_realloc_r+0x44>
 8007184:	4645      	mov	r5, r8
 8007186:	e7ec      	b.n	8007162 <_realloc_r+0x1e>
 8007188:	42b4      	cmp	r4, r6
 800718a:	4622      	mov	r2, r4
 800718c:	4629      	mov	r1, r5
 800718e:	bf28      	it	cs
 8007190:	4632      	movcs	r2, r6
 8007192:	f7ff ffc9 	bl	8007128 <memcpy>
 8007196:	4629      	mov	r1, r5
 8007198:	4638      	mov	r0, r7
 800719a:	f7ff fbbf 	bl	800691c <_free_r>
 800719e:	e7f1      	b.n	8007184 <_realloc_r+0x40>

080071a0 <_malloc_usable_size_r>:
 80071a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80071a4:	1f18      	subs	r0, r3, #4
 80071a6:	2b00      	cmp	r3, #0
 80071a8:	bfbc      	itt	lt
 80071aa:	580b      	ldrlt	r3, [r1, r0]
 80071ac:	18c0      	addlt	r0, r0, r3
 80071ae:	4770      	bx	lr

080071b0 <_init>:
 80071b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071b2:	bf00      	nop
 80071b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80071b6:	bc08      	pop	{r3}
 80071b8:	469e      	mov	lr, r3
 80071ba:	4770      	bx	lr

080071bc <_fini>:
 80071bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071be:	bf00      	nop
 80071c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80071c2:	bc08      	pop	{r3}
 80071c4:	469e      	mov	lr, r3
 80071c6:	4770      	bx	lr
