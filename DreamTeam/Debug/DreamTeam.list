
DreamTeam.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003da4  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000018  08003f2c  08003f2c  00004f2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003f44  08003f44  00005010  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08003f44  08003f44  00004f44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003f4c  08003f4c  00005010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003f4c  08003f4c  00004f4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08003f50  08003f50  00004f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000010  20000000  08003f54  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00005010  2**0
                  CONTENTS
 10 .bss          000001b8  20000010  20000010  00005010  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  00005010  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00005010  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000a9a2  00000000  00000000  00005040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001b61  00000000  00000000  0000f9e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b80  00000000  00000000  00011548  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000008e5  00000000  00000000  000120c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00021362  00000000  00000000  000129ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000cc8d  00000000  00000000  00033d0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d2030  00000000  00000000  0004099c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  001129cc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003048  00000000  00000000  00112a10  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004f  00000000  00000000  00115a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000010 	.word	0x20000010
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08003f14 	.word	0x08003f14

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000014 	.word	0x20000014
 80001c4:	08003f14 	.word	0x08003f14

080001c8 <__aeabi_uldivmod>:
 80001c8:	b953      	cbnz	r3, 80001e0 <__aeabi_uldivmod+0x18>
 80001ca:	b94a      	cbnz	r2, 80001e0 <__aeabi_uldivmod+0x18>
 80001cc:	2900      	cmp	r1, #0
 80001ce:	bf08      	it	eq
 80001d0:	2800      	cmpeq	r0, #0
 80001d2:	bf1c      	itt	ne
 80001d4:	f04f 31ff 	movne.w	r1, #4294967295
 80001d8:	f04f 30ff 	movne.w	r0, #4294967295
 80001dc:	f000 b988 	b.w	80004f0 <__aeabi_idiv0>
 80001e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001e8:	f000 f806 	bl	80001f8 <__udivmoddi4>
 80001ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001f4:	b004      	add	sp, #16
 80001f6:	4770      	bx	lr

080001f8 <__udivmoddi4>:
 80001f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80001fc:	9d08      	ldr	r5, [sp, #32]
 80001fe:	468e      	mov	lr, r1
 8000200:	4604      	mov	r4, r0
 8000202:	4688      	mov	r8, r1
 8000204:	2b00      	cmp	r3, #0
 8000206:	d14a      	bne.n	800029e <__udivmoddi4+0xa6>
 8000208:	428a      	cmp	r2, r1
 800020a:	4617      	mov	r7, r2
 800020c:	d962      	bls.n	80002d4 <__udivmoddi4+0xdc>
 800020e:	fab2 f682 	clz	r6, r2
 8000212:	b14e      	cbz	r6, 8000228 <__udivmoddi4+0x30>
 8000214:	f1c6 0320 	rsb	r3, r6, #32
 8000218:	fa01 f806 	lsl.w	r8, r1, r6
 800021c:	fa20 f303 	lsr.w	r3, r0, r3
 8000220:	40b7      	lsls	r7, r6
 8000222:	ea43 0808 	orr.w	r8, r3, r8
 8000226:	40b4      	lsls	r4, r6
 8000228:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800022c:	fa1f fc87 	uxth.w	ip, r7
 8000230:	fbb8 f1fe 	udiv	r1, r8, lr
 8000234:	0c23      	lsrs	r3, r4, #16
 8000236:	fb0e 8811 	mls	r8, lr, r1, r8
 800023a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800023e:	fb01 f20c 	mul.w	r2, r1, ip
 8000242:	429a      	cmp	r2, r3
 8000244:	d909      	bls.n	800025a <__udivmoddi4+0x62>
 8000246:	18fb      	adds	r3, r7, r3
 8000248:	f101 30ff 	add.w	r0, r1, #4294967295
 800024c:	f080 80ea 	bcs.w	8000424 <__udivmoddi4+0x22c>
 8000250:	429a      	cmp	r2, r3
 8000252:	f240 80e7 	bls.w	8000424 <__udivmoddi4+0x22c>
 8000256:	3902      	subs	r1, #2
 8000258:	443b      	add	r3, r7
 800025a:	1a9a      	subs	r2, r3, r2
 800025c:	b2a3      	uxth	r3, r4
 800025e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000262:	fb0e 2210 	mls	r2, lr, r0, r2
 8000266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800026a:	fb00 fc0c 	mul.w	ip, r0, ip
 800026e:	459c      	cmp	ip, r3
 8000270:	d909      	bls.n	8000286 <__udivmoddi4+0x8e>
 8000272:	18fb      	adds	r3, r7, r3
 8000274:	f100 32ff 	add.w	r2, r0, #4294967295
 8000278:	f080 80d6 	bcs.w	8000428 <__udivmoddi4+0x230>
 800027c:	459c      	cmp	ip, r3
 800027e:	f240 80d3 	bls.w	8000428 <__udivmoddi4+0x230>
 8000282:	443b      	add	r3, r7
 8000284:	3802      	subs	r0, #2
 8000286:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800028a:	eba3 030c 	sub.w	r3, r3, ip
 800028e:	2100      	movs	r1, #0
 8000290:	b11d      	cbz	r5, 800029a <__udivmoddi4+0xa2>
 8000292:	40f3      	lsrs	r3, r6
 8000294:	2200      	movs	r2, #0
 8000296:	e9c5 3200 	strd	r3, r2, [r5]
 800029a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800029e:	428b      	cmp	r3, r1
 80002a0:	d905      	bls.n	80002ae <__udivmoddi4+0xb6>
 80002a2:	b10d      	cbz	r5, 80002a8 <__udivmoddi4+0xb0>
 80002a4:	e9c5 0100 	strd	r0, r1, [r5]
 80002a8:	2100      	movs	r1, #0
 80002aa:	4608      	mov	r0, r1
 80002ac:	e7f5      	b.n	800029a <__udivmoddi4+0xa2>
 80002ae:	fab3 f183 	clz	r1, r3
 80002b2:	2900      	cmp	r1, #0
 80002b4:	d146      	bne.n	8000344 <__udivmoddi4+0x14c>
 80002b6:	4573      	cmp	r3, lr
 80002b8:	d302      	bcc.n	80002c0 <__udivmoddi4+0xc8>
 80002ba:	4282      	cmp	r2, r0
 80002bc:	f200 8105 	bhi.w	80004ca <__udivmoddi4+0x2d2>
 80002c0:	1a84      	subs	r4, r0, r2
 80002c2:	eb6e 0203 	sbc.w	r2, lr, r3
 80002c6:	2001      	movs	r0, #1
 80002c8:	4690      	mov	r8, r2
 80002ca:	2d00      	cmp	r5, #0
 80002cc:	d0e5      	beq.n	800029a <__udivmoddi4+0xa2>
 80002ce:	e9c5 4800 	strd	r4, r8, [r5]
 80002d2:	e7e2      	b.n	800029a <__udivmoddi4+0xa2>
 80002d4:	2a00      	cmp	r2, #0
 80002d6:	f000 8090 	beq.w	80003fa <__udivmoddi4+0x202>
 80002da:	fab2 f682 	clz	r6, r2
 80002de:	2e00      	cmp	r6, #0
 80002e0:	f040 80a4 	bne.w	800042c <__udivmoddi4+0x234>
 80002e4:	1a8a      	subs	r2, r1, r2
 80002e6:	0c03      	lsrs	r3, r0, #16
 80002e8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002ec:	b280      	uxth	r0, r0
 80002ee:	b2bc      	uxth	r4, r7
 80002f0:	2101      	movs	r1, #1
 80002f2:	fbb2 fcfe 	udiv	ip, r2, lr
 80002f6:	fb0e 221c 	mls	r2, lr, ip, r2
 80002fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80002fe:	fb04 f20c 	mul.w	r2, r4, ip
 8000302:	429a      	cmp	r2, r3
 8000304:	d907      	bls.n	8000316 <__udivmoddi4+0x11e>
 8000306:	18fb      	adds	r3, r7, r3
 8000308:	f10c 38ff 	add.w	r8, ip, #4294967295
 800030c:	d202      	bcs.n	8000314 <__udivmoddi4+0x11c>
 800030e:	429a      	cmp	r2, r3
 8000310:	f200 80e0 	bhi.w	80004d4 <__udivmoddi4+0x2dc>
 8000314:	46c4      	mov	ip, r8
 8000316:	1a9b      	subs	r3, r3, r2
 8000318:	fbb3 f2fe 	udiv	r2, r3, lr
 800031c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000320:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000324:	fb02 f404 	mul.w	r4, r2, r4
 8000328:	429c      	cmp	r4, r3
 800032a:	d907      	bls.n	800033c <__udivmoddi4+0x144>
 800032c:	18fb      	adds	r3, r7, r3
 800032e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000332:	d202      	bcs.n	800033a <__udivmoddi4+0x142>
 8000334:	429c      	cmp	r4, r3
 8000336:	f200 80ca 	bhi.w	80004ce <__udivmoddi4+0x2d6>
 800033a:	4602      	mov	r2, r0
 800033c:	1b1b      	subs	r3, r3, r4
 800033e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000342:	e7a5      	b.n	8000290 <__udivmoddi4+0x98>
 8000344:	f1c1 0620 	rsb	r6, r1, #32
 8000348:	408b      	lsls	r3, r1
 800034a:	fa22 f706 	lsr.w	r7, r2, r6
 800034e:	431f      	orrs	r7, r3
 8000350:	fa0e f401 	lsl.w	r4, lr, r1
 8000354:	fa20 f306 	lsr.w	r3, r0, r6
 8000358:	fa2e fe06 	lsr.w	lr, lr, r6
 800035c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000360:	4323      	orrs	r3, r4
 8000362:	fa00 f801 	lsl.w	r8, r0, r1
 8000366:	fa1f fc87 	uxth.w	ip, r7
 800036a:	fbbe f0f9 	udiv	r0, lr, r9
 800036e:	0c1c      	lsrs	r4, r3, #16
 8000370:	fb09 ee10 	mls	lr, r9, r0, lr
 8000374:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000378:	fb00 fe0c 	mul.w	lr, r0, ip
 800037c:	45a6      	cmp	lr, r4
 800037e:	fa02 f201 	lsl.w	r2, r2, r1
 8000382:	d909      	bls.n	8000398 <__udivmoddi4+0x1a0>
 8000384:	193c      	adds	r4, r7, r4
 8000386:	f100 3aff 	add.w	sl, r0, #4294967295
 800038a:	f080 809c 	bcs.w	80004c6 <__udivmoddi4+0x2ce>
 800038e:	45a6      	cmp	lr, r4
 8000390:	f240 8099 	bls.w	80004c6 <__udivmoddi4+0x2ce>
 8000394:	3802      	subs	r0, #2
 8000396:	443c      	add	r4, r7
 8000398:	eba4 040e 	sub.w	r4, r4, lr
 800039c:	fa1f fe83 	uxth.w	lr, r3
 80003a0:	fbb4 f3f9 	udiv	r3, r4, r9
 80003a4:	fb09 4413 	mls	r4, r9, r3, r4
 80003a8:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 80003ac:	fb03 fc0c 	mul.w	ip, r3, ip
 80003b0:	45a4      	cmp	ip, r4
 80003b2:	d908      	bls.n	80003c6 <__udivmoddi4+0x1ce>
 80003b4:	193c      	adds	r4, r7, r4
 80003b6:	f103 3eff 	add.w	lr, r3, #4294967295
 80003ba:	f080 8082 	bcs.w	80004c2 <__udivmoddi4+0x2ca>
 80003be:	45a4      	cmp	ip, r4
 80003c0:	d97f      	bls.n	80004c2 <__udivmoddi4+0x2ca>
 80003c2:	3b02      	subs	r3, #2
 80003c4:	443c      	add	r4, r7
 80003c6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80003ca:	eba4 040c 	sub.w	r4, r4, ip
 80003ce:	fba0 ec02 	umull	lr, ip, r0, r2
 80003d2:	4564      	cmp	r4, ip
 80003d4:	4673      	mov	r3, lr
 80003d6:	46e1      	mov	r9, ip
 80003d8:	d362      	bcc.n	80004a0 <__udivmoddi4+0x2a8>
 80003da:	d05f      	beq.n	800049c <__udivmoddi4+0x2a4>
 80003dc:	b15d      	cbz	r5, 80003f6 <__udivmoddi4+0x1fe>
 80003de:	ebb8 0203 	subs.w	r2, r8, r3
 80003e2:	eb64 0409 	sbc.w	r4, r4, r9
 80003e6:	fa04 f606 	lsl.w	r6, r4, r6
 80003ea:	fa22 f301 	lsr.w	r3, r2, r1
 80003ee:	431e      	orrs	r6, r3
 80003f0:	40cc      	lsrs	r4, r1
 80003f2:	e9c5 6400 	strd	r6, r4, [r5]
 80003f6:	2100      	movs	r1, #0
 80003f8:	e74f      	b.n	800029a <__udivmoddi4+0xa2>
 80003fa:	fbb1 fcf2 	udiv	ip, r1, r2
 80003fe:	0c01      	lsrs	r1, r0, #16
 8000400:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000404:	b280      	uxth	r0, r0
 8000406:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 800040a:	463b      	mov	r3, r7
 800040c:	4638      	mov	r0, r7
 800040e:	463c      	mov	r4, r7
 8000410:	46b8      	mov	r8, r7
 8000412:	46be      	mov	lr, r7
 8000414:	2620      	movs	r6, #32
 8000416:	fbb1 f1f7 	udiv	r1, r1, r7
 800041a:	eba2 0208 	sub.w	r2, r2, r8
 800041e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000422:	e766      	b.n	80002f2 <__udivmoddi4+0xfa>
 8000424:	4601      	mov	r1, r0
 8000426:	e718      	b.n	800025a <__udivmoddi4+0x62>
 8000428:	4610      	mov	r0, r2
 800042a:	e72c      	b.n	8000286 <__udivmoddi4+0x8e>
 800042c:	f1c6 0220 	rsb	r2, r6, #32
 8000430:	fa2e f302 	lsr.w	r3, lr, r2
 8000434:	40b7      	lsls	r7, r6
 8000436:	40b1      	lsls	r1, r6
 8000438:	fa20 f202 	lsr.w	r2, r0, r2
 800043c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000440:	430a      	orrs	r2, r1
 8000442:	fbb3 f8fe 	udiv	r8, r3, lr
 8000446:	b2bc      	uxth	r4, r7
 8000448:	fb0e 3318 	mls	r3, lr, r8, r3
 800044c:	0c11      	lsrs	r1, r2, #16
 800044e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000452:	fb08 f904 	mul.w	r9, r8, r4
 8000456:	40b0      	lsls	r0, r6
 8000458:	4589      	cmp	r9, r1
 800045a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 800045e:	b280      	uxth	r0, r0
 8000460:	d93e      	bls.n	80004e0 <__udivmoddi4+0x2e8>
 8000462:	1879      	adds	r1, r7, r1
 8000464:	f108 3cff 	add.w	ip, r8, #4294967295
 8000468:	d201      	bcs.n	800046e <__udivmoddi4+0x276>
 800046a:	4589      	cmp	r9, r1
 800046c:	d81f      	bhi.n	80004ae <__udivmoddi4+0x2b6>
 800046e:	eba1 0109 	sub.w	r1, r1, r9
 8000472:	fbb1 f9fe 	udiv	r9, r1, lr
 8000476:	fb09 f804 	mul.w	r8, r9, r4
 800047a:	fb0e 1119 	mls	r1, lr, r9, r1
 800047e:	b292      	uxth	r2, r2
 8000480:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000484:	4542      	cmp	r2, r8
 8000486:	d229      	bcs.n	80004dc <__udivmoddi4+0x2e4>
 8000488:	18ba      	adds	r2, r7, r2
 800048a:	f109 31ff 	add.w	r1, r9, #4294967295
 800048e:	d2c4      	bcs.n	800041a <__udivmoddi4+0x222>
 8000490:	4542      	cmp	r2, r8
 8000492:	d2c2      	bcs.n	800041a <__udivmoddi4+0x222>
 8000494:	f1a9 0102 	sub.w	r1, r9, #2
 8000498:	443a      	add	r2, r7
 800049a:	e7be      	b.n	800041a <__udivmoddi4+0x222>
 800049c:	45f0      	cmp	r8, lr
 800049e:	d29d      	bcs.n	80003dc <__udivmoddi4+0x1e4>
 80004a0:	ebbe 0302 	subs.w	r3, lr, r2
 80004a4:	eb6c 0c07 	sbc.w	ip, ip, r7
 80004a8:	3801      	subs	r0, #1
 80004aa:	46e1      	mov	r9, ip
 80004ac:	e796      	b.n	80003dc <__udivmoddi4+0x1e4>
 80004ae:	eba7 0909 	sub.w	r9, r7, r9
 80004b2:	4449      	add	r1, r9
 80004b4:	f1a8 0c02 	sub.w	ip, r8, #2
 80004b8:	fbb1 f9fe 	udiv	r9, r1, lr
 80004bc:	fb09 f804 	mul.w	r8, r9, r4
 80004c0:	e7db      	b.n	800047a <__udivmoddi4+0x282>
 80004c2:	4673      	mov	r3, lr
 80004c4:	e77f      	b.n	80003c6 <__udivmoddi4+0x1ce>
 80004c6:	4650      	mov	r0, sl
 80004c8:	e766      	b.n	8000398 <__udivmoddi4+0x1a0>
 80004ca:	4608      	mov	r0, r1
 80004cc:	e6fd      	b.n	80002ca <__udivmoddi4+0xd2>
 80004ce:	443b      	add	r3, r7
 80004d0:	3a02      	subs	r2, #2
 80004d2:	e733      	b.n	800033c <__udivmoddi4+0x144>
 80004d4:	f1ac 0c02 	sub.w	ip, ip, #2
 80004d8:	443b      	add	r3, r7
 80004da:	e71c      	b.n	8000316 <__udivmoddi4+0x11e>
 80004dc:	4649      	mov	r1, r9
 80004de:	e79c      	b.n	800041a <__udivmoddi4+0x222>
 80004e0:	eba1 0109 	sub.w	r1, r1, r9
 80004e4:	46c4      	mov	ip, r8
 80004e6:	fbb1 f9fe 	udiv	r9, r1, lr
 80004ea:	fb09 f804 	mul.w	r8, r9, r4
 80004ee:	e7c4      	b.n	800047a <__udivmoddi4+0x282>

080004f0 <__aeabi_idiv0>:
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop

080004f4 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 80004f4:	b598      	push	{r3, r4, r7, lr}
 80004f6:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80004f8:	f000 ff08 	bl	800130c <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80004fc:	f000 f90e 	bl	800071c <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8000500:	f000 fa78 	bl	80009f4 <MX_GPIO_Init>
	MX_DMA_Init();
 8000504:	f000 fa56 	bl	80009b4 <MX_DMA_Init>
	MX_ADC1_Init();
 8000508:	f000 f972 	bl	80007f0 <MX_ADC1_Init>
	MX_TIM3_Init();
 800050c:	f000 f9d0 	bl	80008b0 <MX_TIM3_Init>
	/* USER CODE BEGIN 2 */

	HAL_ADC_Start_DMA(&hadc1, (uint32_t*) dma_buffer, 64);
 8000510:	2240      	movs	r2, #64	@ 0x40
 8000512:	4976      	ldr	r1, [pc, #472]	@ (80006ec <main+0x1f8>)
 8000514:	4876      	ldr	r0, [pc, #472]	@ (80006f0 <main+0x1fc>)
 8000516:	f000 ffd3 	bl	80014c0 <HAL_ADC_Start_DMA>

	peso[15] = 0;  //inicialización de pesos
 800051a:	4b76      	ldr	r3, [pc, #472]	@ (80006f4 <main+0x200>)
 800051c:	2200      	movs	r2, #0
 800051e:	73da      	strb	r2, [r3, #15]
	peso[11] = peso[14] = 1;
 8000520:	4b74      	ldr	r3, [pc, #464]	@ (80006f4 <main+0x200>)
 8000522:	2201      	movs	r2, #1
 8000524:	739a      	strb	r2, [r3, #14]
 8000526:	4b73      	ldr	r3, [pc, #460]	@ (80006f4 <main+0x200>)
 8000528:	7b9a      	ldrb	r2, [r3, #14]
 800052a:	4b72      	ldr	r3, [pc, #456]	@ (80006f4 <main+0x200>)
 800052c:	72da      	strb	r2, [r3, #11]
	peso[7] = peso[10] = peso[13] = 2;
 800052e:	4b71      	ldr	r3, [pc, #452]	@ (80006f4 <main+0x200>)
 8000530:	2202      	movs	r2, #2
 8000532:	735a      	strb	r2, [r3, #13]
 8000534:	4b6f      	ldr	r3, [pc, #444]	@ (80006f4 <main+0x200>)
 8000536:	7b5a      	ldrb	r2, [r3, #13]
 8000538:	4b6e      	ldr	r3, [pc, #440]	@ (80006f4 <main+0x200>)
 800053a:	729a      	strb	r2, [r3, #10]
 800053c:	4b6d      	ldr	r3, [pc, #436]	@ (80006f4 <main+0x200>)
 800053e:	7a9a      	ldrb	r2, [r3, #10]
 8000540:	4b6c      	ldr	r3, [pc, #432]	@ (80006f4 <main+0x200>)
 8000542:	71da      	strb	r2, [r3, #7]
	peso[3] = peso[6] = peso[9] = peso[12] = 3;
 8000544:	4b6b      	ldr	r3, [pc, #428]	@ (80006f4 <main+0x200>)
 8000546:	2203      	movs	r2, #3
 8000548:	731a      	strb	r2, [r3, #12]
 800054a:	4b6a      	ldr	r3, [pc, #424]	@ (80006f4 <main+0x200>)
 800054c:	7b1a      	ldrb	r2, [r3, #12]
 800054e:	4b69      	ldr	r3, [pc, #420]	@ (80006f4 <main+0x200>)
 8000550:	725a      	strb	r2, [r3, #9]
 8000552:	4b68      	ldr	r3, [pc, #416]	@ (80006f4 <main+0x200>)
 8000554:	7a5a      	ldrb	r2, [r3, #9]
 8000556:	4b67      	ldr	r3, [pc, #412]	@ (80006f4 <main+0x200>)
 8000558:	719a      	strb	r2, [r3, #6]
 800055a:	4b66      	ldr	r3, [pc, #408]	@ (80006f4 <main+0x200>)
 800055c:	799a      	ldrb	r2, [r3, #6]
 800055e:	4b65      	ldr	r3, [pc, #404]	@ (80006f4 <main+0x200>)
 8000560:	70da      	strb	r2, [r3, #3]
	peso[2] = peso[5] = peso[8] = 4;
 8000562:	4b64      	ldr	r3, [pc, #400]	@ (80006f4 <main+0x200>)
 8000564:	2204      	movs	r2, #4
 8000566:	721a      	strb	r2, [r3, #8]
 8000568:	4b62      	ldr	r3, [pc, #392]	@ (80006f4 <main+0x200>)
 800056a:	7a1a      	ldrb	r2, [r3, #8]
 800056c:	4b61      	ldr	r3, [pc, #388]	@ (80006f4 <main+0x200>)
 800056e:	715a      	strb	r2, [r3, #5]
 8000570:	4b60      	ldr	r3, [pc, #384]	@ (80006f4 <main+0x200>)
 8000572:	795a      	ldrb	r2, [r3, #5]
 8000574:	4b5f      	ldr	r3, [pc, #380]	@ (80006f4 <main+0x200>)
 8000576:	709a      	strb	r2, [r3, #2]
	peso[1] = peso[4] = 5;
 8000578:	4b5e      	ldr	r3, [pc, #376]	@ (80006f4 <main+0x200>)
 800057a:	2205      	movs	r2, #5
 800057c:	711a      	strb	r2, [r3, #4]
 800057e:	4b5d      	ldr	r3, [pc, #372]	@ (80006f4 <main+0x200>)
 8000580:	791a      	ldrb	r2, [r3, #4]
 8000582:	4b5c      	ldr	r3, [pc, #368]	@ (80006f4 <main+0x200>)
 8000584:	705a      	strb	r2, [r3, #1]
	peso[0] = 6;
 8000586:	4b5b      	ldr	r3, [pc, #364]	@ (80006f4 <main+0x200>)
 8000588:	2206      	movs	r2, #6
 800058a:	701a      	strb	r2, [r3, #0]

	//paredes de cada casilla (8=pared en Norte, 4=pared en Este, 2=pared en Sur, 1=pared en Oeste)
	pared[0] = 6; //se suma sur y este
 800058c:	4b5a      	ldr	r3, [pc, #360]	@ (80006f8 <main+0x204>)
 800058e:	2206      	movs	r2, #6
 8000590:	701a      	strb	r2, [r3, #0]
	pared[1] = pared[2] = 2; //solo sur
 8000592:	4b59      	ldr	r3, [pc, #356]	@ (80006f8 <main+0x204>)
 8000594:	2202      	movs	r2, #2
 8000596:	709a      	strb	r2, [r3, #2]
 8000598:	4b57      	ldr	r3, [pc, #348]	@ (80006f8 <main+0x204>)
 800059a:	789a      	ldrb	r2, [r3, #2]
 800059c:	4b56      	ldr	r3, [pc, #344]	@ (80006f8 <main+0x204>)
 800059e:	705a      	strb	r2, [r3, #1]
	pared[3] = 3;  //se suma sur y oeste
 80005a0:	4b55      	ldr	r3, [pc, #340]	@ (80006f8 <main+0x204>)
 80005a2:	2203      	movs	r2, #3
 80005a4:	70da      	strb	r2, [r3, #3]
	pared[7] = pared[11] = 1; // solo oeste
 80005a6:	4b54      	ldr	r3, [pc, #336]	@ (80006f8 <main+0x204>)
 80005a8:	2201      	movs	r2, #1
 80005aa:	72da      	strb	r2, [r3, #11]
 80005ac:	4b52      	ldr	r3, [pc, #328]	@ (80006f8 <main+0x204>)
 80005ae:	7ada      	ldrb	r2, [r3, #11]
 80005b0:	4b51      	ldr	r3, [pc, #324]	@ (80006f8 <main+0x204>)
 80005b2:	71da      	strb	r2, [r3, #7]
	pared[15] = 9;  //se suma norte y oeste
 80005b4:	4b50      	ldr	r3, [pc, #320]	@ (80006f8 <main+0x204>)
 80005b6:	2209      	movs	r2, #9
 80005b8:	73da      	strb	r2, [r3, #15]
	pared[14] = pared[13] = 8; //solo norte
 80005ba:	4b4f      	ldr	r3, [pc, #316]	@ (80006f8 <main+0x204>)
 80005bc:	2208      	movs	r2, #8
 80005be:	735a      	strb	r2, [r3, #13]
 80005c0:	4b4d      	ldr	r3, [pc, #308]	@ (80006f8 <main+0x204>)
 80005c2:	7b5a      	ldrb	r2, [r3, #13]
 80005c4:	4b4c      	ldr	r3, [pc, #304]	@ (80006f8 <main+0x204>)
 80005c6:	739a      	strb	r2, [r3, #14]
	pared[12] = 12; //se suma mprte y este
 80005c8:	4b4b      	ldr	r3, [pc, #300]	@ (80006f8 <main+0x204>)
 80005ca:	220c      	movs	r2, #12
 80005cc:	731a      	strb	r2, [r3, #12]
	pared[4] = pared[8] = 4; //solo este
 80005ce:	4b4a      	ldr	r3, [pc, #296]	@ (80006f8 <main+0x204>)
 80005d0:	2204      	movs	r2, #4
 80005d2:	721a      	strb	r2, [r3, #8]
 80005d4:	4b48      	ldr	r3, [pc, #288]	@ (80006f8 <main+0x204>)
 80005d6:	7a1a      	ldrb	r2, [r3, #8]
 80005d8:	4b47      	ldr	r3, [pc, #284]	@ (80006f8 <main+0x204>)
 80005da:	711a      	strb	r2, [r3, #4]
	pared[5] = pared[6] = pared[9] = pared[10] = 0;
 80005dc:	4b46      	ldr	r3, [pc, #280]	@ (80006f8 <main+0x204>)
 80005de:	2200      	movs	r2, #0
 80005e0:	729a      	strb	r2, [r3, #10]
 80005e2:	4b45      	ldr	r3, [pc, #276]	@ (80006f8 <main+0x204>)
 80005e4:	7a9a      	ldrb	r2, [r3, #10]
 80005e6:	4b44      	ldr	r3, [pc, #272]	@ (80006f8 <main+0x204>)
 80005e8:	725a      	strb	r2, [r3, #9]
 80005ea:	4b43      	ldr	r3, [pc, #268]	@ (80006f8 <main+0x204>)
 80005ec:	7a5a      	ldrb	r2, [r3, #9]
 80005ee:	4b42      	ldr	r3, [pc, #264]	@ (80006f8 <main+0x204>)
 80005f0:	719a      	strb	r2, [r3, #6]
 80005f2:	4b41      	ldr	r3, [pc, #260]	@ (80006f8 <main+0x204>)
 80005f4:	799a      	ldrb	r2, [r3, #6]
 80005f6:	4b40      	ldr	r3, [pc, #256]	@ (80006f8 <main+0x204>)
 80005f8:	715a      	strb	r2, [r3, #5]

	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET); // INICIALIZACION EN AVANZAR
 80005fa:	2200      	movs	r2, #0
 80005fc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000600:	483e      	ldr	r0, [pc, #248]	@ (80006fc <main+0x208>)
 8000602:	f002 f951 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8000606:	2201      	movs	r2, #1
 8000608:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800060c:	483b      	ldr	r0, [pc, #236]	@ (80006fc <main+0x208>)
 800060e:	f002 f94b 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8000612:	2200      	movs	r2, #0
 8000614:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000618:	4838      	ldr	r0, [pc, #224]	@ (80006fc <main+0x208>)
 800061a:	f002 f945 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 800061e:	2201      	movs	r2, #1
 8000620:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000624:	4835      	ldr	r0, [pc, #212]	@ (80006fc <main+0x208>)
 8000626:	f002 f93f 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3); // Inicio de la modulación PWM, rueda izquierda
 800062a:	2108      	movs	r1, #8
 800062c:	4834      	ldr	r0, [pc, #208]	@ (8000700 <main+0x20c>)
 800062e:	f002 fe61 	bl	80032f4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4); // Inicio de la modulación PWM, rueda derecha
 8000632:	210c      	movs	r1, #12
 8000634:	4832      	ldr	r0, [pc, #200]	@ (8000700 <main+0x20c>)
 8000636:	f002 fe5d 	bl	80032f4 <HAL_TIM_PWM_Start>
	TIM3->CCR3 = v_media; // rueda a velocidad media (condigurable)
 800063a:	4b32      	ldr	r3, [pc, #200]	@ (8000704 <main+0x210>)
 800063c:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000640:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4 = v_media; // rueda a velocidad media
 8000642:	4b30      	ldr	r3, [pc, #192]	@ (8000704 <main+0x210>)
 8000644:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000648:	641a      	str	r2, [r3, #64]	@ 0x40

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1) {
		/* USER CODE END WHILE */
		ejecutarGiro(GIRO_180);
 800064a:	2003      	movs	r0, #3
 800064c:	f000 fbbc 	bl	8000dc8 <ejecutarGiro>
		correccion_avanzar();
 8000650:	f000 fb24 	bl	8000c9c <correccion_avanzar>
		HAL_Delay(1500);
 8000654:	f240 50dc 	movw	r0, #1500	@ 0x5dc
 8000658:	f000 feca 	bl	80013f0 <HAL_Delay>
		avanzar();
 800065c:	f000 fb3c 	bl	8000cd8 <avanzar>
		if (!verificar_sensor()) { //cambio de casilla
 8000660:	f000 fc5a 	bl	8000f18 <verificar_sensor>
 8000664:	4603      	mov	r3, r0
 8000666:	f083 0301 	eor.w	r3, r3, #1
 800066a:	b2db      	uxtb	r3, r3
 800066c:	2b00      	cmp	r3, #0
 800066e:	d02c      	beq.n	80006ca <main+0x1d6>
			ubicacion = actualizo_ubicacion(ubicacion, orientacion_actual);
 8000670:	4b25      	ldr	r3, [pc, #148]	@ (8000708 <main+0x214>)
 8000672:	781b      	ldrb	r3, [r3, #0]
 8000674:	4a25      	ldr	r2, [pc, #148]	@ (800070c <main+0x218>)
 8000676:	7812      	ldrb	r2, [r2, #0]
 8000678:	4611      	mov	r1, r2
 800067a:	4618      	mov	r0, r3
 800067c:	f000 fa8e 	bl	8000b9c <actualizo_ubicacion>
 8000680:	4603      	mov	r3, r0
 8000682:	461a      	mov	r2, r3
 8000684:	4b20      	ldr	r3, [pc, #128]	@ (8000708 <main+0x214>)
 8000686:	701a      	strb	r2, [r3, #0]
			//aca estaria el metodo de llenado q me da casilla_n
			orientacion_n = obtener_orientacion_N(ubicacion, casilla_n);
 8000688:	4b1f      	ldr	r3, [pc, #124]	@ (8000708 <main+0x214>)
 800068a:	781b      	ldrb	r3, [r3, #0]
 800068c:	4a20      	ldr	r2, [pc, #128]	@ (8000710 <main+0x21c>)
 800068e:	7812      	ldrb	r2, [r2, #0]
 8000690:	4611      	mov	r1, r2
 8000692:	4618      	mov	r0, r3
 8000694:	f000 fa24 	bl	8000ae0 <obtener_orientacion_N>
 8000698:	4603      	mov	r3, r0
 800069a:	461a      	mov	r2, r3
 800069c:	4b1d      	ldr	r3, [pc, #116]	@ (8000714 <main+0x220>)
 800069e:	701a      	strb	r2, [r3, #0]
			giro = obtenerGiro(orientacion_actual, orientacion_n);
 80006a0:	4b1a      	ldr	r3, [pc, #104]	@ (800070c <main+0x218>)
 80006a2:	781b      	ldrb	r3, [r3, #0]
 80006a4:	4a1b      	ldr	r2, [pc, #108]	@ (8000714 <main+0x220>)
 80006a6:	7812      	ldrb	r2, [r2, #0]
 80006a8:	4611      	mov	r1, r2
 80006aa:	4618      	mov	r0, r3
 80006ac:	f000 fa44 	bl	8000b38 <obtenerGiro>
 80006b0:	4603      	mov	r3, r0
 80006b2:	461a      	mov	r2, r3
 80006b4:	4b18      	ldr	r3, [pc, #96]	@ (8000718 <main+0x224>)
 80006b6:	701a      	strb	r2, [r3, #0]
			orientacion_actual = orientacion_n;  //actualizo la orientacion
 80006b8:	4b16      	ldr	r3, [pc, #88]	@ (8000714 <main+0x220>)
 80006ba:	781a      	ldrb	r2, [r3, #0]
 80006bc:	4b13      	ldr	r3, [pc, #76]	@ (800070c <main+0x218>)
 80006be:	701a      	strb	r2, [r3, #0]
			ejecutarGiro(giro);
 80006c0:	4b15      	ldr	r3, [pc, #84]	@ (8000718 <main+0x224>)
 80006c2:	781b      	ldrb	r3, [r3, #0]
 80006c4:	4618      	mov	r0, r3
 80006c6:	f000 fb7f 	bl	8000dc8 <ejecutarGiro>
		}

		//rellenado
		pared[ubicacion] = actualizo_pared(pared, ubicacion,
 80006ca:	4b0f      	ldr	r3, [pc, #60]	@ (8000708 <main+0x214>)
 80006cc:	781b      	ldrb	r3, [r3, #0]
 80006ce:	4a0f      	ldr	r2, [pc, #60]	@ (800070c <main+0x218>)
 80006d0:	7812      	ldrb	r2, [r2, #0]
 80006d2:	490d      	ldr	r1, [pc, #52]	@ (8000708 <main+0x214>)
 80006d4:	7809      	ldrb	r1, [r1, #0]
 80006d6:	460c      	mov	r4, r1
 80006d8:	4619      	mov	r1, r3
 80006da:	4807      	ldr	r0, [pc, #28]	@ (80006f8 <main+0x204>)
 80006dc:	f000 fc4c 	bl	8000f78 <actualizo_pared>
 80006e0:	4603      	mov	r3, r0
 80006e2:	461a      	mov	r2, r3
 80006e4:	4b04      	ldr	r3, [pc, #16]	@ (80006f8 <main+0x204>)
 80006e6:	551a      	strb	r2, [r3, r4]
		ejecutarGiro(GIRO_180);
 80006e8:	e7af      	b.n	800064a <main+0x156>
 80006ea:	bf00      	nop
 80006ec:	20000140 	.word	0x20000140
 80006f0:	2000002c 	.word	0x2000002c
 80006f4:	20000120 	.word	0x20000120
 80006f8:	20000130 	.word	0x20000130
 80006fc:	40020400 	.word	0x40020400
 8000700:	200000d4 	.word	0x200000d4
 8000704:	40000400 	.word	0x40000400
 8000708:	2000011c 	.word	0x2000011c
 800070c:	2000011d 	.word	0x2000011d
 8000710:	20000000 	.word	0x20000000
 8000714:	2000011e 	.word	0x2000011e
 8000718:	2000011f 	.word	0x2000011f

0800071c <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 800071c:	b580      	push	{r7, lr}
 800071e:	b094      	sub	sp, #80	@ 0x50
 8000720:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8000722:	f107 0320 	add.w	r3, r7, #32
 8000726:	2230      	movs	r2, #48	@ 0x30
 8000728:	2100      	movs	r1, #0
 800072a:	4618      	mov	r0, r3
 800072c:	f003 fbc6 	bl	8003ebc <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8000730:	f107 030c 	add.w	r3, r7, #12
 8000734:	2200      	movs	r2, #0
 8000736:	601a      	str	r2, [r3, #0]
 8000738:	605a      	str	r2, [r3, #4]
 800073a:	609a      	str	r2, [r3, #8]
 800073c:	60da      	str	r2, [r3, #12]
 800073e:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	__HAL_RCC_PWR_CLK_ENABLE();
 8000740:	2300      	movs	r3, #0
 8000742:	60bb      	str	r3, [r7, #8]
 8000744:	4b28      	ldr	r3, [pc, #160]	@ (80007e8 <SystemClock_Config+0xcc>)
 8000746:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000748:	4a27      	ldr	r2, [pc, #156]	@ (80007e8 <SystemClock_Config+0xcc>)
 800074a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800074e:	6413      	str	r3, [r2, #64]	@ 0x40
 8000750:	4b25      	ldr	r3, [pc, #148]	@ (80007e8 <SystemClock_Config+0xcc>)
 8000752:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000754:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000758:	60bb      	str	r3, [r7, #8]
 800075a:	68bb      	ldr	r3, [r7, #8]
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800075c:	2300      	movs	r3, #0
 800075e:	607b      	str	r3, [r7, #4]
 8000760:	4b22      	ldr	r3, [pc, #136]	@ (80007ec <SystemClock_Config+0xd0>)
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	4a21      	ldr	r2, [pc, #132]	@ (80007ec <SystemClock_Config+0xd0>)
 8000766:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800076a:	6013      	str	r3, [r2, #0]
 800076c:	4b1f      	ldr	r3, [pc, #124]	@ (80007ec <SystemClock_Config+0xd0>)
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000774:	607b      	str	r3, [r7, #4]
 8000776:	687b      	ldr	r3, [r7, #4]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000778:	2302      	movs	r3, #2
 800077a:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800077c:	2301      	movs	r3, #1
 800077e:	62fb      	str	r3, [r7, #44]	@ 0x2c
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000780:	2310      	movs	r3, #16
 8000782:	633b      	str	r3, [r7, #48]	@ 0x30
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000784:	2302      	movs	r3, #2
 8000786:	63bb      	str	r3, [r7, #56]	@ 0x38
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000788:	2300      	movs	r3, #0
 800078a:	63fb      	str	r3, [r7, #60]	@ 0x3c
	RCC_OscInitStruct.PLL.PLLM = 8;
 800078c:	2308      	movs	r3, #8
 800078e:	643b      	str	r3, [r7, #64]	@ 0x40
	RCC_OscInitStruct.PLL.PLLN = 50;
 8000790:	2332      	movs	r3, #50	@ 0x32
 8000792:	647b      	str	r3, [r7, #68]	@ 0x44
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8000794:	2304      	movs	r3, #4
 8000796:	64bb      	str	r3, [r7, #72]	@ 0x48
	RCC_OscInitStruct.PLL.PLLQ = 7;
 8000798:	2307      	movs	r3, #7
 800079a:	64fb      	str	r3, [r7, #76]	@ 0x4c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 800079c:	f107 0320 	add.w	r3, r7, #32
 80007a0:	4618      	mov	r0, r3
 80007a2:	f002 f89b 	bl	80028dc <HAL_RCC_OscConfig>
 80007a6:	4603      	mov	r3, r0
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	d001      	beq.n	80007b0 <SystemClock_Config+0x94>
		Error_Handler();
 80007ac:	f000 fc36 	bl	800101c <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80007b0:	230f      	movs	r3, #15
 80007b2:	60fb      	str	r3, [r7, #12]
			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007b4:	2302      	movs	r3, #2
 80007b6:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007b8:	2300      	movs	r3, #0
 80007ba:	617b      	str	r3, [r7, #20]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80007bc:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80007c0:	61bb      	str	r3, [r7, #24]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80007c2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80007c6:	61fb      	str	r3, [r7, #28]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 80007c8:	f107 030c 	add.w	r3, r7, #12
 80007cc:	2100      	movs	r1, #0
 80007ce:	4618      	mov	r0, r3
 80007d0:	f002 fafc 	bl	8002dcc <HAL_RCC_ClockConfig>
 80007d4:	4603      	mov	r3, r0
 80007d6:	2b00      	cmp	r3, #0
 80007d8:	d001      	beq.n	80007de <SystemClock_Config+0xc2>
		Error_Handler();
 80007da:	f000 fc1f 	bl	800101c <Error_Handler>
	}
}
 80007de:	bf00      	nop
 80007e0:	3750      	adds	r7, #80	@ 0x50
 80007e2:	46bd      	mov	sp, r7
 80007e4:	bd80      	pop	{r7, pc}
 80007e6:	bf00      	nop
 80007e8:	40023800 	.word	0x40023800
 80007ec:	40007000 	.word	0x40007000

080007f0 <MX_ADC1_Init>:
/**
 * @brief ADC1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC1_Init(void) {
 80007f0:	b580      	push	{r7, lr}
 80007f2:	b084      	sub	sp, #16
 80007f4:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC1_Init 0 */

	/* USER CODE END ADC1_Init 0 */

	ADC_ChannelConfTypeDef sConfig = { 0 };
 80007f6:	463b      	mov	r3, r7
 80007f8:	2200      	movs	r2, #0
 80007fa:	601a      	str	r2, [r3, #0]
 80007fc:	605a      	str	r2, [r3, #4]
 80007fe:	609a      	str	r2, [r3, #8]
 8000800:	60da      	str	r2, [r3, #12]

	/* USER CODE END ADC1_Init 1 */

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc1.Instance = ADC1;
 8000802:	4b28      	ldr	r3, [pc, #160]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000804:	4a28      	ldr	r2, [pc, #160]	@ (80008a8 <MX_ADC1_Init+0xb8>)
 8000806:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV8;
 8000808:	4b26      	ldr	r3, [pc, #152]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 800080a:	f44f 3240 	mov.w	r2, #196608	@ 0x30000
 800080e:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000810:	4b24      	ldr	r3, [pc, #144]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000812:	2200      	movs	r2, #0
 8000814:	609a      	str	r2, [r3, #8]
	hadc1.Init.ScanConvMode = ENABLE;
 8000816:	4b23      	ldr	r3, [pc, #140]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000818:	2201      	movs	r2, #1
 800081a:	611a      	str	r2, [r3, #16]
	hadc1.Init.ContinuousConvMode = ENABLE;
 800081c:	4b21      	ldr	r3, [pc, #132]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 800081e:	2201      	movs	r2, #1
 8000820:	761a      	strb	r2, [r3, #24]
	hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000822:	4b20      	ldr	r3, [pc, #128]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000824:	2200      	movs	r2, #0
 8000826:	f883 2020 	strb.w	r2, [r3, #32]
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800082a:	4b1e      	ldr	r3, [pc, #120]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 800082c:	2200      	movs	r2, #0
 800082e:	62da      	str	r2, [r3, #44]	@ 0x2c
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000830:	4b1c      	ldr	r3, [pc, #112]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000832:	4a1e      	ldr	r2, [pc, #120]	@ (80008ac <MX_ADC1_Init+0xbc>)
 8000834:	629a      	str	r2, [r3, #40]	@ 0x28
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000836:	4b1b      	ldr	r3, [pc, #108]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000838:	2200      	movs	r2, #0
 800083a:	60da      	str	r2, [r3, #12]
	hadc1.Init.NbrOfConversion = 2;
 800083c:	4b19      	ldr	r3, [pc, #100]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 800083e:	2202      	movs	r2, #2
 8000840:	61da      	str	r2, [r3, #28]
	hadc1.Init.DMAContinuousRequests = ENABLE;
 8000842:	4b18      	ldr	r3, [pc, #96]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000844:	2201      	movs	r2, #1
 8000846:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
	hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 800084a:	4b16      	ldr	r3, [pc, #88]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 800084c:	2200      	movs	r2, #0
 800084e:	615a      	str	r2, [r3, #20]
	if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 8000850:	4814      	ldr	r0, [pc, #80]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000852:	f000 fdf1 	bl	8001438 <HAL_ADC_Init>
 8000856:	4603      	mov	r3, r0
 8000858:	2b00      	cmp	r3, #0
 800085a:	d001      	beq.n	8000860 <MX_ADC1_Init+0x70>
		Error_Handler();
 800085c:	f000 fbde 	bl	800101c <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_9;
 8000860:	2309      	movs	r3, #9
 8000862:	603b      	str	r3, [r7, #0]
	sConfig.Rank = 1;
 8000864:	2301      	movs	r3, #1
 8000866:	607b      	str	r3, [r7, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000868:	2300      	movs	r3, #0
 800086a:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 800086c:	463b      	mov	r3, r7
 800086e:	4619      	mov	r1, r3
 8000870:	480c      	ldr	r0, [pc, #48]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 8000872:	f000 ff43 	bl	80016fc <HAL_ADC_ConfigChannel>
 8000876:	4603      	mov	r3, r0
 8000878:	2b00      	cmp	r3, #0
 800087a:	d001      	beq.n	8000880 <MX_ADC1_Init+0x90>
		Error_Handler();
 800087c:	f000 fbce 	bl	800101c <Error_Handler>
	}

	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_8;
 8000880:	2308      	movs	r3, #8
 8000882:	603b      	str	r3, [r7, #0]
	sConfig.Rank = 2;
 8000884:	2302      	movs	r3, #2
 8000886:	607b      	str	r3, [r7, #4]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 8000888:	463b      	mov	r3, r7
 800088a:	4619      	mov	r1, r3
 800088c:	4805      	ldr	r0, [pc, #20]	@ (80008a4 <MX_ADC1_Init+0xb4>)
 800088e:	f000 ff35 	bl	80016fc <HAL_ADC_ConfigChannel>
 8000892:	4603      	mov	r3, r0
 8000894:	2b00      	cmp	r3, #0
 8000896:	d001      	beq.n	800089c <MX_ADC1_Init+0xac>
		Error_Handler();
 8000898:	f000 fbc0 	bl	800101c <Error_Handler>
	}
	/* USER CODE BEGIN ADC1_Init 2 */

	/* USER CODE END ADC1_Init 2 */

}
 800089c:	bf00      	nop
 800089e:	3710      	adds	r7, #16
 80008a0:	46bd      	mov	sp, r7
 80008a2:	bd80      	pop	{r7, pc}
 80008a4:	2000002c 	.word	0x2000002c
 80008a8:	40012000 	.word	0x40012000
 80008ac:	0f000001 	.word	0x0f000001

080008b0 <MX_TIM3_Init>:
/**
 * @brief TIM3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM3_Init(void) {
 80008b0:	b580      	push	{r7, lr}
 80008b2:	b08e      	sub	sp, #56	@ 0x38
 80008b4:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 80008b6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80008ba:	2200      	movs	r2, #0
 80008bc:	601a      	str	r2, [r3, #0]
 80008be:	605a      	str	r2, [r3, #4]
 80008c0:	609a      	str	r2, [r3, #8]
 80008c2:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80008c4:	f107 0320 	add.w	r3, r7, #32
 80008c8:	2200      	movs	r2, #0
 80008ca:	601a      	str	r2, [r3, #0]
 80008cc:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 80008ce:	1d3b      	adds	r3, r7, #4
 80008d0:	2200      	movs	r2, #0
 80008d2:	601a      	str	r2, [r3, #0]
 80008d4:	605a      	str	r2, [r3, #4]
 80008d6:	609a      	str	r2, [r3, #8]
 80008d8:	60da      	str	r2, [r3, #12]
 80008da:	611a      	str	r2, [r3, #16]
 80008dc:	615a      	str	r2, [r3, #20]
 80008de:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 80008e0:	4b32      	ldr	r3, [pc, #200]	@ (80009ac <MX_TIM3_Init+0xfc>)
 80008e2:	4a33      	ldr	r2, [pc, #204]	@ (80009b0 <MX_TIM3_Init+0x100>)
 80008e4:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 0;
 80008e6:	4b31      	ldr	r3, [pc, #196]	@ (80009ac <MX_TIM3_Init+0xfc>)
 80008e8:	2200      	movs	r2, #0
 80008ea:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80008ec:	4b2f      	ldr	r3, [pc, #188]	@ (80009ac <MX_TIM3_Init+0xfc>)
 80008ee:	2200      	movs	r2, #0
 80008f0:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 63999;
 80008f2:	4b2e      	ldr	r3, [pc, #184]	@ (80009ac <MX_TIM3_Init+0xfc>)
 80008f4:	f64f 12ff 	movw	r2, #63999	@ 0xf9ff
 80008f8:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80008fa:	4b2c      	ldr	r3, [pc, #176]	@ (80009ac <MX_TIM3_Init+0xfc>)
 80008fc:	2200      	movs	r2, #0
 80008fe:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000900:	4b2a      	ldr	r3, [pc, #168]	@ (80009ac <MX_TIM3_Init+0xfc>)
 8000902:	2200      	movs	r2, #0
 8000904:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim3) != HAL_OK) {
 8000906:	4829      	ldr	r0, [pc, #164]	@ (80009ac <MX_TIM3_Init+0xfc>)
 8000908:	f002 fc4c 	bl	80031a4 <HAL_TIM_Base_Init>
 800090c:	4603      	mov	r3, r0
 800090e:	2b00      	cmp	r3, #0
 8000910:	d001      	beq.n	8000916 <MX_TIM3_Init+0x66>
		Error_Handler();
 8000912:	f000 fb83 	bl	800101c <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000916:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800091a:	62bb      	str	r3, [r7, #40]	@ 0x28
	if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK) {
 800091c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000920:	4619      	mov	r1, r3
 8000922:	4822      	ldr	r0, [pc, #136]	@ (80009ac <MX_TIM3_Init+0xfc>)
 8000924:	f002 fe70 	bl	8003608 <HAL_TIM_ConfigClockSource>
 8000928:	4603      	mov	r3, r0
 800092a:	2b00      	cmp	r3, #0
 800092c:	d001      	beq.n	8000932 <MX_TIM3_Init+0x82>
		Error_Handler();
 800092e:	f000 fb75 	bl	800101c <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 8000932:	481e      	ldr	r0, [pc, #120]	@ (80009ac <MX_TIM3_Init+0xfc>)
 8000934:	f002 fc85 	bl	8003242 <HAL_TIM_PWM_Init>
 8000938:	4603      	mov	r3, r0
 800093a:	2b00      	cmp	r3, #0
 800093c:	d001      	beq.n	8000942 <MX_TIM3_Init+0x92>
		Error_Handler();
 800093e:	f000 fb6d 	bl	800101c <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000942:	2300      	movs	r3, #0
 8000944:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000946:	2300      	movs	r3, #0
 8000948:	627b      	str	r3, [r7, #36]	@ 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig)
 800094a:	f107 0320 	add.w	r3, r7, #32
 800094e:	4619      	mov	r1, r3
 8000950:	4816      	ldr	r0, [pc, #88]	@ (80009ac <MX_TIM3_Init+0xfc>)
 8000952:	f003 fa37 	bl	8003dc4 <HAL_TIMEx_MasterConfigSynchronization>
 8000956:	4603      	mov	r3, r0
 8000958:	2b00      	cmp	r3, #0
 800095a:	d001      	beq.n	8000960 <MX_TIM3_Init+0xb0>
			!= HAL_OK) {
		Error_Handler();
 800095c:	f000 fb5e 	bl	800101c <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000960:	2360      	movs	r3, #96	@ 0x60
 8000962:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 8000964:	2300      	movs	r3, #0
 8000966:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000968:	2300      	movs	r3, #0
 800096a:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800096c:	2300      	movs	r3, #0
 800096e:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3)
 8000970:	1d3b      	adds	r3, r7, #4
 8000972:	2208      	movs	r2, #8
 8000974:	4619      	mov	r1, r3
 8000976:	480d      	ldr	r0, [pc, #52]	@ (80009ac <MX_TIM3_Init+0xfc>)
 8000978:	f002 fd84 	bl	8003484 <HAL_TIM_PWM_ConfigChannel>
 800097c:	4603      	mov	r3, r0
 800097e:	2b00      	cmp	r3, #0
 8000980:	d001      	beq.n	8000986 <MX_TIM3_Init+0xd6>
			!= HAL_OK) {
		Error_Handler();
 8000982:	f000 fb4b 	bl	800101c <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4)
 8000986:	1d3b      	adds	r3, r7, #4
 8000988:	220c      	movs	r2, #12
 800098a:	4619      	mov	r1, r3
 800098c:	4807      	ldr	r0, [pc, #28]	@ (80009ac <MX_TIM3_Init+0xfc>)
 800098e:	f002 fd79 	bl	8003484 <HAL_TIM_PWM_ConfigChannel>
 8000992:	4603      	mov	r3, r0
 8000994:	2b00      	cmp	r3, #0
 8000996:	d001      	beq.n	800099c <MX_TIM3_Init+0xec>
			!= HAL_OK) {
		Error_Handler();
 8000998:	f000 fb40 	bl	800101c <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */
	HAL_TIM_MspPostInit(&htim3);
 800099c:	4803      	ldr	r0, [pc, #12]	@ (80009ac <MX_TIM3_Init+0xfc>)
 800099e:	f000 fc05 	bl	80011ac <HAL_TIM_MspPostInit>

}
 80009a2:	bf00      	nop
 80009a4:	3738      	adds	r7, #56	@ 0x38
 80009a6:	46bd      	mov	sp, r7
 80009a8:	bd80      	pop	{r7, pc}
 80009aa:	bf00      	nop
 80009ac:	200000d4 	.word	0x200000d4
 80009b0:	40000400 	.word	0x40000400

080009b4 <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 80009b4:	b580      	push	{r7, lr}
 80009b6:	b082      	sub	sp, #8
 80009b8:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA2_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	607b      	str	r3, [r7, #4]
 80009be:	4b0c      	ldr	r3, [pc, #48]	@ (80009f0 <MX_DMA_Init+0x3c>)
 80009c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009c2:	4a0b      	ldr	r2, [pc, #44]	@ (80009f0 <MX_DMA_Init+0x3c>)
 80009c4:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80009c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80009ca:	4b09      	ldr	r3, [pc, #36]	@ (80009f0 <MX_DMA_Init+0x3c>)
 80009cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009ce:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80009d2:	607b      	str	r3, [r7, #4]
 80009d4:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA2_Stream0_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80009d6:	2200      	movs	r2, #0
 80009d8:	2100      	movs	r1, #0
 80009da:	2038      	movs	r0, #56	@ 0x38
 80009dc:	f001 fa09 	bl	8001df2 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80009e0:	2038      	movs	r0, #56	@ 0x38
 80009e2:	f001 fa22 	bl	8001e2a <HAL_NVIC_EnableIRQ>

}
 80009e6:	bf00      	nop
 80009e8:	3708      	adds	r7, #8
 80009ea:	46bd      	mov	sp, r7
 80009ec:	bd80      	pop	{r7, pc}
 80009ee:	bf00      	nop
 80009f0:	40023800 	.word	0x40023800

080009f4 <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 80009f4:	b580      	push	{r7, lr}
 80009f6:	b088      	sub	sp, #32
 80009f8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 80009fa:	f107 030c 	add.w	r3, r7, #12
 80009fe:	2200      	movs	r2, #0
 8000a00:	601a      	str	r2, [r3, #0]
 8000a02:	605a      	str	r2, [r3, #4]
 8000a04:	609a      	str	r2, [r3, #8]
 8000a06:	60da      	str	r2, [r3, #12]
 8000a08:	611a      	str	r2, [r3, #16]
	/* USER CODE BEGIN MX_GPIO_Init_1 */

	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOE_CLK_ENABLE();
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	60bb      	str	r3, [r7, #8]
 8000a0e:	4b30      	ldr	r3, [pc, #192]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a12:	4a2f      	ldr	r2, [pc, #188]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a14:	f043 0310 	orr.w	r3, r3, #16
 8000a18:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a1a:	4b2d      	ldr	r3, [pc, #180]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a1e:	f003 0310 	and.w	r3, r3, #16
 8000a22:	60bb      	str	r3, [r7, #8]
 8000a24:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000a26:	2300      	movs	r3, #0
 8000a28:	607b      	str	r3, [r7, #4]
 8000a2a:	4b29      	ldr	r3, [pc, #164]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a2e:	4a28      	ldr	r2, [pc, #160]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a30:	f043 0302 	orr.w	r3, r3, #2
 8000a34:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a36:	4b26      	ldr	r3, [pc, #152]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a3a:	f003 0302 	and.w	r3, r3, #2
 8000a3e:	607b      	str	r3, [r7, #4]
 8000a40:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8000a42:	2300      	movs	r3, #0
 8000a44:	603b      	str	r3, [r7, #0]
 8000a46:	4b22      	ldr	r3, [pc, #136]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a4a:	4a21      	ldr	r2, [pc, #132]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a4c:	f043 0304 	orr.w	r3, r3, #4
 8000a50:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a52:	4b1f      	ldr	r3, [pc, #124]	@ (8000ad0 <MX_GPIO_Init+0xdc>)
 8000a54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a56:	f003 0304 	and.w	r3, r3, #4
 8000a5a:	603b      	str	r3, [r7, #0]
 8000a5c:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 8000a5e:	2200      	movs	r2, #0
 8000a60:	2108      	movs	r1, #8
 8000a62:	481c      	ldr	r0, [pc, #112]	@ (8000ad4 <MX_GPIO_Init+0xe0>)
 8000a64:	f001 ff20 	bl	80028a8 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB,
 8000a68:	2200      	movs	r2, #0
 8000a6a:	f44f 41f0 	mov.w	r1, #30720	@ 0x7800
 8000a6e:	481a      	ldr	r0, [pc, #104]	@ (8000ad8 <MX_GPIO_Init+0xe4>)
 8000a70:	f001 ff1a 	bl	80028a8 <HAL_GPIO_WritePin>
			m0_izquierda_Pin | m1_izquierda_Pin | m0_derecha_Pin
					| m1_derecha_Pin, GPIO_PIN_RESET);

	/*Configure GPIO pin : CS_I2C_SPI_Pin */
	GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 8000a74:	2308      	movs	r3, #8
 8000a76:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a78:	2301      	movs	r3, #1
 8000a7a:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a80:	2300      	movs	r3, #0
 8000a82:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 8000a84:	f107 030c 	add.w	r3, r7, #12
 8000a88:	4619      	mov	r1, r3
 8000a8a:	4812      	ldr	r0, [pc, #72]	@ (8000ad4 <MX_GPIO_Init+0xe0>)
 8000a8c:	f001 fd58 	bl	8002540 <HAL_GPIO_Init>

	/*Configure GPIO pins : m0_izquierda_Pin m1_izquierda_Pin m0_derecha_Pin m1_derecha_Pin */
	GPIO_InitStruct.Pin = m0_izquierda_Pin | m1_izquierda_Pin | m0_derecha_Pin
 8000a90:	f44f 43f0 	mov.w	r3, #30720	@ 0x7800
 8000a94:	60fb      	str	r3, [r7, #12]
			| m1_derecha_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a96:	2301      	movs	r3, #1
 8000a98:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000aa2:	f107 030c 	add.w	r3, r7, #12
 8000aa6:	4619      	mov	r1, r3
 8000aa8:	480b      	ldr	r0, [pc, #44]	@ (8000ad8 <MX_GPIO_Init+0xe4>)
 8000aaa:	f001 fd49 	bl	8002540 <HAL_GPIO_Init>

	/*Configure GPIO pins : sensor_frontal_Pin sensor_linea_Pin */
	GPIO_InitStruct.Pin = sensor_frontal_Pin | sensor_linea_Pin;
 8000aae:	23c0      	movs	r3, #192	@ 0xc0
 8000ab0:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000ab2:	2300      	movs	r3, #0
 8000ab4:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000aba:	f107 030c 	add.w	r3, r7, #12
 8000abe:	4619      	mov	r1, r3
 8000ac0:	4806      	ldr	r0, [pc, #24]	@ (8000adc <MX_GPIO_Init+0xe8>)
 8000ac2:	f001 fd3d 	bl	8002540 <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */

	/* USER CODE END MX_GPIO_Init_2 */
}
 8000ac6:	bf00      	nop
 8000ac8:	3720      	adds	r7, #32
 8000aca:	46bd      	mov	sp, r7
 8000acc:	bd80      	pop	{r7, pc}
 8000ace:	bf00      	nop
 8000ad0:	40023800 	.word	0x40023800
 8000ad4:	40021000 	.word	0x40021000
 8000ad8:	40020400 	.word	0x40020400
 8000adc:	40020800 	.word	0x40020800

08000ae0 <obtener_orientacion_N>:

/* USER CODE BEGIN 4 */

uint8_t obtener_orientacion_N(uint8_t ubicacion, uint8_t casilla_n) { // Devuelve la dirección hacia donde hay que ir según la diferencia entre casillas
 8000ae0:	b480      	push	{r7}
 8000ae2:	b083      	sub	sp, #12
 8000ae4:	af00      	add	r7, sp, #0
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	460a      	mov	r2, r1
 8000aea:	71fb      	strb	r3, [r7, #7]
 8000aec:	4613      	mov	r3, r2
 8000aee:	71bb      	strb	r3, [r7, #6]
	if (casilla_n == ubicacion + 1)
 8000af0:	79ba      	ldrb	r2, [r7, #6]
 8000af2:	79fb      	ldrb	r3, [r7, #7]
 8000af4:	3301      	adds	r3, #1
 8000af6:	429a      	cmp	r2, r3
 8000af8:	d101      	bne.n	8000afe <obtener_orientacion_N+0x1e>
		return OESTE;
 8000afa:	2303      	movs	r3, #3
 8000afc:	e015      	b.n	8000b2a <obtener_orientacion_N+0x4a>
	if (casilla_n == ubicacion - 1)
 8000afe:	79ba      	ldrb	r2, [r7, #6]
 8000b00:	79fb      	ldrb	r3, [r7, #7]
 8000b02:	3b01      	subs	r3, #1
 8000b04:	429a      	cmp	r2, r3
 8000b06:	d101      	bne.n	8000b0c <obtener_orientacion_N+0x2c>
		return ESTE;
 8000b08:	2301      	movs	r3, #1
 8000b0a:	e00e      	b.n	8000b2a <obtener_orientacion_N+0x4a>
	if (casilla_n == ubicacion + 4)
 8000b0c:	79ba      	ldrb	r2, [r7, #6]
 8000b0e:	79fb      	ldrb	r3, [r7, #7]
 8000b10:	3304      	adds	r3, #4
 8000b12:	429a      	cmp	r2, r3
 8000b14:	d101      	bne.n	8000b1a <obtener_orientacion_N+0x3a>
		return NORTE;
 8000b16:	2300      	movs	r3, #0
 8000b18:	e007      	b.n	8000b2a <obtener_orientacion_N+0x4a>
	if (casilla_n == ubicacion - 4)
 8000b1a:	79ba      	ldrb	r2, [r7, #6]
 8000b1c:	79fb      	ldrb	r3, [r7, #7]
 8000b1e:	3b04      	subs	r3, #4
 8000b20:	429a      	cmp	r2, r3
 8000b22:	d101      	bne.n	8000b28 <obtener_orientacion_N+0x48>
		return SUR;
 8000b24:	2302      	movs	r3, #2
 8000b26:	e000      	b.n	8000b2a <obtener_orientacion_N+0x4a>

	return 100; // Movimiento no válido (no adyacente o fuera del tablero)
 8000b28:	2364      	movs	r3, #100	@ 0x64
}
 8000b2a:	4618      	mov	r0, r3
 8000b2c:	370c      	adds	r7, #12
 8000b2e:	46bd      	mov	sp, r7
 8000b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b34:	4770      	bx	lr
	...

08000b38 <obtenerGiro>:

uint8_t obtenerGiro(uint8_t orientacion_actual, uint8_t orientacion_n) { // Calcula el giro que debe hacer el autito para pasar de su orientación actual a la deseada
 8000b38:	b480      	push	{r7}
 8000b3a:	b085      	sub	sp, #20
 8000b3c:	af00      	add	r7, sp, #0
 8000b3e:	4603      	mov	r3, r0
 8000b40:	460a      	mov	r2, r1
 8000b42:	71fb      	strb	r3, [r7, #7]
 8000b44:	4613      	mov	r3, r2
 8000b46:	71bb      	strb	r3, [r7, #6]
	int diferencia = (orientacion_n - orientacion_actual + 4) % 4; //el %4 se queda con el resto de la divsion por 4
 8000b48:	79ba      	ldrb	r2, [r7, #6]
 8000b4a:	79fb      	ldrb	r3, [r7, #7]
 8000b4c:	1ad3      	subs	r3, r2, r3
 8000b4e:	3304      	adds	r3, #4
 8000b50:	425a      	negs	r2, r3
 8000b52:	f003 0303 	and.w	r3, r3, #3
 8000b56:	f002 0203 	and.w	r2, r2, #3
 8000b5a:	bf58      	it	pl
 8000b5c:	4253      	negpl	r3, r2
 8000b5e:	60fb      	str	r3, [r7, #12]

	switch (diferencia) {
 8000b60:	68fb      	ldr	r3, [r7, #12]
 8000b62:	2b03      	cmp	r3, #3
 8000b64:	d812      	bhi.n	8000b8c <obtenerGiro+0x54>
 8000b66:	a201      	add	r2, pc, #4	@ (adr r2, 8000b6c <obtenerGiro+0x34>)
 8000b68:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b6c:	08000b7d 	.word	0x08000b7d
 8000b70:	08000b81 	.word	0x08000b81
 8000b74:	08000b85 	.word	0x08000b85
 8000b78:	08000b89 	.word	0x08000b89
	case 0:
		return ADELANTE;
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	e006      	b.n	8000b8e <obtenerGiro+0x56>
	case 1:
		return DERECHA;
 8000b80:	2302      	movs	r3, #2
 8000b82:	e004      	b.n	8000b8e <obtenerGiro+0x56>
	case 2:
		return GIRO_180;
 8000b84:	2303      	movs	r3, #3
 8000b86:	e002      	b.n	8000b8e <obtenerGiro+0x56>
	case 3:
		return IZQUIERDA;
 8000b88:	2301      	movs	r3, #1
 8000b8a:	e000      	b.n	8000b8e <obtenerGiro+0x56>
	default:
		return 100; // Error
 8000b8c:	2364      	movs	r3, #100	@ 0x64
	}
}
 8000b8e:	4618      	mov	r0, r3
 8000b90:	3714      	adds	r7, #20
 8000b92:	46bd      	mov	sp, r7
 8000b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b98:	4770      	bx	lr
 8000b9a:	bf00      	nop

08000b9c <actualizo_ubicacion>:
uint8_t actualizo_ubicacion(uint8_t ubicacion, uint8_t orientacion_actual) {
 8000b9c:	b480      	push	{r7}
 8000b9e:	b083      	sub	sp, #12
 8000ba0:	af00      	add	r7, sp, #0
 8000ba2:	4603      	mov	r3, r0
 8000ba4:	460a      	mov	r2, r1
 8000ba6:	71fb      	strb	r3, [r7, #7]
 8000ba8:	4613      	mov	r3, r2
 8000baa:	71bb      	strb	r3, [r7, #6]

	switch (orientacion_actual) {
 8000bac:	79bb      	ldrb	r3, [r7, #6]
 8000bae:	2b03      	cmp	r3, #3
 8000bb0:	d81a      	bhi.n	8000be8 <actualizo_ubicacion+0x4c>
 8000bb2:	a201      	add	r2, pc, #4	@ (adr r2, 8000bb8 <actualizo_ubicacion+0x1c>)
 8000bb4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000bb8:	08000bc9 	.word	0x08000bc9
 8000bbc:	08000bd1 	.word	0x08000bd1
 8000bc0:	08000bd9 	.word	0x08000bd9
 8000bc4:	08000be1 	.word	0x08000be1
	case 0:
		return ubicacion + 4;
 8000bc8:	79fb      	ldrb	r3, [r7, #7]
 8000bca:	3304      	adds	r3, #4
 8000bcc:	b2db      	uxtb	r3, r3
 8000bce:	e00c      	b.n	8000bea <actualizo_ubicacion+0x4e>
	case 1:
		return ubicacion - 1;
 8000bd0:	79fb      	ldrb	r3, [r7, #7]
 8000bd2:	3b01      	subs	r3, #1
 8000bd4:	b2db      	uxtb	r3, r3
 8000bd6:	e008      	b.n	8000bea <actualizo_ubicacion+0x4e>
	case 2:
		return ubicacion - 4;
 8000bd8:	79fb      	ldrb	r3, [r7, #7]
 8000bda:	3b04      	subs	r3, #4
 8000bdc:	b2db      	uxtb	r3, r3
 8000bde:	e004      	b.n	8000bea <actualizo_ubicacion+0x4e>
	case 3:
		return ubicacion + 1;
 8000be0:	79fb      	ldrb	r3, [r7, #7]
 8000be2:	3301      	adds	r3, #1
 8000be4:	b2db      	uxtb	r3, r3
 8000be6:	e000      	b.n	8000bea <actualizo_ubicacion+0x4e>
	default:
		return 100; // Error
 8000be8:	2364      	movs	r3, #100	@ 0x64
	}
}
 8000bea:	4618      	mov	r0, r3
 8000bec:	370c      	adds	r7, #12
 8000bee:	46bd      	mov	sp, r7
 8000bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <promediar>:

void promediar(uint16_t *buffer) {
 8000bf8:	b480      	push	{r7}
 8000bfa:	b087      	sub	sp, #28
 8000bfc:	af00      	add	r7, sp, #0
 8000bfe:	6078      	str	r0, [r7, #4]
	uint32_t sensor_izq_sum = 0, sensor_der_sum = 0; // Inicializamos variables para acumular la suma de las muestras
 8000c00:	2300      	movs	r3, #0
 8000c02:	617b      	str	r3, [r7, #20]
 8000c04:	2300      	movs	r3, #0
 8000c06:	613b      	str	r3, [r7, #16]
	for (int i = 0; i < 16; ++i) { // Ralizamos la suma incrementando el puntero a las muestras
 8000c08:	2300      	movs	r3, #0
 8000c0a:	60fb      	str	r3, [r7, #12]
 8000c0c:	e012      	b.n	8000c34 <promediar+0x3c>
		sensor_izq_sum += buffer[0];
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	881b      	ldrh	r3, [r3, #0]
 8000c12:	461a      	mov	r2, r3
 8000c14:	697b      	ldr	r3, [r7, #20]
 8000c16:	4413      	add	r3, r2
 8000c18:	617b      	str	r3, [r7, #20]
		sensor_der_sum += buffer[1]; //hago la suma y la guardo (eso significa el +=)
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	3302      	adds	r3, #2
 8000c1e:	881b      	ldrh	r3, [r3, #0]
 8000c20:	461a      	mov	r2, r3
 8000c22:	693b      	ldr	r3, [r7, #16]
 8000c24:	4413      	add	r3, r2
 8000c26:	613b      	str	r3, [r7, #16]
		buffer += 2;  //desplazo el puntero 2
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	3304      	adds	r3, #4
 8000c2c:	607b      	str	r3, [r7, #4]
	for (int i = 0; i < 16; ++i) { // Ralizamos la suma incrementando el puntero a las muestras
 8000c2e:	68fb      	ldr	r3, [r7, #12]
 8000c30:	3301      	adds	r3, #1
 8000c32:	60fb      	str	r3, [r7, #12]
 8000c34:	68fb      	ldr	r3, [r7, #12]
 8000c36:	2b0f      	cmp	r3, #15
 8000c38:	dde9      	ble.n	8000c0e <promediar+0x16>
	}
// Dividimos las sumas para obtener el promedio
	sensor_izq_avg = sensor_izq_sum / 16; //divido 16 porq son 16 muestras
 8000c3a:	697b      	ldr	r3, [r7, #20]
 8000c3c:	091b      	lsrs	r3, r3, #4
 8000c3e:	b29a      	uxth	r2, r3
 8000c40:	4b06      	ldr	r3, [pc, #24]	@ (8000c5c <promediar+0x64>)
 8000c42:	801a      	strh	r2, [r3, #0]
	sensor_der_avg = sensor_der_sum / 16;
 8000c44:	693b      	ldr	r3, [r7, #16]
 8000c46:	091b      	lsrs	r3, r3, #4
 8000c48:	b29a      	uxth	r2, r3
 8000c4a:	4b05      	ldr	r3, [pc, #20]	@ (8000c60 <promediar+0x68>)
 8000c4c:	801a      	strh	r2, [r3, #0]
}
 8000c4e:	bf00      	nop
 8000c50:	371c      	adds	r7, #28
 8000c52:	46bd      	mov	sp, r7
 8000c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop
 8000c5c:	200001c0 	.word	0x200001c0
 8000c60:	200001c2 	.word	0x200001c2

08000c64 <HAL_ADC_ConvHalfCpltCallback>:
void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc) { // Rutina de antención a la interrupción de buffer a mitad
 8000c64:	b580      	push	{r7, lr}
 8000c66:	b082      	sub	sp, #8
 8000c68:	af00      	add	r7, sp, #0
 8000c6a:	6078      	str	r0, [r7, #4]
// Promediamos la primera mitad del buffer (el primer bloque de tamaño mínimo)
	promediar(&dma_buffer[0]);
 8000c6c:	4803      	ldr	r0, [pc, #12]	@ (8000c7c <HAL_ADC_ConvHalfCpltCallback+0x18>)
 8000c6e:	f7ff ffc3 	bl	8000bf8 <promediar>
}
 8000c72:	bf00      	nop
 8000c74:	3708      	adds	r7, #8
 8000c76:	46bd      	mov	sp, r7
 8000c78:	bd80      	pop	{r7, pc}
 8000c7a:	bf00      	nop
 8000c7c:	20000140 	.word	0x20000140

08000c80 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) { // Rutina de antención a la interrupción de buffer a tope
 8000c80:	b580      	push	{r7, lr}
 8000c82:	b082      	sub	sp, #8
 8000c84:	af00      	add	r7, sp, #0
 8000c86:	6078      	str	r0, [r7, #4]
// Promediamos la segunda mitad del buffer (el segundo bloque de tamaño mínimo)
	promediar(&dma_buffer[32]);
 8000c88:	4803      	ldr	r0, [pc, #12]	@ (8000c98 <HAL_ADC_ConvCpltCallback+0x18>)
 8000c8a:	f7ff ffb5 	bl	8000bf8 <promediar>
}
 8000c8e:	bf00      	nop
 8000c90:	3708      	adds	r7, #8
 8000c92:	46bd      	mov	sp, r7
 8000c94:	bd80      	pop	{r7, pc}
 8000c96:	bf00      	nop
 8000c98:	20000180 	.word	0x20000180

08000c9c <correccion_avanzar>:
void correccion_avanzar(void) {
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	af00      	add	r7, sp, #0
	// corrección para el sensor izquierdo
	if (sensor_izq_avg < margen) {
 8000ca0:	4b0b      	ldr	r3, [pc, #44]	@ (8000cd0 <correccion_avanzar+0x34>)
 8000ca2:	881b      	ldrh	r3, [r3, #0]
 8000ca4:	b29b      	uxth	r3, r3
 8000ca6:	f5b3 7fe1 	cmp.w	r3, #450	@ 0x1c2
 8000caa:	d202      	bcs.n	8000cb2 <correccion_avanzar+0x16>
		apagar_derecha();  // apagar motor derecho
 8000cac:	f000 f83c 	bl	8000d28 <apagar_derecha>
 8000cb0:	e001      	b.n	8000cb6 <correccion_avanzar+0x1a>
	} else {
		avanzar();         // avanzar con ambos motores
 8000cb2:	f000 f811 	bl	8000cd8 <avanzar>
	}

	// corrección para el sensor derecho
	if (sensor_der_avg < margen) {
 8000cb6:	4b07      	ldr	r3, [pc, #28]	@ (8000cd4 <correccion_avanzar+0x38>)
 8000cb8:	881b      	ldrh	r3, [r3, #0]
 8000cba:	b29b      	uxth	r3, r3
 8000cbc:	f5b3 7fe1 	cmp.w	r3, #450	@ 0x1c2
 8000cc0:	d202      	bcs.n	8000cc8 <correccion_avanzar+0x2c>
		apagar_izquierda();  // apagar motor izquierdo
 8000cc2:	f000 f859 	bl	8000d78 <apagar_izquierda>
	} else {
		avanzar();           // avanzar con ambos motores
	}
}
 8000cc6:	e001      	b.n	8000ccc <correccion_avanzar+0x30>
		avanzar();           // avanzar con ambos motores
 8000cc8:	f000 f806 	bl	8000cd8 <avanzar>
}
 8000ccc:	bf00      	nop
 8000cce:	bd80      	pop	{r7, pc}
 8000cd0:	200001c0 	.word	0x200001c0
 8000cd4:	200001c2 	.word	0x200001c2

08000cd8 <avanzar>:

void avanzar(void) {
 8000cd8:	b580      	push	{r7, lr}
 8000cda:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8000cdc:	2200      	movs	r2, #0
 8000cde:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000ce2:	480f      	ldr	r0, [pc, #60]	@ (8000d20 <avanzar+0x48>)
 8000ce4:	f001 fde0 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8000ce8:	2201      	movs	r2, #1
 8000cea:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000cee:	480c      	ldr	r0, [pc, #48]	@ (8000d20 <avanzar+0x48>)
 8000cf0:	f001 fdda 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000cfa:	4809      	ldr	r0, [pc, #36]	@ (8000d20 <avanzar+0x48>)
 8000cfc:	f001 fdd4 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8000d00:	2201      	movs	r2, #1
 8000d02:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d06:	4806      	ldr	r0, [pc, #24]	@ (8000d20 <avanzar+0x48>)
 8000d08:	f001 fdce 	bl	80028a8 <HAL_GPIO_WritePin>
	TIM4->CCR3 = v_media; // rueda a velocidad media (condigurable)
 8000d0c:	4b05      	ldr	r3, [pc, #20]	@ (8000d24 <avanzar+0x4c>)
 8000d0e:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000d12:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM4->CCR4 = v_media; // rueda a velocidad media
 8000d14:	4b03      	ldr	r3, [pc, #12]	@ (8000d24 <avanzar+0x4c>)
 8000d16:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000d1a:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8000d1c:	bf00      	nop
 8000d1e:	bd80      	pop	{r7, pc}
 8000d20:	40020400 	.word	0x40020400
 8000d24:	40000800 	.word	0x40000800

08000d28 <apagar_derecha>:

void apagar_derecha(void) {
 8000d28:	b580      	push	{r7, lr}
 8000d2a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000d32:	480f      	ldr	r0, [pc, #60]	@ (8000d70 <apagar_derecha+0x48>)
 8000d34:	f001 fdb8 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_RESET);
 8000d38:	2200      	movs	r2, #0
 8000d3a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000d3e:	480c      	ldr	r0, [pc, #48]	@ (8000d70 <apagar_derecha+0x48>)
 8000d40:	f001 fdb2 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8000d44:	2200      	movs	r2, #0
 8000d46:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d4a:	4809      	ldr	r0, [pc, #36]	@ (8000d70 <apagar_derecha+0x48>)
 8000d4c:	f001 fdac 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8000d50:	2201      	movs	r2, #1
 8000d52:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000d56:	4806      	ldr	r0, [pc, #24]	@ (8000d70 <apagar_derecha+0x48>)
 8000d58:	f001 fda6 	bl	80028a8 <HAL_GPIO_WritePin>
	TIM4->CCR3 = v_media; // rueda a velocidad media (condigurable)
 8000d5c:	4b05      	ldr	r3, [pc, #20]	@ (8000d74 <apagar_derecha+0x4c>)
 8000d5e:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000d62:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM4->CCR4 = 0; // rueda a velocidad media
 8000d64:	4b03      	ldr	r3, [pc, #12]	@ (8000d74 <apagar_derecha+0x4c>)
 8000d66:	2200      	movs	r2, #0
 8000d68:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8000d6a:	bf00      	nop
 8000d6c:	bd80      	pop	{r7, pc}
 8000d6e:	bf00      	nop
 8000d70:	40020400 	.word	0x40020400
 8000d74:	40000800 	.word	0x40000800

08000d78 <apagar_izquierda>:

void apagar_izquierda(void) {
 8000d78:	b580      	push	{r7, lr}
 8000d7a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin, GPIO_PIN_RESET);
 8000d7c:	2200      	movs	r2, #0
 8000d7e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000d82:	480f      	ldr	r0, [pc, #60]	@ (8000dc0 <apagar_izquierda+0x48>)
 8000d84:	f001 fd90 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin, GPIO_PIN_SET);
 8000d88:	2201      	movs	r2, #1
 8000d8a:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000d8e:	480c      	ldr	r0, [pc, #48]	@ (8000dc0 <apagar_izquierda+0x48>)
 8000d90:	f001 fd8a 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8000d94:	2200      	movs	r2, #0
 8000d96:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000d9a:	4809      	ldr	r0, [pc, #36]	@ (8000dc0 <apagar_izquierda+0x48>)
 8000d9c:	f001 fd84 	bl	80028a8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_RESET);
 8000da0:	2200      	movs	r2, #0
 8000da2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000da6:	4806      	ldr	r0, [pc, #24]	@ (8000dc0 <apagar_izquierda+0x48>)
 8000da8:	f001 fd7e 	bl	80028a8 <HAL_GPIO_WritePin>
	TIM3->CCR3 = 0; // rueda a velocidad media (condigurable)
 8000dac:	4b05      	ldr	r3, [pc, #20]	@ (8000dc4 <apagar_izquierda+0x4c>)
 8000dae:	2200      	movs	r2, #0
 8000db0:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4 = v_media; // rueda a velocidad media
 8000db2:	4b04      	ldr	r3, [pc, #16]	@ (8000dc4 <apagar_izquierda+0x4c>)
 8000db4:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000db8:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8000dba:	bf00      	nop
 8000dbc:	bd80      	pop	{r7, pc}
 8000dbe:	bf00      	nop
 8000dc0:	40020400 	.word	0x40020400
 8000dc4:	40000400 	.word	0x40000400

08000dc8 <ejecutarGiro>:
void ejecutarGiro(uint8_t giro) {
 8000dc8:	b580      	push	{r7, lr}
 8000dca:	b082      	sub	sp, #8
 8000dcc:	af00      	add	r7, sp, #0
 8000dce:	4603      	mov	r3, r0
 8000dd0:	71fb      	strb	r3, [r7, #7]
	switch (giro) {
 8000dd2:	79fb      	ldrb	r3, [r7, #7]
 8000dd4:	2b03      	cmp	r3, #3
 8000dd6:	d837      	bhi.n	8000e48 <ejecutarGiro+0x80>
 8000dd8:	a201      	add	r2, pc, #4	@ (adr r2, 8000de0 <ejecutarGiro+0x18>)
 8000dda:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000dde:	bf00      	nop
 8000de0:	08000df1 	.word	0x08000df1
 8000de4:	08000e1d 	.word	0x08000e1d
 8000de8:	08000e07 	.word	0x08000e07
 8000dec:	08000e33 	.word	0x08000e33
	case ADELANTE:
		setMotorIzquierdo(AVANCE);
 8000df0:	2001      	movs	r0, #1
 8000df2:	f000 f82d 	bl	8000e50 <setMotorIzquierdo>
		setMotorDerecho(AVANCE);
 8000df6:	2001      	movs	r0, #1
 8000df8:	f000 f85c 	bl	8000eb4 <setMotorDerecho>
		HAL_Delay(tiempo_muerto);
 8000dfc:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000e00:	f000 faf6 	bl	80013f0 <HAL_Delay>
		break;
 8000e04:	e020      	b.n	8000e48 <ejecutarGiro+0x80>

	case DERECHA:
		setMotorIzquierdo(AVANCE);
 8000e06:	2001      	movs	r0, #1
 8000e08:	f000 f822 	bl	8000e50 <setMotorIzquierdo>
		setMotorDerecho(RETROCESO);
 8000e0c:	2002      	movs	r0, #2
 8000e0e:	f000 f851 	bl	8000eb4 <setMotorDerecho>
		HAL_Delay(tiempo_giro90);
 8000e12:	f240 2062 	movw	r0, #610	@ 0x262
 8000e16:	f000 faeb 	bl	80013f0 <HAL_Delay>
		break;
 8000e1a:	e015      	b.n	8000e48 <ejecutarGiro+0x80>

	case IZQUIERDA:
		setMotorIzquierdo(RETROCESO);
 8000e1c:	2002      	movs	r0, #2
 8000e1e:	f000 f817 	bl	8000e50 <setMotorIzquierdo>
		setMotorDerecho(AVANCE);
 8000e22:	2001      	movs	r0, #1
 8000e24:	f000 f846 	bl	8000eb4 <setMotorDerecho>
		HAL_Delay(tiempo_giro90);
 8000e28:	f240 2062 	movw	r0, #610	@ 0x262
 8000e2c:	f000 fae0 	bl	80013f0 <HAL_Delay>
		break;
 8000e30:	e00a      	b.n	8000e48 <ejecutarGiro+0x80>

	case GIRO_180:
		setMotorIzquierdo(AVANCE);
 8000e32:	2001      	movs	r0, #1
 8000e34:	f000 f80c 	bl	8000e50 <setMotorIzquierdo>
		setMotorDerecho(RETROCESO);
 8000e38:	2002      	movs	r0, #2
 8000e3a:	f000 f83b 	bl	8000eb4 <setMotorDerecho>
		HAL_Delay(tiempo_giro180);
 8000e3e:	f240 404c 	movw	r0, #1100	@ 0x44c
 8000e42:	f000 fad5 	bl	80013f0 <HAL_Delay>
		break;
 8000e46:	bf00      	nop

	}
}
 8000e48:	bf00      	nop
 8000e4a:	3708      	adds	r7, #8
 8000e4c:	46bd      	mov	sp, r7
 8000e4e:	bd80      	pop	{r7, pc}

08000e50 <setMotorIzquierdo>:

void setMotorIzquierdo(uint8_t modo) {
 8000e50:	b580      	push	{r7, lr}
 8000e52:	b082      	sub	sp, #8
 8000e54:	af00      	add	r7, sp, #0
 8000e56:	4603      	mov	r3, r0
 8000e58:	71fb      	strb	r3, [r7, #7]

	TIM3->CCR3 = v_media; // rueda a velocidad media
 8000e5a:	4b14      	ldr	r3, [pc, #80]	@ (8000eac <setMotorIzquierdo+0x5c>)
 8000e5c:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000e60:	63da      	str	r2, [r3, #60]	@ 0x3c

	switch (modo) {
 8000e62:	79fb      	ldrb	r3, [r7, #7]
 8000e64:	2b01      	cmp	r3, #1
 8000e66:	d002      	beq.n	8000e6e <setMotorIzquierdo+0x1e>
 8000e68:	2b02      	cmp	r3, #2
 8000e6a:	d00d      	beq.n	8000e88 <setMotorIzquierdo+0x38>
				GPIO_PIN_SET);
		HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin,
				GPIO_PIN_RESET);
		break;
	}
}
 8000e6c:	e019      	b.n	8000ea2 <setMotorIzquierdo+0x52>
		HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin,
 8000e6e:	2200      	movs	r2, #0
 8000e70:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000e74:	480e      	ldr	r0, [pc, #56]	@ (8000eb0 <setMotorIzquierdo+0x60>)
 8000e76:	f001 fd17 	bl	80028a8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin,
 8000e7a:	2201      	movs	r2, #1
 8000e7c:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000e80:	480b      	ldr	r0, [pc, #44]	@ (8000eb0 <setMotorIzquierdo+0x60>)
 8000e82:	f001 fd11 	bl	80028a8 <HAL_GPIO_WritePin>
		break;
 8000e86:	e00c      	b.n	8000ea2 <setMotorIzquierdo+0x52>
		HAL_GPIO_WritePin(m1_izquierda_GPIO_Port, m1_izquierda_Pin,
 8000e88:	2201      	movs	r2, #1
 8000e8a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000e8e:	4808      	ldr	r0, [pc, #32]	@ (8000eb0 <setMotorIzquierdo+0x60>)
 8000e90:	f001 fd0a 	bl	80028a8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_izquierda_GPIO_Port, m0_izquierda_Pin,
 8000e94:	2200      	movs	r2, #0
 8000e96:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000e9a:	4805      	ldr	r0, [pc, #20]	@ (8000eb0 <setMotorIzquierdo+0x60>)
 8000e9c:	f001 fd04 	bl	80028a8 <HAL_GPIO_WritePin>
		break;
 8000ea0:	bf00      	nop
}
 8000ea2:	bf00      	nop
 8000ea4:	3708      	adds	r7, #8
 8000ea6:	46bd      	mov	sp, r7
 8000ea8:	bd80      	pop	{r7, pc}
 8000eaa:	bf00      	nop
 8000eac:	40000400 	.word	0x40000400
 8000eb0:	40020400 	.word	0x40020400

08000eb4 <setMotorDerecho>:

void setMotorDerecho(uint8_t modo) {
 8000eb4:	b580      	push	{r7, lr}
 8000eb6:	b082      	sub	sp, #8
 8000eb8:	af00      	add	r7, sp, #0
 8000eba:	4603      	mov	r3, r0
 8000ebc:	71fb      	strb	r3, [r7, #7]

	TIM3->CCR4 = v_media; // rueda a velocidad media
 8000ebe:	4b14      	ldr	r3, [pc, #80]	@ (8000f10 <setMotorDerecho+0x5c>)
 8000ec0:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 8000ec4:	641a      	str	r2, [r3, #64]	@ 0x40

	switch (modo) {
 8000ec6:	79fb      	ldrb	r3, [r7, #7]
 8000ec8:	2b01      	cmp	r3, #1
 8000eca:	d002      	beq.n	8000ed2 <setMotorDerecho+0x1e>
 8000ecc:	2b02      	cmp	r3, #2
 8000ece:	d00d      	beq.n	8000eec <setMotorDerecho+0x38>
		HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_RESET);
		break;

	}
}
 8000ed0:	e019      	b.n	8000f06 <setMotorDerecho+0x52>
		HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_RESET);
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000ed8:	480e      	ldr	r0, [pc, #56]	@ (8000f14 <setMotorDerecho+0x60>)
 8000eda:	f001 fce5 	bl	80028a8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_SET);
 8000ede:	2201      	movs	r2, #1
 8000ee0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000ee4:	480b      	ldr	r0, [pc, #44]	@ (8000f14 <setMotorDerecho+0x60>)
 8000ee6:	f001 fcdf 	bl	80028a8 <HAL_GPIO_WritePin>
		break;
 8000eea:	e00c      	b.n	8000f06 <setMotorDerecho+0x52>
		HAL_GPIO_WritePin(m1_derecha_GPIO_Port, m1_derecha_Pin, GPIO_PIN_SET);
 8000eec:	2201      	movs	r2, #1
 8000eee:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000ef2:	4808      	ldr	r0, [pc, #32]	@ (8000f14 <setMotorDerecho+0x60>)
 8000ef4:	f001 fcd8 	bl	80028a8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(m0_derecha_GPIO_Port, m0_derecha_Pin, GPIO_PIN_RESET);
 8000ef8:	2200      	movs	r2, #0
 8000efa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000efe:	4805      	ldr	r0, [pc, #20]	@ (8000f14 <setMotorDerecho+0x60>)
 8000f00:	f001 fcd2 	bl	80028a8 <HAL_GPIO_WritePin>
		break;
 8000f04:	bf00      	nop
}
 8000f06:	bf00      	nop
 8000f08:	3708      	adds	r7, #8
 8000f0a:	46bd      	mov	sp, r7
 8000f0c:	bd80      	pop	{r7, pc}
 8000f0e:	bf00      	nop
 8000f10:	40000400 	.word	0x40000400
 8000f14:	40020400 	.word	0x40020400

08000f18 <verificar_sensor>:

bool verificar_sensor(void) {
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	b082      	sub	sp, #8
 8000f1c:	af00      	add	r7, sp, #0
	static GPIO_PinState ultima_lectura_valida = GPIO_PIN_SET;
// Se crean variables para lecturas intermedias
	GPIO_PinState lectura1, lectura2;
// Se crea una variable booleana para indicar si hay un pedido
	bool pedido = false; // No hay pedido hasta que se pulsa el botón
 8000f1e:	2300      	movs	r3, #0
 8000f20:	71fb      	strb	r3, [r7, #7]
// Se lee el estado del botón
	lectura1 = HAL_GPIO_ReadPin(sensor_linea_GPIO_Port, sensor_linea_Pin);
 8000f22:	2180      	movs	r1, #128	@ 0x80
 8000f24:	4812      	ldr	r0, [pc, #72]	@ (8000f70 <verificar_sensor+0x58>)
 8000f26:	f001 fca7 	bl	8002878 <HAL_GPIO_ReadPin>
 8000f2a:	4603      	mov	r3, r0
 8000f2c:	71bb      	strb	r3, [r7, #6]
// Si hubo un cambio
	if (lectura1 != ultima_lectura_valida) {
 8000f2e:	4b11      	ldr	r3, [pc, #68]	@ (8000f74 <verificar_sensor+0x5c>)
 8000f30:	781b      	ldrb	r3, [r3, #0]
 8000f32:	79ba      	ldrb	r2, [r7, #6]
 8000f34:	429a      	cmp	r2, r3
 8000f36:	d015      	beq.n	8000f64 <verificar_sensor+0x4c>
// Se espera un tiempo para filtrar los rebotes
		HAL_Delay(20); // Retardo de 20 milisegundos
 8000f38:	2014      	movs	r0, #20
 8000f3a:	f000 fa59 	bl	80013f0 <HAL_Delay>
// Se lee nuevamente el estado del botón
		lectura2 = HAL_GPIO_ReadPin(sensor_linea_GPIO_Port, sensor_linea_Pin);
 8000f3e:	2180      	movs	r1, #128	@ 0x80
 8000f40:	480b      	ldr	r0, [pc, #44]	@ (8000f70 <verificar_sensor+0x58>)
 8000f42:	f001 fc99 	bl	8002878 <HAL_GPIO_ReadPin>
 8000f46:	4603      	mov	r3, r0
 8000f48:	717b      	strb	r3, [r7, #5]
// Si ambas lecturas son iguales, se considera una lectura válida
		if (lectura2 == lectura1)
 8000f4a:	797a      	ldrb	r2, [r7, #5]
 8000f4c:	79bb      	ldrb	r3, [r7, #6]
 8000f4e:	429a      	cmp	r2, r3
 8000f50:	d102      	bne.n	8000f58 <verificar_sensor+0x40>
			ultima_lectura_valida = lectura2;
 8000f52:	4a08      	ldr	r2, [pc, #32]	@ (8000f74 <verificar_sensor+0x5c>)
 8000f54:	797b      	ldrb	r3, [r7, #5]
 8000f56:	7013      	strb	r3, [r2, #0]
// Si el botón pasó de liberado a pulsado (1-->0), hubo un pedido de cambio de estado
		if (ultima_lectura_valida == GPIO_PIN_RESET)
 8000f58:	4b06      	ldr	r3, [pc, #24]	@ (8000f74 <verificar_sensor+0x5c>)
 8000f5a:	781b      	ldrb	r3, [r3, #0]
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d101      	bne.n	8000f64 <verificar_sensor+0x4c>
			pedido = true;
 8000f60:	2301      	movs	r3, #1
 8000f62:	71fb      	strb	r3, [r7, #7]
	}
	return pedido;
 8000f64:	79fb      	ldrb	r3, [r7, #7]
}
 8000f66:	4618      	mov	r0, r3
 8000f68:	3708      	adds	r7, #8
 8000f6a:	46bd      	mov	sp, r7
 8000f6c:	bd80      	pop	{r7, pc}
 8000f6e:	bf00      	nop
 8000f70:	40020800 	.word	0x40020800
 8000f74:	20000001 	.word	0x20000001

08000f78 <actualizo_pared>:

uint8_t actualizo_pared(uint8_t pared[cant_casilleros], uint8_t ubicacion,
		uint8_t orientacion_actual) { // ESTE CODIGO ES SUPONIENDO Q YA SE DETECTO LA PARED
 8000f78:	b480      	push	{r7}
 8000f7a:	b083      	sub	sp, #12
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	6078      	str	r0, [r7, #4]
 8000f80:	460b      	mov	r3, r1
 8000f82:	70fb      	strb	r3, [r7, #3]
 8000f84:	4613      	mov	r3, r2
 8000f86:	70bb      	strb	r3, [r7, #2]

	// actualizamos el valor de pared según la orientación
	switch (orientacion_actual) { //SE PONE 0X08 PORQ ES HEXADECIMAL, SI NO LO PONES ESTA EN OTRA BASE, ME HIZO RE CONFUNDIR
 8000f88:	78bb      	ldrb	r3, [r7, #2]
 8000f8a:	2b03      	cmp	r3, #3
 8000f8c:	d83a      	bhi.n	8001004 <actualizo_pared+0x8c>
 8000f8e:	a201      	add	r2, pc, #4	@ (adr r2, 8000f94 <actualizo_pared+0x1c>)
 8000f90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f94:	08000fa5 	.word	0x08000fa5
 8000f98:	08000fbd 	.word	0x08000fbd
 8000f9c:	08000fd5 	.word	0x08000fd5
 8000fa0:	08000fed 	.word	0x08000fed
	case NORTE: // TAMBIEN USO EL |= PARA Q SI DETECTA UNA PARED YA INICIALIZADA NO LA SUME Y ACUMULE UN CARRY , SI NO Q HAGA LA OR
		pared[ubicacion] |= 0x08;  // suma 8 (1000 en binario)
 8000fa4:	78fb      	ldrb	r3, [r7, #3]
 8000fa6:	687a      	ldr	r2, [r7, #4]
 8000fa8:	4413      	add	r3, r2
 8000faa:	781a      	ldrb	r2, [r3, #0]
 8000fac:	78fb      	ldrb	r3, [r7, #3]
 8000fae:	6879      	ldr	r1, [r7, #4]
 8000fb0:	440b      	add	r3, r1
 8000fb2:	f042 0208 	orr.w	r2, r2, #8
 8000fb6:	b2d2      	uxtb	r2, r2
 8000fb8:	701a      	strb	r2, [r3, #0]
		break;
 8000fba:	e025      	b.n	8001008 <actualizo_pared+0x90>
	case ESTE:
		pared[ubicacion] |= 0x04;  // suma 4 (0100 en binario)
 8000fbc:	78fb      	ldrb	r3, [r7, #3]
 8000fbe:	687a      	ldr	r2, [r7, #4]
 8000fc0:	4413      	add	r3, r2
 8000fc2:	781a      	ldrb	r2, [r3, #0]
 8000fc4:	78fb      	ldrb	r3, [r7, #3]
 8000fc6:	6879      	ldr	r1, [r7, #4]
 8000fc8:	440b      	add	r3, r1
 8000fca:	f042 0204 	orr.w	r2, r2, #4
 8000fce:	b2d2      	uxtb	r2, r2
 8000fd0:	701a      	strb	r2, [r3, #0]
		break;
 8000fd2:	e019      	b.n	8001008 <actualizo_pared+0x90>
	case SUR:
		pared[ubicacion] |= 0x02;  // suma 2 (0010 en binario)
 8000fd4:	78fb      	ldrb	r3, [r7, #3]
 8000fd6:	687a      	ldr	r2, [r7, #4]
 8000fd8:	4413      	add	r3, r2
 8000fda:	781a      	ldrb	r2, [r3, #0]
 8000fdc:	78fb      	ldrb	r3, [r7, #3]
 8000fde:	6879      	ldr	r1, [r7, #4]
 8000fe0:	440b      	add	r3, r1
 8000fe2:	f042 0202 	orr.w	r2, r2, #2
 8000fe6:	b2d2      	uxtb	r2, r2
 8000fe8:	701a      	strb	r2, [r3, #0]
		break;
 8000fea:	e00d      	b.n	8001008 <actualizo_pared+0x90>
	case OESTE:
		pared[ubicacion] |= 0x01;  // suma 1 (0001 en binario)
 8000fec:	78fb      	ldrb	r3, [r7, #3]
 8000fee:	687a      	ldr	r2, [r7, #4]
 8000ff0:	4413      	add	r3, r2
 8000ff2:	781a      	ldrb	r2, [r3, #0]
 8000ff4:	78fb      	ldrb	r3, [r7, #3]
 8000ff6:	6879      	ldr	r1, [r7, #4]
 8000ff8:	440b      	add	r3, r1
 8000ffa:	f042 0201 	orr.w	r2, r2, #1
 8000ffe:	b2d2      	uxtb	r2, r2
 8001000:	701a      	strb	r2, [r3, #0]
		break;
 8001002:	e001      	b.n	8001008 <actualizo_pared+0x90>
	default:
		return 0; // Orientación no válida
 8001004:	2300      	movs	r3, #0
 8001006:	e003      	b.n	8001010 <actualizo_pared+0x98>
	}
	return pared[ubicacion];  // devolvés el valor actualizado
 8001008:	78fb      	ldrb	r3, [r7, #3]
 800100a:	687a      	ldr	r2, [r7, #4]
 800100c:	4413      	add	r3, r2
 800100e:	781b      	ldrb	r3, [r3, #0]
}
 8001010:	4618      	mov	r0, r3
 8001012:	370c      	adds	r7, #12
 8001014:	46bd      	mov	sp, r7
 8001016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800101a:	4770      	bx	lr

0800101c <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 800101c:	b480      	push	{r7}
 800101e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001020:	b672      	cpsid	i
}
 8001022:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001024:	bf00      	nop
 8001026:	e7fd      	b.n	8001024 <Error_Handler+0x8>

08001028 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001028:	b580      	push	{r7, lr}
 800102a:	b082      	sub	sp, #8
 800102c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800102e:	2300      	movs	r3, #0
 8001030:	607b      	str	r3, [r7, #4]
 8001032:	4b10      	ldr	r3, [pc, #64]	@ (8001074 <HAL_MspInit+0x4c>)
 8001034:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001036:	4a0f      	ldr	r2, [pc, #60]	@ (8001074 <HAL_MspInit+0x4c>)
 8001038:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800103c:	6453      	str	r3, [r2, #68]	@ 0x44
 800103e:	4b0d      	ldr	r3, [pc, #52]	@ (8001074 <HAL_MspInit+0x4c>)
 8001040:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001042:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001046:	607b      	str	r3, [r7, #4]
 8001048:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800104a:	2300      	movs	r3, #0
 800104c:	603b      	str	r3, [r7, #0]
 800104e:	4b09      	ldr	r3, [pc, #36]	@ (8001074 <HAL_MspInit+0x4c>)
 8001050:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001052:	4a08      	ldr	r2, [pc, #32]	@ (8001074 <HAL_MspInit+0x4c>)
 8001054:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001058:	6413      	str	r3, [r2, #64]	@ 0x40
 800105a:	4b06      	ldr	r3, [pc, #24]	@ (8001074 <HAL_MspInit+0x4c>)
 800105c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800105e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001062:	603b      	str	r3, [r7, #0]
 8001064:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001066:	2007      	movs	r0, #7
 8001068:	f000 feb8 	bl	8001ddc <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800106c:	bf00      	nop
 800106e:	3708      	adds	r7, #8
 8001070:	46bd      	mov	sp, r7
 8001072:	bd80      	pop	{r7, pc}
 8001074:	40023800 	.word	0x40023800

08001078 <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	b08a      	sub	sp, #40	@ 0x28
 800107c:	af00      	add	r7, sp, #0
 800107e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001080:	f107 0314 	add.w	r3, r7, #20
 8001084:	2200      	movs	r2, #0
 8001086:	601a      	str	r2, [r3, #0]
 8001088:	605a      	str	r2, [r3, #4]
 800108a:	609a      	str	r2, [r3, #8]
 800108c:	60da      	str	r2, [r3, #12]
 800108e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001090:	687b      	ldr	r3, [r7, #4]
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	4a2f      	ldr	r2, [pc, #188]	@ (8001154 <HAL_ADC_MspInit+0xdc>)
 8001096:	4293      	cmp	r3, r2
 8001098:	d158      	bne.n	800114c <HAL_ADC_MspInit+0xd4>
  {
    /* USER CODE BEGIN ADC1_MspInit 0 */

    /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800109a:	2300      	movs	r3, #0
 800109c:	613b      	str	r3, [r7, #16]
 800109e:	4b2e      	ldr	r3, [pc, #184]	@ (8001158 <HAL_ADC_MspInit+0xe0>)
 80010a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010a2:	4a2d      	ldr	r2, [pc, #180]	@ (8001158 <HAL_ADC_MspInit+0xe0>)
 80010a4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010a8:	6453      	str	r3, [r2, #68]	@ 0x44
 80010aa:	4b2b      	ldr	r3, [pc, #172]	@ (8001158 <HAL_ADC_MspInit+0xe0>)
 80010ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010ae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80010b2:	613b      	str	r3, [r7, #16]
 80010b4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80010b6:	2300      	movs	r3, #0
 80010b8:	60fb      	str	r3, [r7, #12]
 80010ba:	4b27      	ldr	r3, [pc, #156]	@ (8001158 <HAL_ADC_MspInit+0xe0>)
 80010bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010be:	4a26      	ldr	r2, [pc, #152]	@ (8001158 <HAL_ADC_MspInit+0xe0>)
 80010c0:	f043 0302 	orr.w	r3, r3, #2
 80010c4:	6313      	str	r3, [r2, #48]	@ 0x30
 80010c6:	4b24      	ldr	r3, [pc, #144]	@ (8001158 <HAL_ADC_MspInit+0xe0>)
 80010c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ca:	f003 0302 	and.w	r3, r3, #2
 80010ce:	60fb      	str	r3, [r7, #12]
 80010d0:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PB0     ------> ADC1_IN8
    PB1     ------> ADC1_IN9
    */
    GPIO_InitStruct.Pin = sensor_derecho_Pin|sensor_izquierdo_Pin;
 80010d2:	2303      	movs	r3, #3
 80010d4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010d6:	2303      	movs	r3, #3
 80010d8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010da:	2300      	movs	r3, #0
 80010dc:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010de:	f107 0314 	add.w	r3, r7, #20
 80010e2:	4619      	mov	r1, r3
 80010e4:	481d      	ldr	r0, [pc, #116]	@ (800115c <HAL_ADC_MspInit+0xe4>)
 80010e6:	f001 fa2b 	bl	8002540 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 80010ea:	4b1d      	ldr	r3, [pc, #116]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 80010ec:	4a1d      	ldr	r2, [pc, #116]	@ (8001164 <HAL_ADC_MspInit+0xec>)
 80010ee:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 80010f0:	4b1b      	ldr	r3, [pc, #108]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 80010f2:	2200      	movs	r2, #0
 80010f4:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80010f6:	4b1a      	ldr	r3, [pc, #104]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 80010f8:	2200      	movs	r2, #0
 80010fa:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 80010fc:	4b18      	ldr	r3, [pc, #96]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 80010fe:	2200      	movs	r2, #0
 8001100:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001102:	4b17      	ldr	r3, [pc, #92]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 8001104:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001108:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800110a:	4b15      	ldr	r3, [pc, #84]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 800110c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001110:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001112:	4b13      	ldr	r3, [pc, #76]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 8001114:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001118:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800111a:	4b11      	ldr	r3, [pc, #68]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 800111c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001120:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_MEDIUM;
 8001122:	4b0f      	ldr	r3, [pc, #60]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 8001124:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001128:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800112a:	4b0d      	ldr	r3, [pc, #52]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 800112c:	2200      	movs	r2, #0
 800112e:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001130:	480b      	ldr	r0, [pc, #44]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 8001132:	f000 fe95 	bl	8001e60 <HAL_DMA_Init>
 8001136:	4603      	mov	r3, r0
 8001138:	2b00      	cmp	r3, #0
 800113a:	d001      	beq.n	8001140 <HAL_ADC_MspInit+0xc8>
    {
      Error_Handler();
 800113c:	f7ff ff6e 	bl	800101c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8001140:	687b      	ldr	r3, [r7, #4]
 8001142:	4a07      	ldr	r2, [pc, #28]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 8001144:	639a      	str	r2, [r3, #56]	@ 0x38
 8001146:	4a06      	ldr	r2, [pc, #24]	@ (8001160 <HAL_ADC_MspInit+0xe8>)
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	6393      	str	r3, [r2, #56]	@ 0x38

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 800114c:	bf00      	nop
 800114e:	3728      	adds	r7, #40	@ 0x28
 8001150:	46bd      	mov	sp, r7
 8001152:	bd80      	pop	{r7, pc}
 8001154:	40012000 	.word	0x40012000
 8001158:	40023800 	.word	0x40023800
 800115c:	40020400 	.word	0x40020400
 8001160:	20000074 	.word	0x20000074
 8001164:	40026410 	.word	0x40026410

08001168 <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001168:	b480      	push	{r7}
 800116a:	b085      	sub	sp, #20
 800116c:	af00      	add	r7, sp, #0
 800116e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM3)
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	681b      	ldr	r3, [r3, #0]
 8001174:	4a0b      	ldr	r2, [pc, #44]	@ (80011a4 <HAL_TIM_Base_MspInit+0x3c>)
 8001176:	4293      	cmp	r3, r2
 8001178:	d10d      	bne.n	8001196 <HAL_TIM_Base_MspInit+0x2e>
  {
    /* USER CODE BEGIN TIM3_MspInit 0 */

    /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800117a:	2300      	movs	r3, #0
 800117c:	60fb      	str	r3, [r7, #12]
 800117e:	4b0a      	ldr	r3, [pc, #40]	@ (80011a8 <HAL_TIM_Base_MspInit+0x40>)
 8001180:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001182:	4a09      	ldr	r2, [pc, #36]	@ (80011a8 <HAL_TIM_Base_MspInit+0x40>)
 8001184:	f043 0302 	orr.w	r3, r3, #2
 8001188:	6413      	str	r3, [r2, #64]	@ 0x40
 800118a:	4b07      	ldr	r3, [pc, #28]	@ (80011a8 <HAL_TIM_Base_MspInit+0x40>)
 800118c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800118e:	f003 0302 	and.w	r3, r3, #2
 8001192:	60fb      	str	r3, [r7, #12]
 8001194:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END TIM3_MspInit 1 */

  }

}
 8001196:	bf00      	nop
 8001198:	3714      	adds	r7, #20
 800119a:	46bd      	mov	sp, r7
 800119c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011a0:	4770      	bx	lr
 80011a2:	bf00      	nop
 80011a4:	40000400 	.word	0x40000400
 80011a8:	40023800 	.word	0x40023800

080011ac <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b088      	sub	sp, #32
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011b4:	f107 030c 	add.w	r3, r7, #12
 80011b8:	2200      	movs	r2, #0
 80011ba:	601a      	str	r2, [r3, #0]
 80011bc:	605a      	str	r2, [r3, #4]
 80011be:	609a      	str	r2, [r3, #8]
 80011c0:	60da      	str	r2, [r3, #12]
 80011c2:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 80011c4:	687b      	ldr	r3, [r7, #4]
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	4a12      	ldr	r2, [pc, #72]	@ (8001214 <HAL_TIM_MspPostInit+0x68>)
 80011ca:	4293      	cmp	r3, r2
 80011cc:	d11e      	bne.n	800120c <HAL_TIM_MspPostInit+0x60>
  {
    /* USER CODE BEGIN TIM3_MspPostInit 0 */

    /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80011ce:	2300      	movs	r3, #0
 80011d0:	60bb      	str	r3, [r7, #8]
 80011d2:	4b11      	ldr	r3, [pc, #68]	@ (8001218 <HAL_TIM_MspPostInit+0x6c>)
 80011d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011d6:	4a10      	ldr	r2, [pc, #64]	@ (8001218 <HAL_TIM_MspPostInit+0x6c>)
 80011d8:	f043 0304 	orr.w	r3, r3, #4
 80011dc:	6313      	str	r3, [r2, #48]	@ 0x30
 80011de:	4b0e      	ldr	r3, [pc, #56]	@ (8001218 <HAL_TIM_MspPostInit+0x6c>)
 80011e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011e2:	f003 0304 	and.w	r3, r3, #4
 80011e6:	60bb      	str	r3, [r7, #8]
 80011e8:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PC8     ------> TIM3_CH3
    PC9     ------> TIM3_CH4
    */
    GPIO_InitStruct.Pin = V_izquierda_Pin|V_derecha_Pin;
 80011ea:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80011ee:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011f0:	2302      	movs	r3, #2
 80011f2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011f4:	2300      	movs	r3, #0
 80011f6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011f8:	2300      	movs	r3, #0
 80011fa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80011fc:	2302      	movs	r3, #2
 80011fe:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001200:	f107 030c 	add.w	r3, r7, #12
 8001204:	4619      	mov	r1, r3
 8001206:	4805      	ldr	r0, [pc, #20]	@ (800121c <HAL_TIM_MspPostInit+0x70>)
 8001208:	f001 f99a 	bl	8002540 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM3_MspPostInit 1 */

    /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 800120c:	bf00      	nop
 800120e:	3720      	adds	r7, #32
 8001210:	46bd      	mov	sp, r7
 8001212:	bd80      	pop	{r7, pc}
 8001214:	40000400 	.word	0x40000400
 8001218:	40023800 	.word	0x40023800
 800121c:	40020800 	.word	0x40020800

08001220 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001220:	b480      	push	{r7}
 8001222:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001224:	bf00      	nop
 8001226:	e7fd      	b.n	8001224 <NMI_Handler+0x4>

08001228 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001228:	b480      	push	{r7}
 800122a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800122c:	bf00      	nop
 800122e:	e7fd      	b.n	800122c <HardFault_Handler+0x4>

08001230 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001230:	b480      	push	{r7}
 8001232:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001234:	bf00      	nop
 8001236:	e7fd      	b.n	8001234 <MemManage_Handler+0x4>

08001238 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001238:	b480      	push	{r7}
 800123a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800123c:	bf00      	nop
 800123e:	e7fd      	b.n	800123c <BusFault_Handler+0x4>

08001240 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001240:	b480      	push	{r7}
 8001242:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001244:	bf00      	nop
 8001246:	e7fd      	b.n	8001244 <UsageFault_Handler+0x4>

08001248 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001248:	b480      	push	{r7}
 800124a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800124c:	bf00      	nop
 800124e:	46bd      	mov	sp, r7
 8001250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001254:	4770      	bx	lr

08001256 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001256:	b480      	push	{r7}
 8001258:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800125a:	bf00      	nop
 800125c:	46bd      	mov	sp, r7
 800125e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001262:	4770      	bx	lr

08001264 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001264:	b480      	push	{r7}
 8001266:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001268:	bf00      	nop
 800126a:	46bd      	mov	sp, r7
 800126c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001270:	4770      	bx	lr

08001272 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001272:	b580      	push	{r7, lr}
 8001274:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001276:	f000 f89b 	bl	80013b0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800127a:	bf00      	nop
 800127c:	bd80      	pop	{r7, pc}
	...

08001280 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001280:	b580      	push	{r7, lr}
 8001282:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001284:	4802      	ldr	r0, [pc, #8]	@ (8001290 <DMA2_Stream0_IRQHandler+0x10>)
 8001286:	f000 fef1 	bl	800206c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 800128a:	bf00      	nop
 800128c:	bd80      	pop	{r7, pc}
 800128e:	bf00      	nop
 8001290:	20000074 	.word	0x20000074

08001294 <SystemInit>:
 8001294:	b480      	push	{r7}
 8001296:	af00      	add	r7, sp, #0
 8001298:	4b06      	ldr	r3, [pc, #24]	@ (80012b4 <SystemInit+0x20>)
 800129a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800129e:	4a05      	ldr	r2, [pc, #20]	@ (80012b4 <SystemInit+0x20>)
 80012a0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80012a4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80012a8:	bf00      	nop
 80012aa:	46bd      	mov	sp, r7
 80012ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b0:	4770      	bx	lr
 80012b2:	bf00      	nop
 80012b4:	e000ed00 	.word	0xe000ed00

080012b8 <Reset_Handler>:
 80012b8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80012f0 <LoopFillZerobss+0xe>
 80012bc:	f7ff ffea 	bl	8001294 <SystemInit>
 80012c0:	480c      	ldr	r0, [pc, #48]	@ (80012f4 <LoopFillZerobss+0x12>)
 80012c2:	490d      	ldr	r1, [pc, #52]	@ (80012f8 <LoopFillZerobss+0x16>)
 80012c4:	4a0d      	ldr	r2, [pc, #52]	@ (80012fc <LoopFillZerobss+0x1a>)
 80012c6:	2300      	movs	r3, #0
 80012c8:	e002      	b.n	80012d0 <LoopCopyDataInit>

080012ca <CopyDataInit>:
 80012ca:	58d4      	ldr	r4, [r2, r3]
 80012cc:	50c4      	str	r4, [r0, r3]
 80012ce:	3304      	adds	r3, #4

080012d0 <LoopCopyDataInit>:
 80012d0:	18c4      	adds	r4, r0, r3
 80012d2:	428c      	cmp	r4, r1
 80012d4:	d3f9      	bcc.n	80012ca <CopyDataInit>
 80012d6:	4a0a      	ldr	r2, [pc, #40]	@ (8001300 <LoopFillZerobss+0x1e>)
 80012d8:	4c0a      	ldr	r4, [pc, #40]	@ (8001304 <LoopFillZerobss+0x22>)
 80012da:	2300      	movs	r3, #0
 80012dc:	e001      	b.n	80012e2 <LoopFillZerobss>

080012de <FillZerobss>:
 80012de:	6013      	str	r3, [r2, #0]
 80012e0:	3204      	adds	r2, #4

080012e2 <LoopFillZerobss>:
 80012e2:	42a2      	cmp	r2, r4
 80012e4:	d3fb      	bcc.n	80012de <FillZerobss>
 80012e6:	f002 fdf1 	bl	8003ecc <__libc_init_array>
 80012ea:	f7ff f903 	bl	80004f4 <main>
 80012ee:	4770      	bx	lr
 80012f0:	20020000 	.word	0x20020000
 80012f4:	20000000 	.word	0x20000000
 80012f8:	20000010 	.word	0x20000010
 80012fc:	08003f54 	.word	0x08003f54
 8001300:	20000010 	.word	0x20000010
 8001304:	200001c8 	.word	0x200001c8

08001308 <ADC_IRQHandler>:
 8001308:	e7fe      	b.n	8001308 <ADC_IRQHandler>
	...

0800130c <HAL_Init>:
 800130c:	b580      	push	{r7, lr}
 800130e:	af00      	add	r7, sp, #0
 8001310:	4b0e      	ldr	r3, [pc, #56]	@ (800134c <HAL_Init+0x40>)
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	4a0d      	ldr	r2, [pc, #52]	@ (800134c <HAL_Init+0x40>)
 8001316:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800131a:	6013      	str	r3, [r2, #0]
 800131c:	4b0b      	ldr	r3, [pc, #44]	@ (800134c <HAL_Init+0x40>)
 800131e:	681b      	ldr	r3, [r3, #0]
 8001320:	4a0a      	ldr	r2, [pc, #40]	@ (800134c <HAL_Init+0x40>)
 8001322:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001326:	6013      	str	r3, [r2, #0]
 8001328:	4b08      	ldr	r3, [pc, #32]	@ (800134c <HAL_Init+0x40>)
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	4a07      	ldr	r2, [pc, #28]	@ (800134c <HAL_Init+0x40>)
 800132e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001332:	6013      	str	r3, [r2, #0]
 8001334:	2003      	movs	r0, #3
 8001336:	f000 fd51 	bl	8001ddc <HAL_NVIC_SetPriorityGrouping>
 800133a:	2000      	movs	r0, #0
 800133c:	f000 f808 	bl	8001350 <HAL_InitTick>
 8001340:	f7ff fe72 	bl	8001028 <HAL_MspInit>
 8001344:	2300      	movs	r3, #0
 8001346:	4618      	mov	r0, r3
 8001348:	bd80      	pop	{r7, pc}
 800134a:	bf00      	nop
 800134c:	40023c00 	.word	0x40023c00

08001350 <HAL_InitTick>:
 8001350:	b580      	push	{r7, lr}
 8001352:	b082      	sub	sp, #8
 8001354:	af00      	add	r7, sp, #0
 8001356:	6078      	str	r0, [r7, #4]
 8001358:	4b12      	ldr	r3, [pc, #72]	@ (80013a4 <HAL_InitTick+0x54>)
 800135a:	681a      	ldr	r2, [r3, #0]
 800135c:	4b12      	ldr	r3, [pc, #72]	@ (80013a8 <HAL_InitTick+0x58>)
 800135e:	781b      	ldrb	r3, [r3, #0]
 8001360:	4619      	mov	r1, r3
 8001362:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001366:	fbb3 f3f1 	udiv	r3, r3, r1
 800136a:	fbb2 f3f3 	udiv	r3, r2, r3
 800136e:	4618      	mov	r0, r3
 8001370:	f000 fd69 	bl	8001e46 <HAL_SYSTICK_Config>
 8001374:	4603      	mov	r3, r0
 8001376:	2b00      	cmp	r3, #0
 8001378:	d001      	beq.n	800137e <HAL_InitTick+0x2e>
 800137a:	2301      	movs	r3, #1
 800137c:	e00e      	b.n	800139c <HAL_InitTick+0x4c>
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	2b0f      	cmp	r3, #15
 8001382:	d80a      	bhi.n	800139a <HAL_InitTick+0x4a>
 8001384:	2200      	movs	r2, #0
 8001386:	6879      	ldr	r1, [r7, #4]
 8001388:	f04f 30ff 	mov.w	r0, #4294967295
 800138c:	f000 fd31 	bl	8001df2 <HAL_NVIC_SetPriority>
 8001390:	4a06      	ldr	r2, [pc, #24]	@ (80013ac <HAL_InitTick+0x5c>)
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	6013      	str	r3, [r2, #0]
 8001396:	2300      	movs	r3, #0
 8001398:	e000      	b.n	800139c <HAL_InitTick+0x4c>
 800139a:	2301      	movs	r3, #1
 800139c:	4618      	mov	r0, r3
 800139e:	3708      	adds	r7, #8
 80013a0:	46bd      	mov	sp, r7
 80013a2:	bd80      	pop	{r7, pc}
 80013a4:	20000004 	.word	0x20000004
 80013a8:	2000000c 	.word	0x2000000c
 80013ac:	20000008 	.word	0x20000008

080013b0 <HAL_IncTick>:
 80013b0:	b480      	push	{r7}
 80013b2:	af00      	add	r7, sp, #0
 80013b4:	4b06      	ldr	r3, [pc, #24]	@ (80013d0 <HAL_IncTick+0x20>)
 80013b6:	781b      	ldrb	r3, [r3, #0]
 80013b8:	461a      	mov	r2, r3
 80013ba:	4b06      	ldr	r3, [pc, #24]	@ (80013d4 <HAL_IncTick+0x24>)
 80013bc:	681b      	ldr	r3, [r3, #0]
 80013be:	4413      	add	r3, r2
 80013c0:	4a04      	ldr	r2, [pc, #16]	@ (80013d4 <HAL_IncTick+0x24>)
 80013c2:	6013      	str	r3, [r2, #0]
 80013c4:	bf00      	nop
 80013c6:	46bd      	mov	sp, r7
 80013c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013cc:	4770      	bx	lr
 80013ce:	bf00      	nop
 80013d0:	2000000c 	.word	0x2000000c
 80013d4:	200001c4 	.word	0x200001c4

080013d8 <HAL_GetTick>:
 80013d8:	b480      	push	{r7}
 80013da:	af00      	add	r7, sp, #0
 80013dc:	4b03      	ldr	r3, [pc, #12]	@ (80013ec <HAL_GetTick+0x14>)
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	4618      	mov	r0, r3
 80013e2:	46bd      	mov	sp, r7
 80013e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e8:	4770      	bx	lr
 80013ea:	bf00      	nop
 80013ec:	200001c4 	.word	0x200001c4

080013f0 <HAL_Delay>:
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b084      	sub	sp, #16
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
 80013f8:	f7ff ffee 	bl	80013d8 <HAL_GetTick>
 80013fc:	60b8      	str	r0, [r7, #8]
 80013fe:	687b      	ldr	r3, [r7, #4]
 8001400:	60fb      	str	r3, [r7, #12]
 8001402:	68fb      	ldr	r3, [r7, #12]
 8001404:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001408:	d005      	beq.n	8001416 <HAL_Delay+0x26>
 800140a:	4b0a      	ldr	r3, [pc, #40]	@ (8001434 <HAL_Delay+0x44>)
 800140c:	781b      	ldrb	r3, [r3, #0]
 800140e:	461a      	mov	r2, r3
 8001410:	68fb      	ldr	r3, [r7, #12]
 8001412:	4413      	add	r3, r2
 8001414:	60fb      	str	r3, [r7, #12]
 8001416:	bf00      	nop
 8001418:	f7ff ffde 	bl	80013d8 <HAL_GetTick>
 800141c:	4602      	mov	r2, r0
 800141e:	68bb      	ldr	r3, [r7, #8]
 8001420:	1ad3      	subs	r3, r2, r3
 8001422:	68fa      	ldr	r2, [r7, #12]
 8001424:	429a      	cmp	r2, r3
 8001426:	d8f7      	bhi.n	8001418 <HAL_Delay+0x28>
 8001428:	bf00      	nop
 800142a:	bf00      	nop
 800142c:	3710      	adds	r7, #16
 800142e:	46bd      	mov	sp, r7
 8001430:	bd80      	pop	{r7, pc}
 8001432:	bf00      	nop
 8001434:	2000000c 	.word	0x2000000c

08001438 <HAL_ADC_Init>:
 8001438:	b580      	push	{r7, lr}
 800143a:	b084      	sub	sp, #16
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	2300      	movs	r3, #0
 8001442:	73fb      	strb	r3, [r7, #15]
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	2b00      	cmp	r3, #0
 8001448:	d101      	bne.n	800144e <HAL_ADC_Init+0x16>
 800144a:	2301      	movs	r3, #1
 800144c:	e033      	b.n	80014b6 <HAL_ADC_Init+0x7e>
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001452:	2b00      	cmp	r3, #0
 8001454:	d109      	bne.n	800146a <HAL_ADC_Init+0x32>
 8001456:	6878      	ldr	r0, [r7, #4]
 8001458:	f7ff fe0e 	bl	8001078 <HAL_ADC_MspInit>
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	2200      	movs	r2, #0
 8001460:	645a      	str	r2, [r3, #68]	@ 0x44
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	2200      	movs	r2, #0
 8001466:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800146e:	f003 0310 	and.w	r3, r3, #16
 8001472:	2b00      	cmp	r3, #0
 8001474:	d118      	bne.n	80014a8 <HAL_ADC_Init+0x70>
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800147a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800147e:	f023 0302 	bic.w	r3, r3, #2
 8001482:	f043 0202 	orr.w	r2, r3, #2
 8001486:	687b      	ldr	r3, [r7, #4]
 8001488:	641a      	str	r2, [r3, #64]	@ 0x40
 800148a:	6878      	ldr	r0, [r7, #4]
 800148c:	f000 fa58 	bl	8001940 <ADC_Init>
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	2200      	movs	r2, #0
 8001494:	645a      	str	r2, [r3, #68]	@ 0x44
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800149a:	f023 0303 	bic.w	r3, r3, #3
 800149e:	f043 0201 	orr.w	r2, r3, #1
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80014a6:	e001      	b.n	80014ac <HAL_ADC_Init+0x74>
 80014a8:	2301      	movs	r3, #1
 80014aa:	73fb      	strb	r3, [r7, #15]
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	2200      	movs	r2, #0
 80014b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80014b4:	7bfb      	ldrb	r3, [r7, #15]
 80014b6:	4618      	mov	r0, r3
 80014b8:	3710      	adds	r7, #16
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}
	...

080014c0 <HAL_ADC_Start_DMA>:
 80014c0:	b580      	push	{r7, lr}
 80014c2:	b088      	sub	sp, #32
 80014c4:	af00      	add	r7, sp, #0
 80014c6:	60f8      	str	r0, [r7, #12]
 80014c8:	60b9      	str	r1, [r7, #8]
 80014ca:	607a      	str	r2, [r7, #4]
 80014cc:	2300      	movs	r3, #0
 80014ce:	617b      	str	r3, [r7, #20]
 80014d0:	2300      	movs	r3, #0
 80014d2:	77fb      	strb	r3, [r7, #31]
 80014d4:	68fb      	ldr	r3, [r7, #12]
 80014d6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80014da:	2b01      	cmp	r3, #1
 80014dc:	d101      	bne.n	80014e2 <HAL_ADC_Start_DMA+0x22>
 80014de:	2302      	movs	r3, #2
 80014e0:	e0eb      	b.n	80016ba <HAL_ADC_Start_DMA+0x1fa>
 80014e2:	68fb      	ldr	r3, [r7, #12]
 80014e4:	2201      	movs	r2, #1
 80014e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80014ea:	68fb      	ldr	r3, [r7, #12]
 80014ec:	681b      	ldr	r3, [r3, #0]
 80014ee:	689b      	ldr	r3, [r3, #8]
 80014f0:	f003 0301 	and.w	r3, r3, #1
 80014f4:	2b01      	cmp	r3, #1
 80014f6:	d018      	beq.n	800152a <HAL_ADC_Start_DMA+0x6a>
 80014f8:	68fb      	ldr	r3, [r7, #12]
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	689a      	ldr	r2, [r3, #8]
 80014fe:	68fb      	ldr	r3, [r7, #12]
 8001500:	681b      	ldr	r3, [r3, #0]
 8001502:	f042 0201 	orr.w	r2, r2, #1
 8001506:	609a      	str	r2, [r3, #8]
 8001508:	4b6e      	ldr	r3, [pc, #440]	@ (80016c4 <HAL_ADC_Start_DMA+0x204>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	4a6e      	ldr	r2, [pc, #440]	@ (80016c8 <HAL_ADC_Start_DMA+0x208>)
 800150e:	fba2 2303 	umull	r2, r3, r2, r3
 8001512:	0c9a      	lsrs	r2, r3, #18
 8001514:	4613      	mov	r3, r2
 8001516:	005b      	lsls	r3, r3, #1
 8001518:	4413      	add	r3, r2
 800151a:	617b      	str	r3, [r7, #20]
 800151c:	e002      	b.n	8001524 <HAL_ADC_Start_DMA+0x64>
 800151e:	697b      	ldr	r3, [r7, #20]
 8001520:	3b01      	subs	r3, #1
 8001522:	617b      	str	r3, [r7, #20]
 8001524:	697b      	ldr	r3, [r7, #20]
 8001526:	2b00      	cmp	r3, #0
 8001528:	d1f9      	bne.n	800151e <HAL_ADC_Start_DMA+0x5e>
 800152a:	68fb      	ldr	r3, [r7, #12]
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	689b      	ldr	r3, [r3, #8]
 8001530:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001534:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001538:	d107      	bne.n	800154a <HAL_ADC_Start_DMA+0x8a>
 800153a:	68fb      	ldr	r3, [r7, #12]
 800153c:	681b      	ldr	r3, [r3, #0]
 800153e:	689a      	ldr	r2, [r3, #8]
 8001540:	68fb      	ldr	r3, [r7, #12]
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001548:	609a      	str	r2, [r3, #8]
 800154a:	68fb      	ldr	r3, [r7, #12]
 800154c:	681b      	ldr	r3, [r3, #0]
 800154e:	689b      	ldr	r3, [r3, #8]
 8001550:	f003 0301 	and.w	r3, r3, #1
 8001554:	2b01      	cmp	r3, #1
 8001556:	f040 80a3 	bne.w	80016a0 <HAL_ADC_Start_DMA+0x1e0>
 800155a:	68fb      	ldr	r3, [r7, #12]
 800155c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800155e:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8001562:	f023 0301 	bic.w	r3, r3, #1
 8001566:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800156a:	68fb      	ldr	r3, [r7, #12]
 800156c:	641a      	str	r2, [r3, #64]	@ 0x40
 800156e:	68fb      	ldr	r3, [r7, #12]
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	685b      	ldr	r3, [r3, #4]
 8001574:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001578:	2b00      	cmp	r3, #0
 800157a:	d007      	beq.n	800158c <HAL_ADC_Start_DMA+0xcc>
 800157c:	68fb      	ldr	r3, [r7, #12]
 800157e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001580:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001584:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001588:	68fb      	ldr	r3, [r7, #12]
 800158a:	641a      	str	r2, [r3, #64]	@ 0x40
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001590:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001594:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001598:	d106      	bne.n	80015a8 <HAL_ADC_Start_DMA+0xe8>
 800159a:	68fb      	ldr	r3, [r7, #12]
 800159c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800159e:	f023 0206 	bic.w	r2, r3, #6
 80015a2:	68fb      	ldr	r3, [r7, #12]
 80015a4:	645a      	str	r2, [r3, #68]	@ 0x44
 80015a6:	e002      	b.n	80015ae <HAL_ADC_Start_DMA+0xee>
 80015a8:	68fb      	ldr	r3, [r7, #12]
 80015aa:	2200      	movs	r2, #0
 80015ac:	645a      	str	r2, [r3, #68]	@ 0x44
 80015ae:	68fb      	ldr	r3, [r7, #12]
 80015b0:	2200      	movs	r2, #0
 80015b2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80015b6:	4b45      	ldr	r3, [pc, #276]	@ (80016cc <HAL_ADC_Start_DMA+0x20c>)
 80015b8:	61bb      	str	r3, [r7, #24]
 80015ba:	68fb      	ldr	r3, [r7, #12]
 80015bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80015be:	4a44      	ldr	r2, [pc, #272]	@ (80016d0 <HAL_ADC_Start_DMA+0x210>)
 80015c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80015c2:	68fb      	ldr	r3, [r7, #12]
 80015c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80015c6:	4a43      	ldr	r2, [pc, #268]	@ (80016d4 <HAL_ADC_Start_DMA+0x214>)
 80015c8:	641a      	str	r2, [r3, #64]	@ 0x40
 80015ca:	68fb      	ldr	r3, [r7, #12]
 80015cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80015ce:	4a42      	ldr	r2, [pc, #264]	@ (80016d8 <HAL_ADC_Start_DMA+0x218>)
 80015d0:	64da      	str	r2, [r3, #76]	@ 0x4c
 80015d2:	68fb      	ldr	r3, [r7, #12]
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 80015da:	601a      	str	r2, [r3, #0]
 80015dc:	68fb      	ldr	r3, [r7, #12]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	685a      	ldr	r2, [r3, #4]
 80015e2:	68fb      	ldr	r3, [r7, #12]
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80015ea:	605a      	str	r2, [r3, #4]
 80015ec:	68fb      	ldr	r3, [r7, #12]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	689a      	ldr	r2, [r3, #8]
 80015f2:	68fb      	ldr	r3, [r7, #12]
 80015f4:	681b      	ldr	r3, [r3, #0]
 80015f6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80015fa:	609a      	str	r2, [r3, #8]
 80015fc:	68fb      	ldr	r3, [r7, #12]
 80015fe:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8001600:	68fb      	ldr	r3, [r7, #12]
 8001602:	681b      	ldr	r3, [r3, #0]
 8001604:	334c      	adds	r3, #76	@ 0x4c
 8001606:	4619      	mov	r1, r3
 8001608:	68ba      	ldr	r2, [r7, #8]
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	f000 fcd6 	bl	8001fbc <HAL_DMA_Start_IT>
 8001610:	4603      	mov	r3, r0
 8001612:	77fb      	strb	r3, [r7, #31]
 8001614:	69bb      	ldr	r3, [r7, #24]
 8001616:	685b      	ldr	r3, [r3, #4]
 8001618:	f003 031f 	and.w	r3, r3, #31
 800161c:	2b00      	cmp	r3, #0
 800161e:	d12a      	bne.n	8001676 <HAL_ADC_Start_DMA+0x1b6>
 8001620:	68fb      	ldr	r3, [r7, #12]
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	4a2d      	ldr	r2, [pc, #180]	@ (80016dc <HAL_ADC_Start_DMA+0x21c>)
 8001626:	4293      	cmp	r3, r2
 8001628:	d015      	beq.n	8001656 <HAL_ADC_Start_DMA+0x196>
 800162a:	68fb      	ldr	r3, [r7, #12]
 800162c:	681b      	ldr	r3, [r3, #0]
 800162e:	4a2c      	ldr	r2, [pc, #176]	@ (80016e0 <HAL_ADC_Start_DMA+0x220>)
 8001630:	4293      	cmp	r3, r2
 8001632:	d105      	bne.n	8001640 <HAL_ADC_Start_DMA+0x180>
 8001634:	4b25      	ldr	r3, [pc, #148]	@ (80016cc <HAL_ADC_Start_DMA+0x20c>)
 8001636:	685b      	ldr	r3, [r3, #4]
 8001638:	f003 031f 	and.w	r3, r3, #31
 800163c:	2b00      	cmp	r3, #0
 800163e:	d00a      	beq.n	8001656 <HAL_ADC_Start_DMA+0x196>
 8001640:	68fb      	ldr	r3, [r7, #12]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	4a27      	ldr	r2, [pc, #156]	@ (80016e4 <HAL_ADC_Start_DMA+0x224>)
 8001646:	4293      	cmp	r3, r2
 8001648:	d136      	bne.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 800164a:	4b20      	ldr	r3, [pc, #128]	@ (80016cc <HAL_ADC_Start_DMA+0x20c>)
 800164c:	685b      	ldr	r3, [r3, #4]
 800164e:	f003 0310 	and.w	r3, r3, #16
 8001652:	2b00      	cmp	r3, #0
 8001654:	d130      	bne.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 8001656:	68fb      	ldr	r3, [r7, #12]
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	689b      	ldr	r3, [r3, #8]
 800165c:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001660:	2b00      	cmp	r3, #0
 8001662:	d129      	bne.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 8001664:	68fb      	ldr	r3, [r7, #12]
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	689a      	ldr	r2, [r3, #8]
 800166a:	68fb      	ldr	r3, [r7, #12]
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001672:	609a      	str	r2, [r3, #8]
 8001674:	e020      	b.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 8001676:	68fb      	ldr	r3, [r7, #12]
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	4a18      	ldr	r2, [pc, #96]	@ (80016dc <HAL_ADC_Start_DMA+0x21c>)
 800167c:	4293      	cmp	r3, r2
 800167e:	d11b      	bne.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 8001680:	68fb      	ldr	r3, [r7, #12]
 8001682:	681b      	ldr	r3, [r3, #0]
 8001684:	689b      	ldr	r3, [r3, #8]
 8001686:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800168a:	2b00      	cmp	r3, #0
 800168c:	d114      	bne.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 800168e:	68fb      	ldr	r3, [r7, #12]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	689a      	ldr	r2, [r3, #8]
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800169c:	609a      	str	r2, [r3, #8]
 800169e:	e00b      	b.n	80016b8 <HAL_ADC_Start_DMA+0x1f8>
 80016a0:	68fb      	ldr	r3, [r7, #12]
 80016a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016a4:	f043 0210 	orr.w	r2, r3, #16
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	641a      	str	r2, [r3, #64]	@ 0x40
 80016ac:	68fb      	ldr	r3, [r7, #12]
 80016ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016b0:	f043 0201 	orr.w	r2, r3, #1
 80016b4:	68fb      	ldr	r3, [r7, #12]
 80016b6:	645a      	str	r2, [r3, #68]	@ 0x44
 80016b8:	7ffb      	ldrb	r3, [r7, #31]
 80016ba:	4618      	mov	r0, r3
 80016bc:	3720      	adds	r7, #32
 80016be:	46bd      	mov	sp, r7
 80016c0:	bd80      	pop	{r7, pc}
 80016c2:	bf00      	nop
 80016c4:	20000004 	.word	0x20000004
 80016c8:	431bde83 	.word	0x431bde83
 80016cc:	40012300 	.word	0x40012300
 80016d0:	08001b39 	.word	0x08001b39
 80016d4:	08001bf3 	.word	0x08001bf3
 80016d8:	08001c0f 	.word	0x08001c0f
 80016dc:	40012000 	.word	0x40012000
 80016e0:	40012100 	.word	0x40012100
 80016e4:	40012200 	.word	0x40012200

080016e8 <HAL_ADC_ErrorCallback>:
 80016e8:	b480      	push	{r7}
 80016ea:	b083      	sub	sp, #12
 80016ec:	af00      	add	r7, sp, #0
 80016ee:	6078      	str	r0, [r7, #4]
 80016f0:	bf00      	nop
 80016f2:	370c      	adds	r7, #12
 80016f4:	46bd      	mov	sp, r7
 80016f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016fa:	4770      	bx	lr

080016fc <HAL_ADC_ConfigChannel>:
 80016fc:	b480      	push	{r7}
 80016fe:	b085      	sub	sp, #20
 8001700:	af00      	add	r7, sp, #0
 8001702:	6078      	str	r0, [r7, #4]
 8001704:	6039      	str	r1, [r7, #0]
 8001706:	2300      	movs	r3, #0
 8001708:	60bb      	str	r3, [r7, #8]
 800170a:	687b      	ldr	r3, [r7, #4]
 800170c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001710:	2b01      	cmp	r3, #1
 8001712:	d101      	bne.n	8001718 <HAL_ADC_ConfigChannel+0x1c>
 8001714:	2302      	movs	r3, #2
 8001716:	e105      	b.n	8001924 <HAL_ADC_ConfigChannel+0x228>
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	2201      	movs	r2, #1
 800171c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001720:	683b      	ldr	r3, [r7, #0]
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	2b09      	cmp	r3, #9
 8001726:	d925      	bls.n	8001774 <HAL_ADC_ConfigChannel+0x78>
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	68d9      	ldr	r1, [r3, #12]
 800172e:	683b      	ldr	r3, [r7, #0]
 8001730:	681b      	ldr	r3, [r3, #0]
 8001732:	b29b      	uxth	r3, r3
 8001734:	461a      	mov	r2, r3
 8001736:	4613      	mov	r3, r2
 8001738:	005b      	lsls	r3, r3, #1
 800173a:	4413      	add	r3, r2
 800173c:	3b1e      	subs	r3, #30
 800173e:	2207      	movs	r2, #7
 8001740:	fa02 f303 	lsl.w	r3, r2, r3
 8001744:	43da      	mvns	r2, r3
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	681b      	ldr	r3, [r3, #0]
 800174a:	400a      	ands	r2, r1
 800174c:	60da      	str	r2, [r3, #12]
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	68d9      	ldr	r1, [r3, #12]
 8001754:	683b      	ldr	r3, [r7, #0]
 8001756:	689a      	ldr	r2, [r3, #8]
 8001758:	683b      	ldr	r3, [r7, #0]
 800175a:	681b      	ldr	r3, [r3, #0]
 800175c:	b29b      	uxth	r3, r3
 800175e:	4618      	mov	r0, r3
 8001760:	4603      	mov	r3, r0
 8001762:	005b      	lsls	r3, r3, #1
 8001764:	4403      	add	r3, r0
 8001766:	3b1e      	subs	r3, #30
 8001768:	409a      	lsls	r2, r3
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	430a      	orrs	r2, r1
 8001770:	60da      	str	r2, [r3, #12]
 8001772:	e022      	b.n	80017ba <HAL_ADC_ConfigChannel+0xbe>
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	6919      	ldr	r1, [r3, #16]
 800177a:	683b      	ldr	r3, [r7, #0]
 800177c:	681b      	ldr	r3, [r3, #0]
 800177e:	b29b      	uxth	r3, r3
 8001780:	461a      	mov	r2, r3
 8001782:	4613      	mov	r3, r2
 8001784:	005b      	lsls	r3, r3, #1
 8001786:	4413      	add	r3, r2
 8001788:	2207      	movs	r2, #7
 800178a:	fa02 f303 	lsl.w	r3, r2, r3
 800178e:	43da      	mvns	r2, r3
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	400a      	ands	r2, r1
 8001796:	611a      	str	r2, [r3, #16]
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	6919      	ldr	r1, [r3, #16]
 800179e:	683b      	ldr	r3, [r7, #0]
 80017a0:	689a      	ldr	r2, [r3, #8]
 80017a2:	683b      	ldr	r3, [r7, #0]
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	b29b      	uxth	r3, r3
 80017a8:	4618      	mov	r0, r3
 80017aa:	4603      	mov	r3, r0
 80017ac:	005b      	lsls	r3, r3, #1
 80017ae:	4403      	add	r3, r0
 80017b0:	409a      	lsls	r2, r3
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	430a      	orrs	r2, r1
 80017b8:	611a      	str	r2, [r3, #16]
 80017ba:	683b      	ldr	r3, [r7, #0]
 80017bc:	685b      	ldr	r3, [r3, #4]
 80017be:	2b06      	cmp	r3, #6
 80017c0:	d824      	bhi.n	800180c <HAL_ADC_ConfigChannel+0x110>
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80017c8:	683b      	ldr	r3, [r7, #0]
 80017ca:	685a      	ldr	r2, [r3, #4]
 80017cc:	4613      	mov	r3, r2
 80017ce:	009b      	lsls	r3, r3, #2
 80017d0:	4413      	add	r3, r2
 80017d2:	3b05      	subs	r3, #5
 80017d4:	221f      	movs	r2, #31
 80017d6:	fa02 f303 	lsl.w	r3, r2, r3
 80017da:	43da      	mvns	r2, r3
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	400a      	ands	r2, r1
 80017e2:	635a      	str	r2, [r3, #52]	@ 0x34
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80017ea:	683b      	ldr	r3, [r7, #0]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	b29b      	uxth	r3, r3
 80017f0:	4618      	mov	r0, r3
 80017f2:	683b      	ldr	r3, [r7, #0]
 80017f4:	685a      	ldr	r2, [r3, #4]
 80017f6:	4613      	mov	r3, r2
 80017f8:	009b      	lsls	r3, r3, #2
 80017fa:	4413      	add	r3, r2
 80017fc:	3b05      	subs	r3, #5
 80017fe:	fa00 f203 	lsl.w	r2, r0, r3
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	430a      	orrs	r2, r1
 8001808:	635a      	str	r2, [r3, #52]	@ 0x34
 800180a:	e04c      	b.n	80018a6 <HAL_ADC_ConfigChannel+0x1aa>
 800180c:	683b      	ldr	r3, [r7, #0]
 800180e:	685b      	ldr	r3, [r3, #4]
 8001810:	2b0c      	cmp	r3, #12
 8001812:	d824      	bhi.n	800185e <HAL_ADC_ConfigChannel+0x162>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800181a:	683b      	ldr	r3, [r7, #0]
 800181c:	685a      	ldr	r2, [r3, #4]
 800181e:	4613      	mov	r3, r2
 8001820:	009b      	lsls	r3, r3, #2
 8001822:	4413      	add	r3, r2
 8001824:	3b23      	subs	r3, #35	@ 0x23
 8001826:	221f      	movs	r2, #31
 8001828:	fa02 f303 	lsl.w	r3, r2, r3
 800182c:	43da      	mvns	r2, r3
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	400a      	ands	r2, r1
 8001834:	631a      	str	r2, [r3, #48]	@ 0x30
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800183c:	683b      	ldr	r3, [r7, #0]
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	b29b      	uxth	r3, r3
 8001842:	4618      	mov	r0, r3
 8001844:	683b      	ldr	r3, [r7, #0]
 8001846:	685a      	ldr	r2, [r3, #4]
 8001848:	4613      	mov	r3, r2
 800184a:	009b      	lsls	r3, r3, #2
 800184c:	4413      	add	r3, r2
 800184e:	3b23      	subs	r3, #35	@ 0x23
 8001850:	fa00 f203 	lsl.w	r2, r0, r3
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	430a      	orrs	r2, r1
 800185a:	631a      	str	r2, [r3, #48]	@ 0x30
 800185c:	e023      	b.n	80018a6 <HAL_ADC_ConfigChannel+0x1aa>
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001864:	683b      	ldr	r3, [r7, #0]
 8001866:	685a      	ldr	r2, [r3, #4]
 8001868:	4613      	mov	r3, r2
 800186a:	009b      	lsls	r3, r3, #2
 800186c:	4413      	add	r3, r2
 800186e:	3b41      	subs	r3, #65	@ 0x41
 8001870:	221f      	movs	r2, #31
 8001872:	fa02 f303 	lsl.w	r3, r2, r3
 8001876:	43da      	mvns	r2, r3
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	400a      	ands	r2, r1
 800187e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001886:	683b      	ldr	r3, [r7, #0]
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	b29b      	uxth	r3, r3
 800188c:	4618      	mov	r0, r3
 800188e:	683b      	ldr	r3, [r7, #0]
 8001890:	685a      	ldr	r2, [r3, #4]
 8001892:	4613      	mov	r3, r2
 8001894:	009b      	lsls	r3, r3, #2
 8001896:	4413      	add	r3, r2
 8001898:	3b41      	subs	r3, #65	@ 0x41
 800189a:	fa00 f203 	lsl.w	r2, r0, r3
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	430a      	orrs	r2, r1
 80018a4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80018a6:	4b22      	ldr	r3, [pc, #136]	@ (8001930 <HAL_ADC_ConfigChannel+0x234>)
 80018a8:	60fb      	str	r3, [r7, #12]
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	4a21      	ldr	r2, [pc, #132]	@ (8001934 <HAL_ADC_ConfigChannel+0x238>)
 80018b0:	4293      	cmp	r3, r2
 80018b2:	d109      	bne.n	80018c8 <HAL_ADC_ConfigChannel+0x1cc>
 80018b4:	683b      	ldr	r3, [r7, #0]
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	2b12      	cmp	r3, #18
 80018ba:	d105      	bne.n	80018c8 <HAL_ADC_ConfigChannel+0x1cc>
 80018bc:	68fb      	ldr	r3, [r7, #12]
 80018be:	685b      	ldr	r3, [r3, #4]
 80018c0:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80018c4:	68fb      	ldr	r3, [r7, #12]
 80018c6:	605a      	str	r2, [r3, #4]
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	4a19      	ldr	r2, [pc, #100]	@ (8001934 <HAL_ADC_ConfigChannel+0x238>)
 80018ce:	4293      	cmp	r3, r2
 80018d0:	d123      	bne.n	800191a <HAL_ADC_ConfigChannel+0x21e>
 80018d2:	683b      	ldr	r3, [r7, #0]
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	2b10      	cmp	r3, #16
 80018d8:	d003      	beq.n	80018e2 <HAL_ADC_ConfigChannel+0x1e6>
 80018da:	683b      	ldr	r3, [r7, #0]
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	2b11      	cmp	r3, #17
 80018e0:	d11b      	bne.n	800191a <HAL_ADC_ConfigChannel+0x21e>
 80018e2:	68fb      	ldr	r3, [r7, #12]
 80018e4:	685b      	ldr	r3, [r3, #4]
 80018e6:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80018ea:	68fb      	ldr	r3, [r7, #12]
 80018ec:	605a      	str	r2, [r3, #4]
 80018ee:	683b      	ldr	r3, [r7, #0]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	2b10      	cmp	r3, #16
 80018f4:	d111      	bne.n	800191a <HAL_ADC_ConfigChannel+0x21e>
 80018f6:	4b10      	ldr	r3, [pc, #64]	@ (8001938 <HAL_ADC_ConfigChannel+0x23c>)
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	4a10      	ldr	r2, [pc, #64]	@ (800193c <HAL_ADC_ConfigChannel+0x240>)
 80018fc:	fba2 2303 	umull	r2, r3, r2, r3
 8001900:	0c9a      	lsrs	r2, r3, #18
 8001902:	4613      	mov	r3, r2
 8001904:	009b      	lsls	r3, r3, #2
 8001906:	4413      	add	r3, r2
 8001908:	005b      	lsls	r3, r3, #1
 800190a:	60bb      	str	r3, [r7, #8]
 800190c:	e002      	b.n	8001914 <HAL_ADC_ConfigChannel+0x218>
 800190e:	68bb      	ldr	r3, [r7, #8]
 8001910:	3b01      	subs	r3, #1
 8001912:	60bb      	str	r3, [r7, #8]
 8001914:	68bb      	ldr	r3, [r7, #8]
 8001916:	2b00      	cmp	r3, #0
 8001918:	d1f9      	bne.n	800190e <HAL_ADC_ConfigChannel+0x212>
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	2200      	movs	r2, #0
 800191e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001922:	2300      	movs	r3, #0
 8001924:	4618      	mov	r0, r3
 8001926:	3714      	adds	r7, #20
 8001928:	46bd      	mov	sp, r7
 800192a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800192e:	4770      	bx	lr
 8001930:	40012300 	.word	0x40012300
 8001934:	40012000 	.word	0x40012000
 8001938:	20000004 	.word	0x20000004
 800193c:	431bde83 	.word	0x431bde83

08001940 <ADC_Init>:
 8001940:	b480      	push	{r7}
 8001942:	b085      	sub	sp, #20
 8001944:	af00      	add	r7, sp, #0
 8001946:	6078      	str	r0, [r7, #4]
 8001948:	4b79      	ldr	r3, [pc, #484]	@ (8001b30 <ADC_Init+0x1f0>)
 800194a:	60fb      	str	r3, [r7, #12]
 800194c:	68fb      	ldr	r3, [r7, #12]
 800194e:	685b      	ldr	r3, [r3, #4]
 8001950:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8001954:	68fb      	ldr	r3, [r7, #12]
 8001956:	605a      	str	r2, [r3, #4]
 8001958:	68fb      	ldr	r3, [r7, #12]
 800195a:	685a      	ldr	r2, [r3, #4]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	685b      	ldr	r3, [r3, #4]
 8001960:	431a      	orrs	r2, r3
 8001962:	68fb      	ldr	r3, [r7, #12]
 8001964:	605a      	str	r2, [r3, #4]
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	685a      	ldr	r2, [r3, #4]
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001974:	605a      	str	r2, [r3, #4]
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	6859      	ldr	r1, [r3, #4]
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	691b      	ldr	r3, [r3, #16]
 8001980:	021a      	lsls	r2, r3, #8
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	430a      	orrs	r2, r1
 8001988:	605a      	str	r2, [r3, #4]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	681b      	ldr	r3, [r3, #0]
 800198e:	685a      	ldr	r2, [r3, #4]
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8001998:	605a      	str	r2, [r3, #4]
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	6859      	ldr	r1, [r3, #4]
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	689a      	ldr	r2, [r3, #8]
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	430a      	orrs	r2, r1
 80019aa:	605a      	str	r2, [r3, #4]
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	689a      	ldr	r2, [r3, #8]
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80019ba:	609a      	str	r2, [r3, #8]
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	6899      	ldr	r1, [r3, #8]
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	68da      	ldr	r2, [r3, #12]
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	430a      	orrs	r2, r1
 80019cc:	609a      	str	r2, [r3, #8]
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80019d2:	4a58      	ldr	r2, [pc, #352]	@ (8001b34 <ADC_Init+0x1f4>)
 80019d4:	4293      	cmp	r3, r2
 80019d6:	d022      	beq.n	8001a1e <ADC_Init+0xde>
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	681b      	ldr	r3, [r3, #0]
 80019dc:	689a      	ldr	r2, [r3, #8]
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80019e6:	609a      	str	r2, [r3, #8]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	681b      	ldr	r3, [r3, #0]
 80019ec:	6899      	ldr	r1, [r3, #8]
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80019f2:	687b      	ldr	r3, [r7, #4]
 80019f4:	681b      	ldr	r3, [r3, #0]
 80019f6:	430a      	orrs	r2, r1
 80019f8:	609a      	str	r2, [r3, #8]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	689a      	ldr	r2, [r3, #8]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001a08:	609a      	str	r2, [r3, #8]
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	6899      	ldr	r1, [r3, #8]
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	430a      	orrs	r2, r1
 8001a1a:	609a      	str	r2, [r3, #8]
 8001a1c:	e00f      	b.n	8001a3e <ADC_Init+0xfe>
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	689a      	ldr	r2, [r3, #8]
 8001a24:	687b      	ldr	r3, [r7, #4]
 8001a26:	681b      	ldr	r3, [r3, #0]
 8001a28:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001a2c:	609a      	str	r2, [r3, #8]
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	689a      	ldr	r2, [r3, #8]
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8001a3c:	609a      	str	r2, [r3, #8]
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	689a      	ldr	r2, [r3, #8]
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	f022 0202 	bic.w	r2, r2, #2
 8001a4c:	609a      	str	r2, [r3, #8]
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	6899      	ldr	r1, [r3, #8]
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	7e1b      	ldrb	r3, [r3, #24]
 8001a58:	005a      	lsls	r2, r3, #1
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	430a      	orrs	r2, r1
 8001a60:	609a      	str	r2, [r3, #8]
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d01b      	beq.n	8001aa4 <ADC_Init+0x164>
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	681b      	ldr	r3, [r3, #0]
 8001a70:	685a      	ldr	r2, [r3, #4]
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8001a7a:	605a      	str	r2, [r3, #4]
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	681b      	ldr	r3, [r3, #0]
 8001a80:	685a      	ldr	r2, [r3, #4]
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8001a8a:	605a      	str	r2, [r3, #4]
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	6859      	ldr	r1, [r3, #4]
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a96:	3b01      	subs	r3, #1
 8001a98:	035a      	lsls	r2, r3, #13
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	430a      	orrs	r2, r1
 8001aa0:	605a      	str	r2, [r3, #4]
 8001aa2:	e007      	b.n	8001ab4 <ADC_Init+0x174>
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	685a      	ldr	r2, [r3, #4]
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001ab2:	605a      	str	r2, [r3, #4]
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001aba:	687b      	ldr	r3, [r7, #4]
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8001ac2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001aca:	687b      	ldr	r3, [r7, #4]
 8001acc:	69db      	ldr	r3, [r3, #28]
 8001ace:	3b01      	subs	r3, #1
 8001ad0:	051a      	lsls	r2, r3, #20
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	430a      	orrs	r2, r1
 8001ad8:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	689a      	ldr	r2, [r3, #8]
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001ae8:	609a      	str	r2, [r3, #8]
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	6899      	ldr	r1, [r3, #8]
 8001af0:	687b      	ldr	r3, [r7, #4]
 8001af2:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8001af6:	025a      	lsls	r2, r3, #9
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	430a      	orrs	r2, r1
 8001afe:	609a      	str	r2, [r3, #8]
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	689a      	ldr	r2, [r3, #8]
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	681b      	ldr	r3, [r3, #0]
 8001b0a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001b0e:	609a      	str	r2, [r3, #8]
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	681b      	ldr	r3, [r3, #0]
 8001b14:	6899      	ldr	r1, [r3, #8]
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	695b      	ldr	r3, [r3, #20]
 8001b1a:	029a      	lsls	r2, r3, #10
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	430a      	orrs	r2, r1
 8001b22:	609a      	str	r2, [r3, #8]
 8001b24:	bf00      	nop
 8001b26:	3714      	adds	r7, #20
 8001b28:	46bd      	mov	sp, r7
 8001b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b2e:	4770      	bx	lr
 8001b30:	40012300 	.word	0x40012300
 8001b34:	0f000001 	.word	0x0f000001

08001b38 <ADC_DMAConvCplt>:
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	b084      	sub	sp, #16
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	6078      	str	r0, [r7, #4]
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001b44:	60fb      	str	r3, [r7, #12]
 8001b46:	68fb      	ldr	r3, [r7, #12]
 8001b48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b4a:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8001b4e:	2b00      	cmp	r3, #0
 8001b50:	d13c      	bne.n	8001bcc <ADC_DMAConvCplt+0x94>
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b56:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001b5a:	68fb      	ldr	r3, [r7, #12]
 8001b5c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b5e:	68fb      	ldr	r3, [r7, #12]
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	689b      	ldr	r3, [r3, #8]
 8001b64:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d12b      	bne.n	8001bc4 <ADC_DMAConvCplt+0x8c>
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	7e1b      	ldrb	r3, [r3, #24]
 8001b70:	2b00      	cmp	r3, #0
 8001b72:	d127      	bne.n	8001bc4 <ADC_DMAConvCplt+0x8c>
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001b7a:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d006      	beq.n	8001b90 <ADC_DMAConvCplt+0x58>
 8001b82:	68fb      	ldr	r3, [r7, #12]
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	689b      	ldr	r3, [r3, #8]
 8001b88:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	d119      	bne.n	8001bc4 <ADC_DMAConvCplt+0x8c>
 8001b90:	68fb      	ldr	r3, [r7, #12]
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	685a      	ldr	r2, [r3, #4]
 8001b96:	68fb      	ldr	r3, [r7, #12]
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	f022 0220 	bic.w	r2, r2, #32
 8001b9e:	605a      	str	r2, [r3, #4]
 8001ba0:	68fb      	ldr	r3, [r7, #12]
 8001ba2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ba4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8001ba8:	68fb      	ldr	r3, [r7, #12]
 8001baa:	641a      	str	r2, [r3, #64]	@ 0x40
 8001bac:	68fb      	ldr	r3, [r7, #12]
 8001bae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bb0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d105      	bne.n	8001bc4 <ADC_DMAConvCplt+0x8c>
 8001bb8:	68fb      	ldr	r3, [r7, #12]
 8001bba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bbc:	f043 0201 	orr.w	r2, r3, #1
 8001bc0:	68fb      	ldr	r3, [r7, #12]
 8001bc2:	641a      	str	r2, [r3, #64]	@ 0x40
 8001bc4:	68f8      	ldr	r0, [r7, #12]
 8001bc6:	f7ff f85b 	bl	8000c80 <HAL_ADC_ConvCpltCallback>
 8001bca:	e00e      	b.n	8001bea <ADC_DMAConvCplt+0xb2>
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bd0:	f003 0310 	and.w	r3, r3, #16
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d003      	beq.n	8001be0 <ADC_DMAConvCplt+0xa8>
 8001bd8:	68f8      	ldr	r0, [r7, #12]
 8001bda:	f7ff fd85 	bl	80016e8 <HAL_ADC_ErrorCallback>
 8001bde:	e004      	b.n	8001bea <ADC_DMAConvCplt+0xb2>
 8001be0:	68fb      	ldr	r3, [r7, #12]
 8001be2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001be4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001be6:	6878      	ldr	r0, [r7, #4]
 8001be8:	4798      	blx	r3
 8001bea:	bf00      	nop
 8001bec:	3710      	adds	r7, #16
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	bd80      	pop	{r7, pc}

08001bf2 <ADC_DMAHalfConvCplt>:
 8001bf2:	b580      	push	{r7, lr}
 8001bf4:	b084      	sub	sp, #16
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	6078      	str	r0, [r7, #4]
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001bfe:	60fb      	str	r3, [r7, #12]
 8001c00:	68f8      	ldr	r0, [r7, #12]
 8001c02:	f7ff f82f 	bl	8000c64 <HAL_ADC_ConvHalfCpltCallback>
 8001c06:	bf00      	nop
 8001c08:	3710      	adds	r7, #16
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	bd80      	pop	{r7, pc}

08001c0e <ADC_DMAError>:
 8001c0e:	b580      	push	{r7, lr}
 8001c10:	b084      	sub	sp, #16
 8001c12:	af00      	add	r7, sp, #0
 8001c14:	6078      	str	r0, [r7, #4]
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001c1a:	60fb      	str	r3, [r7, #12]
 8001c1c:	68fb      	ldr	r3, [r7, #12]
 8001c1e:	2240      	movs	r2, #64	@ 0x40
 8001c20:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c22:	68fb      	ldr	r3, [r7, #12]
 8001c24:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c26:	f043 0204 	orr.w	r2, r3, #4
 8001c2a:	68fb      	ldr	r3, [r7, #12]
 8001c2c:	645a      	str	r2, [r3, #68]	@ 0x44
 8001c2e:	68f8      	ldr	r0, [r7, #12]
 8001c30:	f7ff fd5a 	bl	80016e8 <HAL_ADC_ErrorCallback>
 8001c34:	bf00      	nop
 8001c36:	3710      	adds	r7, #16
 8001c38:	46bd      	mov	sp, r7
 8001c3a:	bd80      	pop	{r7, pc}

08001c3c <__NVIC_SetPriorityGrouping>:
 8001c3c:	b480      	push	{r7}
 8001c3e:	b085      	sub	sp, #20
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	f003 0307 	and.w	r3, r3, #7
 8001c4a:	60fb      	str	r3, [r7, #12]
 8001c4c:	4b0c      	ldr	r3, [pc, #48]	@ (8001c80 <__NVIC_SetPriorityGrouping+0x44>)
 8001c4e:	68db      	ldr	r3, [r3, #12]
 8001c50:	60bb      	str	r3, [r7, #8]
 8001c52:	68ba      	ldr	r2, [r7, #8]
 8001c54:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001c58:	4013      	ands	r3, r2
 8001c5a:	60bb      	str	r3, [r7, #8]
 8001c5c:	68fb      	ldr	r3, [r7, #12]
 8001c5e:	021a      	lsls	r2, r3, #8
 8001c60:	68bb      	ldr	r3, [r7, #8]
 8001c62:	4313      	orrs	r3, r2
 8001c64:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001c68:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001c6c:	60bb      	str	r3, [r7, #8]
 8001c6e:	4a04      	ldr	r2, [pc, #16]	@ (8001c80 <__NVIC_SetPriorityGrouping+0x44>)
 8001c70:	68bb      	ldr	r3, [r7, #8]
 8001c72:	60d3      	str	r3, [r2, #12]
 8001c74:	bf00      	nop
 8001c76:	3714      	adds	r7, #20
 8001c78:	46bd      	mov	sp, r7
 8001c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c7e:	4770      	bx	lr
 8001c80:	e000ed00 	.word	0xe000ed00

08001c84 <__NVIC_GetPriorityGrouping>:
 8001c84:	b480      	push	{r7}
 8001c86:	af00      	add	r7, sp, #0
 8001c88:	4b04      	ldr	r3, [pc, #16]	@ (8001c9c <__NVIC_GetPriorityGrouping+0x18>)
 8001c8a:	68db      	ldr	r3, [r3, #12]
 8001c8c:	0a1b      	lsrs	r3, r3, #8
 8001c8e:	f003 0307 	and.w	r3, r3, #7
 8001c92:	4618      	mov	r0, r3
 8001c94:	46bd      	mov	sp, r7
 8001c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c9a:	4770      	bx	lr
 8001c9c:	e000ed00 	.word	0xe000ed00

08001ca0 <__NVIC_EnableIRQ>:
 8001ca0:	b480      	push	{r7}
 8001ca2:	b083      	sub	sp, #12
 8001ca4:	af00      	add	r7, sp, #0
 8001ca6:	4603      	mov	r3, r0
 8001ca8:	71fb      	strb	r3, [r7, #7]
 8001caa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	db0b      	blt.n	8001cca <__NVIC_EnableIRQ+0x2a>
 8001cb2:	79fb      	ldrb	r3, [r7, #7]
 8001cb4:	f003 021f 	and.w	r2, r3, #31
 8001cb8:	4907      	ldr	r1, [pc, #28]	@ (8001cd8 <__NVIC_EnableIRQ+0x38>)
 8001cba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cbe:	095b      	lsrs	r3, r3, #5
 8001cc0:	2001      	movs	r0, #1
 8001cc2:	fa00 f202 	lsl.w	r2, r0, r2
 8001cc6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001cca:	bf00      	nop
 8001ccc:	370c      	adds	r7, #12
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd4:	4770      	bx	lr
 8001cd6:	bf00      	nop
 8001cd8:	e000e100 	.word	0xe000e100

08001cdc <__NVIC_SetPriority>:
 8001cdc:	b480      	push	{r7}
 8001cde:	b083      	sub	sp, #12
 8001ce0:	af00      	add	r7, sp, #0
 8001ce2:	4603      	mov	r3, r0
 8001ce4:	6039      	str	r1, [r7, #0]
 8001ce6:	71fb      	strb	r3, [r7, #7]
 8001ce8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	db0a      	blt.n	8001d06 <__NVIC_SetPriority+0x2a>
 8001cf0:	683b      	ldr	r3, [r7, #0]
 8001cf2:	b2da      	uxtb	r2, r3
 8001cf4:	490c      	ldr	r1, [pc, #48]	@ (8001d28 <__NVIC_SetPriority+0x4c>)
 8001cf6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cfa:	0112      	lsls	r2, r2, #4
 8001cfc:	b2d2      	uxtb	r2, r2
 8001cfe:	440b      	add	r3, r1
 8001d00:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001d04:	e00a      	b.n	8001d1c <__NVIC_SetPriority+0x40>
 8001d06:	683b      	ldr	r3, [r7, #0]
 8001d08:	b2da      	uxtb	r2, r3
 8001d0a:	4908      	ldr	r1, [pc, #32]	@ (8001d2c <__NVIC_SetPriority+0x50>)
 8001d0c:	79fb      	ldrb	r3, [r7, #7]
 8001d0e:	f003 030f 	and.w	r3, r3, #15
 8001d12:	3b04      	subs	r3, #4
 8001d14:	0112      	lsls	r2, r2, #4
 8001d16:	b2d2      	uxtb	r2, r2
 8001d18:	440b      	add	r3, r1
 8001d1a:	761a      	strb	r2, [r3, #24]
 8001d1c:	bf00      	nop
 8001d1e:	370c      	adds	r7, #12
 8001d20:	46bd      	mov	sp, r7
 8001d22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d26:	4770      	bx	lr
 8001d28:	e000e100 	.word	0xe000e100
 8001d2c:	e000ed00 	.word	0xe000ed00

08001d30 <NVIC_EncodePriority>:
 8001d30:	b480      	push	{r7}
 8001d32:	b089      	sub	sp, #36	@ 0x24
 8001d34:	af00      	add	r7, sp, #0
 8001d36:	60f8      	str	r0, [r7, #12]
 8001d38:	60b9      	str	r1, [r7, #8]
 8001d3a:	607a      	str	r2, [r7, #4]
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	f003 0307 	and.w	r3, r3, #7
 8001d42:	61fb      	str	r3, [r7, #28]
 8001d44:	69fb      	ldr	r3, [r7, #28]
 8001d46:	f1c3 0307 	rsb	r3, r3, #7
 8001d4a:	2b04      	cmp	r3, #4
 8001d4c:	bf28      	it	cs
 8001d4e:	2304      	movcs	r3, #4
 8001d50:	61bb      	str	r3, [r7, #24]
 8001d52:	69fb      	ldr	r3, [r7, #28]
 8001d54:	3304      	adds	r3, #4
 8001d56:	2b06      	cmp	r3, #6
 8001d58:	d902      	bls.n	8001d60 <NVIC_EncodePriority+0x30>
 8001d5a:	69fb      	ldr	r3, [r7, #28]
 8001d5c:	3b03      	subs	r3, #3
 8001d5e:	e000      	b.n	8001d62 <NVIC_EncodePriority+0x32>
 8001d60:	2300      	movs	r3, #0
 8001d62:	617b      	str	r3, [r7, #20]
 8001d64:	f04f 32ff 	mov.w	r2, #4294967295
 8001d68:	69bb      	ldr	r3, [r7, #24]
 8001d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8001d6e:	43da      	mvns	r2, r3
 8001d70:	68bb      	ldr	r3, [r7, #8]
 8001d72:	401a      	ands	r2, r3
 8001d74:	697b      	ldr	r3, [r7, #20]
 8001d76:	409a      	lsls	r2, r3
 8001d78:	f04f 31ff 	mov.w	r1, #4294967295
 8001d7c:	697b      	ldr	r3, [r7, #20]
 8001d7e:	fa01 f303 	lsl.w	r3, r1, r3
 8001d82:	43d9      	mvns	r1, r3
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	400b      	ands	r3, r1
 8001d88:	4313      	orrs	r3, r2
 8001d8a:	4618      	mov	r0, r3
 8001d8c:	3724      	adds	r7, #36	@ 0x24
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d94:	4770      	bx	lr
	...

08001d98 <SysTick_Config>:
 8001d98:	b580      	push	{r7, lr}
 8001d9a:	b082      	sub	sp, #8
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	3b01      	subs	r3, #1
 8001da4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001da8:	d301      	bcc.n	8001dae <SysTick_Config+0x16>
 8001daa:	2301      	movs	r3, #1
 8001dac:	e00f      	b.n	8001dce <SysTick_Config+0x36>
 8001dae:	4a0a      	ldr	r2, [pc, #40]	@ (8001dd8 <SysTick_Config+0x40>)
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	3b01      	subs	r3, #1
 8001db4:	6053      	str	r3, [r2, #4]
 8001db6:	210f      	movs	r1, #15
 8001db8:	f04f 30ff 	mov.w	r0, #4294967295
 8001dbc:	f7ff ff8e 	bl	8001cdc <__NVIC_SetPriority>
 8001dc0:	4b05      	ldr	r3, [pc, #20]	@ (8001dd8 <SysTick_Config+0x40>)
 8001dc2:	2200      	movs	r2, #0
 8001dc4:	609a      	str	r2, [r3, #8]
 8001dc6:	4b04      	ldr	r3, [pc, #16]	@ (8001dd8 <SysTick_Config+0x40>)
 8001dc8:	2207      	movs	r2, #7
 8001dca:	601a      	str	r2, [r3, #0]
 8001dcc:	2300      	movs	r3, #0
 8001dce:	4618      	mov	r0, r3
 8001dd0:	3708      	adds	r7, #8
 8001dd2:	46bd      	mov	sp, r7
 8001dd4:	bd80      	pop	{r7, pc}
 8001dd6:	bf00      	nop
 8001dd8:	e000e010 	.word	0xe000e010

08001ddc <HAL_NVIC_SetPriorityGrouping>:
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	b082      	sub	sp, #8
 8001de0:	af00      	add	r7, sp, #0
 8001de2:	6078      	str	r0, [r7, #4]
 8001de4:	6878      	ldr	r0, [r7, #4]
 8001de6:	f7ff ff29 	bl	8001c3c <__NVIC_SetPriorityGrouping>
 8001dea:	bf00      	nop
 8001dec:	3708      	adds	r7, #8
 8001dee:	46bd      	mov	sp, r7
 8001df0:	bd80      	pop	{r7, pc}

08001df2 <HAL_NVIC_SetPriority>:
 8001df2:	b580      	push	{r7, lr}
 8001df4:	b086      	sub	sp, #24
 8001df6:	af00      	add	r7, sp, #0
 8001df8:	4603      	mov	r3, r0
 8001dfa:	60b9      	str	r1, [r7, #8]
 8001dfc:	607a      	str	r2, [r7, #4]
 8001dfe:	73fb      	strb	r3, [r7, #15]
 8001e00:	2300      	movs	r3, #0
 8001e02:	617b      	str	r3, [r7, #20]
 8001e04:	f7ff ff3e 	bl	8001c84 <__NVIC_GetPriorityGrouping>
 8001e08:	6178      	str	r0, [r7, #20]
 8001e0a:	687a      	ldr	r2, [r7, #4]
 8001e0c:	68b9      	ldr	r1, [r7, #8]
 8001e0e:	6978      	ldr	r0, [r7, #20]
 8001e10:	f7ff ff8e 	bl	8001d30 <NVIC_EncodePriority>
 8001e14:	4602      	mov	r2, r0
 8001e16:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001e1a:	4611      	mov	r1, r2
 8001e1c:	4618      	mov	r0, r3
 8001e1e:	f7ff ff5d 	bl	8001cdc <__NVIC_SetPriority>
 8001e22:	bf00      	nop
 8001e24:	3718      	adds	r7, #24
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bd80      	pop	{r7, pc}

08001e2a <HAL_NVIC_EnableIRQ>:
 8001e2a:	b580      	push	{r7, lr}
 8001e2c:	b082      	sub	sp, #8
 8001e2e:	af00      	add	r7, sp, #0
 8001e30:	4603      	mov	r3, r0
 8001e32:	71fb      	strb	r3, [r7, #7]
 8001e34:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e38:	4618      	mov	r0, r3
 8001e3a:	f7ff ff31 	bl	8001ca0 <__NVIC_EnableIRQ>
 8001e3e:	bf00      	nop
 8001e40:	3708      	adds	r7, #8
 8001e42:	46bd      	mov	sp, r7
 8001e44:	bd80      	pop	{r7, pc}

08001e46 <HAL_SYSTICK_Config>:
 8001e46:	b580      	push	{r7, lr}
 8001e48:	b082      	sub	sp, #8
 8001e4a:	af00      	add	r7, sp, #0
 8001e4c:	6078      	str	r0, [r7, #4]
 8001e4e:	6878      	ldr	r0, [r7, #4]
 8001e50:	f7ff ffa2 	bl	8001d98 <SysTick_Config>
 8001e54:	4603      	mov	r3, r0
 8001e56:	4618      	mov	r0, r3
 8001e58:	3708      	adds	r7, #8
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	bd80      	pop	{r7, pc}
	...

08001e60 <HAL_DMA_Init>:
 8001e60:	b580      	push	{r7, lr}
 8001e62:	b086      	sub	sp, #24
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	6078      	str	r0, [r7, #4]
 8001e68:	2300      	movs	r3, #0
 8001e6a:	617b      	str	r3, [r7, #20]
 8001e6c:	f7ff fab4 	bl	80013d8 <HAL_GetTick>
 8001e70:	6138      	str	r0, [r7, #16]
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	2b00      	cmp	r3, #0
 8001e76:	d101      	bne.n	8001e7c <HAL_DMA_Init+0x1c>
 8001e78:	2301      	movs	r3, #1
 8001e7a:	e099      	b.n	8001fb0 <HAL_DMA_Init+0x150>
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	2202      	movs	r2, #2
 8001e80:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	2200      	movs	r2, #0
 8001e88:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	681a      	ldr	r2, [r3, #0]
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f022 0201 	bic.w	r2, r2, #1
 8001e9a:	601a      	str	r2, [r3, #0]
 8001e9c:	e00f      	b.n	8001ebe <HAL_DMA_Init+0x5e>
 8001e9e:	f7ff fa9b 	bl	80013d8 <HAL_GetTick>
 8001ea2:	4602      	mov	r2, r0
 8001ea4:	693b      	ldr	r3, [r7, #16]
 8001ea6:	1ad3      	subs	r3, r2, r3
 8001ea8:	2b05      	cmp	r3, #5
 8001eaa:	d908      	bls.n	8001ebe <HAL_DMA_Init+0x5e>
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	2220      	movs	r2, #32
 8001eb0:	655a      	str	r2, [r3, #84]	@ 0x54
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	2203      	movs	r2, #3
 8001eb6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001eba:	2303      	movs	r3, #3
 8001ebc:	e078      	b.n	8001fb0 <HAL_DMA_Init+0x150>
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	f003 0301 	and.w	r3, r3, #1
 8001ec8:	2b00      	cmp	r3, #0
 8001eca:	d1e8      	bne.n	8001e9e <HAL_DMA_Init+0x3e>
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	617b      	str	r3, [r7, #20]
 8001ed4:	697a      	ldr	r2, [r7, #20]
 8001ed6:	4b38      	ldr	r3, [pc, #224]	@ (8001fb8 <HAL_DMA_Init+0x158>)
 8001ed8:	4013      	ands	r3, r2
 8001eda:	617b      	str	r3, [r7, #20]
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	685a      	ldr	r2, [r3, #4]
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	689b      	ldr	r3, [r3, #8]
 8001ee4:	431a      	orrs	r2, r3
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	68db      	ldr	r3, [r3, #12]
 8001eea:	431a      	orrs	r2, r3
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	691b      	ldr	r3, [r3, #16]
 8001ef0:	431a      	orrs	r2, r3
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	695b      	ldr	r3, [r3, #20]
 8001ef6:	431a      	orrs	r2, r3
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	699b      	ldr	r3, [r3, #24]
 8001efc:	431a      	orrs	r2, r3
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	69db      	ldr	r3, [r3, #28]
 8001f02:	431a      	orrs	r2, r3
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	6a1b      	ldr	r3, [r3, #32]
 8001f08:	4313      	orrs	r3, r2
 8001f0a:	697a      	ldr	r2, [r7, #20]
 8001f0c:	4313      	orrs	r3, r2
 8001f0e:	617b      	str	r3, [r7, #20]
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f14:	2b04      	cmp	r3, #4
 8001f16:	d107      	bne.n	8001f28 <HAL_DMA_Init+0xc8>
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f20:	4313      	orrs	r3, r2
 8001f22:	697a      	ldr	r2, [r7, #20]
 8001f24:	4313      	orrs	r3, r2
 8001f26:	617b      	str	r3, [r7, #20]
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	697a      	ldr	r2, [r7, #20]
 8001f2e:	601a      	str	r2, [r3, #0]
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	681b      	ldr	r3, [r3, #0]
 8001f34:	695b      	ldr	r3, [r3, #20]
 8001f36:	617b      	str	r3, [r7, #20]
 8001f38:	697b      	ldr	r3, [r7, #20]
 8001f3a:	f023 0307 	bic.w	r3, r3, #7
 8001f3e:	617b      	str	r3, [r7, #20]
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f44:	697a      	ldr	r2, [r7, #20]
 8001f46:	4313      	orrs	r3, r2
 8001f48:	617b      	str	r3, [r7, #20]
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f4e:	2b04      	cmp	r3, #4
 8001f50:	d117      	bne.n	8001f82 <HAL_DMA_Init+0x122>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001f56:	697a      	ldr	r2, [r7, #20]
 8001f58:	4313      	orrs	r3, r2
 8001f5a:	617b      	str	r3, [r7, #20]
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d00e      	beq.n	8001f82 <HAL_DMA_Init+0x122>
 8001f64:	6878      	ldr	r0, [r7, #4]
 8001f66:	f000 fa6f 	bl	8002448 <DMA_CheckFifoParam>
 8001f6a:	4603      	mov	r3, r0
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d008      	beq.n	8001f82 <HAL_DMA_Init+0x122>
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	2240      	movs	r2, #64	@ 0x40
 8001f74:	655a      	str	r2, [r3, #84]	@ 0x54
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	2201      	movs	r2, #1
 8001f7a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001f7e:	2301      	movs	r3, #1
 8001f80:	e016      	b.n	8001fb0 <HAL_DMA_Init+0x150>
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	697a      	ldr	r2, [r7, #20]
 8001f88:	615a      	str	r2, [r3, #20]
 8001f8a:	6878      	ldr	r0, [r7, #4]
 8001f8c:	f000 fa26 	bl	80023dc <DMA_CalcBaseAndBitshift>
 8001f90:	4603      	mov	r3, r0
 8001f92:	60fb      	str	r3, [r7, #12]
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001f98:	223f      	movs	r2, #63	@ 0x3f
 8001f9a:	409a      	lsls	r2, r3
 8001f9c:	68fb      	ldr	r3, [r7, #12]
 8001f9e:	609a      	str	r2, [r3, #8]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	2200      	movs	r2, #0
 8001fa4:	655a      	str	r2, [r3, #84]	@ 0x54
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	2201      	movs	r2, #1
 8001faa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001fae:	2300      	movs	r3, #0
 8001fb0:	4618      	mov	r0, r3
 8001fb2:	3718      	adds	r7, #24
 8001fb4:	46bd      	mov	sp, r7
 8001fb6:	bd80      	pop	{r7, pc}
 8001fb8:	f010803f 	.word	0xf010803f

08001fbc <HAL_DMA_Start_IT>:
 8001fbc:	b580      	push	{r7, lr}
 8001fbe:	b086      	sub	sp, #24
 8001fc0:	af00      	add	r7, sp, #0
 8001fc2:	60f8      	str	r0, [r7, #12]
 8001fc4:	60b9      	str	r1, [r7, #8]
 8001fc6:	607a      	str	r2, [r7, #4]
 8001fc8:	603b      	str	r3, [r7, #0]
 8001fca:	2300      	movs	r3, #0
 8001fcc:	75fb      	strb	r3, [r7, #23]
 8001fce:	68fb      	ldr	r3, [r7, #12]
 8001fd0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001fd2:	613b      	str	r3, [r7, #16]
 8001fd4:	68fb      	ldr	r3, [r7, #12]
 8001fd6:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8001fda:	2b01      	cmp	r3, #1
 8001fdc:	d101      	bne.n	8001fe2 <HAL_DMA_Start_IT+0x26>
 8001fde:	2302      	movs	r3, #2
 8001fe0:	e040      	b.n	8002064 <HAL_DMA_Start_IT+0xa8>
 8001fe2:	68fb      	ldr	r3, [r7, #12]
 8001fe4:	2201      	movs	r2, #1
 8001fe6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001fea:	68fb      	ldr	r3, [r7, #12]
 8001fec:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001ff0:	b2db      	uxtb	r3, r3
 8001ff2:	2b01      	cmp	r3, #1
 8001ff4:	d12f      	bne.n	8002056 <HAL_DMA_Start_IT+0x9a>
 8001ff6:	68fb      	ldr	r3, [r7, #12]
 8001ff8:	2202      	movs	r2, #2
 8001ffa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001ffe:	68fb      	ldr	r3, [r7, #12]
 8002000:	2200      	movs	r2, #0
 8002002:	655a      	str	r2, [r3, #84]	@ 0x54
 8002004:	683b      	ldr	r3, [r7, #0]
 8002006:	687a      	ldr	r2, [r7, #4]
 8002008:	68b9      	ldr	r1, [r7, #8]
 800200a:	68f8      	ldr	r0, [r7, #12]
 800200c:	f000 f9b8 	bl	8002380 <DMA_SetConfig>
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002014:	223f      	movs	r2, #63	@ 0x3f
 8002016:	409a      	lsls	r2, r3
 8002018:	693b      	ldr	r3, [r7, #16]
 800201a:	609a      	str	r2, [r3, #8]
 800201c:	68fb      	ldr	r3, [r7, #12]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	681a      	ldr	r2, [r3, #0]
 8002022:	68fb      	ldr	r3, [r7, #12]
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	f042 0216 	orr.w	r2, r2, #22
 800202a:	601a      	str	r2, [r3, #0]
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002030:	2b00      	cmp	r3, #0
 8002032:	d007      	beq.n	8002044 <HAL_DMA_Start_IT+0x88>
 8002034:	68fb      	ldr	r3, [r7, #12]
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	681a      	ldr	r2, [r3, #0]
 800203a:	68fb      	ldr	r3, [r7, #12]
 800203c:	681b      	ldr	r3, [r3, #0]
 800203e:	f042 0208 	orr.w	r2, r2, #8
 8002042:	601a      	str	r2, [r3, #0]
 8002044:	68fb      	ldr	r3, [r7, #12]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	681a      	ldr	r2, [r3, #0]
 800204a:	68fb      	ldr	r3, [r7, #12]
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	f042 0201 	orr.w	r2, r2, #1
 8002052:	601a      	str	r2, [r3, #0]
 8002054:	e005      	b.n	8002062 <HAL_DMA_Start_IT+0xa6>
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	2200      	movs	r2, #0
 800205a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800205e:	2302      	movs	r3, #2
 8002060:	75fb      	strb	r3, [r7, #23]
 8002062:	7dfb      	ldrb	r3, [r7, #23]
 8002064:	4618      	mov	r0, r3
 8002066:	3718      	adds	r7, #24
 8002068:	46bd      	mov	sp, r7
 800206a:	bd80      	pop	{r7, pc}

0800206c <HAL_DMA_IRQHandler>:
 800206c:	b580      	push	{r7, lr}
 800206e:	b086      	sub	sp, #24
 8002070:	af00      	add	r7, sp, #0
 8002072:	6078      	str	r0, [r7, #4]
 8002074:	2300      	movs	r3, #0
 8002076:	60bb      	str	r3, [r7, #8]
 8002078:	4b8e      	ldr	r3, [pc, #568]	@ (80022b4 <HAL_DMA_IRQHandler+0x248>)
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	4a8e      	ldr	r2, [pc, #568]	@ (80022b8 <HAL_DMA_IRQHandler+0x24c>)
 800207e:	fba2 2303 	umull	r2, r3, r2, r3
 8002082:	0a9b      	lsrs	r3, r3, #10
 8002084:	617b      	str	r3, [r7, #20]
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800208a:	613b      	str	r3, [r7, #16]
 800208c:	693b      	ldr	r3, [r7, #16]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	60fb      	str	r3, [r7, #12]
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002096:	2208      	movs	r2, #8
 8002098:	409a      	lsls	r2, r3
 800209a:	68fb      	ldr	r3, [r7, #12]
 800209c:	4013      	ands	r3, r2
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d01a      	beq.n	80020d8 <HAL_DMA_IRQHandler+0x6c>
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	f003 0304 	and.w	r3, r3, #4
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d013      	beq.n	80020d8 <HAL_DMA_IRQHandler+0x6c>
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	681a      	ldr	r2, [r3, #0]
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	f022 0204 	bic.w	r2, r2, #4
 80020be:	601a      	str	r2, [r3, #0]
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020c4:	2208      	movs	r2, #8
 80020c6:	409a      	lsls	r2, r3
 80020c8:	693b      	ldr	r3, [r7, #16]
 80020ca:	609a      	str	r2, [r3, #8]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80020d0:	f043 0201 	orr.w	r2, r3, #1
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	655a      	str	r2, [r3, #84]	@ 0x54
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020dc:	2201      	movs	r2, #1
 80020de:	409a      	lsls	r2, r3
 80020e0:	68fb      	ldr	r3, [r7, #12]
 80020e2:	4013      	ands	r3, r2
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	d012      	beq.n	800210e <HAL_DMA_IRQHandler+0xa2>
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	695b      	ldr	r3, [r3, #20]
 80020ee:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d00b      	beq.n	800210e <HAL_DMA_IRQHandler+0xa2>
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020fa:	2201      	movs	r2, #1
 80020fc:	409a      	lsls	r2, r3
 80020fe:	693b      	ldr	r3, [r7, #16]
 8002100:	609a      	str	r2, [r3, #8]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002106:	f043 0202 	orr.w	r2, r3, #2
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	655a      	str	r2, [r3, #84]	@ 0x54
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002112:	2204      	movs	r2, #4
 8002114:	409a      	lsls	r2, r3
 8002116:	68fb      	ldr	r3, [r7, #12]
 8002118:	4013      	ands	r3, r2
 800211a:	2b00      	cmp	r3, #0
 800211c:	d012      	beq.n	8002144 <HAL_DMA_IRQHandler+0xd8>
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	f003 0302 	and.w	r3, r3, #2
 8002128:	2b00      	cmp	r3, #0
 800212a:	d00b      	beq.n	8002144 <HAL_DMA_IRQHandler+0xd8>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002130:	2204      	movs	r2, #4
 8002132:	409a      	lsls	r2, r3
 8002134:	693b      	ldr	r3, [r7, #16]
 8002136:	609a      	str	r2, [r3, #8]
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800213c:	f043 0204 	orr.w	r2, r3, #4
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	655a      	str	r2, [r3, #84]	@ 0x54
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002148:	2210      	movs	r2, #16
 800214a:	409a      	lsls	r2, r3
 800214c:	68fb      	ldr	r3, [r7, #12]
 800214e:	4013      	ands	r3, r2
 8002150:	2b00      	cmp	r3, #0
 8002152:	d043      	beq.n	80021dc <HAL_DMA_IRQHandler+0x170>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	f003 0308 	and.w	r3, r3, #8
 800215e:	2b00      	cmp	r3, #0
 8002160:	d03c      	beq.n	80021dc <HAL_DMA_IRQHandler+0x170>
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002166:	2210      	movs	r2, #16
 8002168:	409a      	lsls	r2, r3
 800216a:	693b      	ldr	r3, [r7, #16]
 800216c:	609a      	str	r2, [r3, #8]
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002178:	2b00      	cmp	r3, #0
 800217a:	d018      	beq.n	80021ae <HAL_DMA_IRQHandler+0x142>
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	681b      	ldr	r3, [r3, #0]
 8002182:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002186:	2b00      	cmp	r3, #0
 8002188:	d108      	bne.n	800219c <HAL_DMA_IRQHandler+0x130>
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800218e:	2b00      	cmp	r3, #0
 8002190:	d024      	beq.n	80021dc <HAL_DMA_IRQHandler+0x170>
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002196:	6878      	ldr	r0, [r7, #4]
 8002198:	4798      	blx	r3
 800219a:	e01f      	b.n	80021dc <HAL_DMA_IRQHandler+0x170>
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d01b      	beq.n	80021dc <HAL_DMA_IRQHandler+0x170>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80021a8:	6878      	ldr	r0, [r7, #4]
 80021aa:	4798      	blx	r3
 80021ac:	e016      	b.n	80021dc <HAL_DMA_IRQHandler+0x170>
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d107      	bne.n	80021cc <HAL_DMA_IRQHandler+0x160>
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	681a      	ldr	r2, [r3, #0]
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	f022 0208 	bic.w	r2, r2, #8
 80021ca:	601a      	str	r2, [r3, #0]
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d003      	beq.n	80021dc <HAL_DMA_IRQHandler+0x170>
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021d8:	6878      	ldr	r0, [r7, #4]
 80021da:	4798      	blx	r3
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80021e0:	2220      	movs	r2, #32
 80021e2:	409a      	lsls	r2, r3
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	4013      	ands	r3, r2
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	f000 808f 	beq.w	800230c <HAL_DMA_IRQHandler+0x2a0>
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	f003 0310 	and.w	r3, r3, #16
 80021f8:	2b00      	cmp	r3, #0
 80021fa:	f000 8087 	beq.w	800230c <HAL_DMA_IRQHandler+0x2a0>
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002202:	2220      	movs	r2, #32
 8002204:	409a      	lsls	r2, r3
 8002206:	693b      	ldr	r3, [r7, #16]
 8002208:	609a      	str	r2, [r3, #8]
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002210:	b2db      	uxtb	r3, r3
 8002212:	2b05      	cmp	r3, #5
 8002214:	d136      	bne.n	8002284 <HAL_DMA_IRQHandler+0x218>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	681a      	ldr	r2, [r3, #0]
 800221c:	687b      	ldr	r3, [r7, #4]
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	f022 0216 	bic.w	r2, r2, #22
 8002224:	601a      	str	r2, [r3, #0]
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	695a      	ldr	r2, [r3, #20]
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002234:	615a      	str	r2, [r3, #20]
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800223a:	2b00      	cmp	r3, #0
 800223c:	d103      	bne.n	8002246 <HAL_DMA_IRQHandler+0x1da>
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002242:	2b00      	cmp	r3, #0
 8002244:	d007      	beq.n	8002256 <HAL_DMA_IRQHandler+0x1ea>
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	681a      	ldr	r2, [r3, #0]
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	f022 0208 	bic.w	r2, r2, #8
 8002254:	601a      	str	r2, [r3, #0]
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800225a:	223f      	movs	r2, #63	@ 0x3f
 800225c:	409a      	lsls	r2, r3
 800225e:	693b      	ldr	r3, [r7, #16]
 8002260:	609a      	str	r2, [r3, #8]
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	2201      	movs	r2, #1
 8002266:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	2200      	movs	r2, #0
 800226e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002276:	2b00      	cmp	r3, #0
 8002278:	d07e      	beq.n	8002378 <HAL_DMA_IRQHandler+0x30c>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800227e:	6878      	ldr	r0, [r7, #4]
 8002280:	4798      	blx	r3
 8002282:	e079      	b.n	8002378 <HAL_DMA_IRQHandler+0x30c>
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	681b      	ldr	r3, [r3, #0]
 800228a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800228e:	2b00      	cmp	r3, #0
 8002290:	d01d      	beq.n	80022ce <HAL_DMA_IRQHandler+0x262>
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800229c:	2b00      	cmp	r3, #0
 800229e:	d10d      	bne.n	80022bc <HAL_DMA_IRQHandler+0x250>
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80022a4:	2b00      	cmp	r3, #0
 80022a6:	d031      	beq.n	800230c <HAL_DMA_IRQHandler+0x2a0>
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80022ac:	6878      	ldr	r0, [r7, #4]
 80022ae:	4798      	blx	r3
 80022b0:	e02c      	b.n	800230c <HAL_DMA_IRQHandler+0x2a0>
 80022b2:	bf00      	nop
 80022b4:	20000004 	.word	0x20000004
 80022b8:	1b4e81b5 	.word	0x1b4e81b5
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d023      	beq.n	800230c <HAL_DMA_IRQHandler+0x2a0>
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80022c8:	6878      	ldr	r0, [r7, #4]
 80022ca:	4798      	blx	r3
 80022cc:	e01e      	b.n	800230c <HAL_DMA_IRQHandler+0x2a0>
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d10f      	bne.n	80022fc <HAL_DMA_IRQHandler+0x290>
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	681a      	ldr	r2, [r3, #0]
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	f022 0210 	bic.w	r2, r2, #16
 80022ea:	601a      	str	r2, [r3, #0]
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	2201      	movs	r2, #1
 80022f0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	2200      	movs	r2, #0
 80022f8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002300:	2b00      	cmp	r3, #0
 8002302:	d003      	beq.n	800230c <HAL_DMA_IRQHandler+0x2a0>
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002308:	6878      	ldr	r0, [r7, #4]
 800230a:	4798      	blx	r3
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002310:	2b00      	cmp	r3, #0
 8002312:	d032      	beq.n	800237a <HAL_DMA_IRQHandler+0x30e>
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002318:	f003 0301 	and.w	r3, r3, #1
 800231c:	2b00      	cmp	r3, #0
 800231e:	d022      	beq.n	8002366 <HAL_DMA_IRQHandler+0x2fa>
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	2205      	movs	r2, #5
 8002324:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	681a      	ldr	r2, [r3, #0]
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	f022 0201 	bic.w	r2, r2, #1
 8002336:	601a      	str	r2, [r3, #0]
 8002338:	68bb      	ldr	r3, [r7, #8]
 800233a:	3301      	adds	r3, #1
 800233c:	60bb      	str	r3, [r7, #8]
 800233e:	697a      	ldr	r2, [r7, #20]
 8002340:	429a      	cmp	r2, r3
 8002342:	d307      	bcc.n	8002354 <HAL_DMA_IRQHandler+0x2e8>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f003 0301 	and.w	r3, r3, #1
 800234e:	2b00      	cmp	r3, #0
 8002350:	d1f2      	bne.n	8002338 <HAL_DMA_IRQHandler+0x2cc>
 8002352:	e000      	b.n	8002356 <HAL_DMA_IRQHandler+0x2ea>
 8002354:	bf00      	nop
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	2201      	movs	r2, #1
 800235a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	2200      	movs	r2, #0
 8002362:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800236a:	2b00      	cmp	r3, #0
 800236c:	d005      	beq.n	800237a <HAL_DMA_IRQHandler+0x30e>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002372:	6878      	ldr	r0, [r7, #4]
 8002374:	4798      	blx	r3
 8002376:	e000      	b.n	800237a <HAL_DMA_IRQHandler+0x30e>
 8002378:	bf00      	nop
 800237a:	3718      	adds	r7, #24
 800237c:	46bd      	mov	sp, r7
 800237e:	bd80      	pop	{r7, pc}

08002380 <DMA_SetConfig>:
 8002380:	b480      	push	{r7}
 8002382:	b085      	sub	sp, #20
 8002384:	af00      	add	r7, sp, #0
 8002386:	60f8      	str	r0, [r7, #12]
 8002388:	60b9      	str	r1, [r7, #8]
 800238a:	607a      	str	r2, [r7, #4]
 800238c:	603b      	str	r3, [r7, #0]
 800238e:	68fb      	ldr	r3, [r7, #12]
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	681a      	ldr	r2, [r3, #0]
 8002394:	68fb      	ldr	r3, [r7, #12]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800239c:	601a      	str	r2, [r3, #0]
 800239e:	68fb      	ldr	r3, [r7, #12]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	683a      	ldr	r2, [r7, #0]
 80023a4:	605a      	str	r2, [r3, #4]
 80023a6:	68fb      	ldr	r3, [r7, #12]
 80023a8:	689b      	ldr	r3, [r3, #8]
 80023aa:	2b40      	cmp	r3, #64	@ 0x40
 80023ac:	d108      	bne.n	80023c0 <DMA_SetConfig+0x40>
 80023ae:	68fb      	ldr	r3, [r7, #12]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	687a      	ldr	r2, [r7, #4]
 80023b4:	609a      	str	r2, [r3, #8]
 80023b6:	68fb      	ldr	r3, [r7, #12]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	68ba      	ldr	r2, [r7, #8]
 80023bc:	60da      	str	r2, [r3, #12]
 80023be:	e007      	b.n	80023d0 <DMA_SetConfig+0x50>
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	68ba      	ldr	r2, [r7, #8]
 80023c6:	609a      	str	r2, [r3, #8]
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	687a      	ldr	r2, [r7, #4]
 80023ce:	60da      	str	r2, [r3, #12]
 80023d0:	bf00      	nop
 80023d2:	3714      	adds	r7, #20
 80023d4:	46bd      	mov	sp, r7
 80023d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023da:	4770      	bx	lr

080023dc <DMA_CalcBaseAndBitshift>:
 80023dc:	b480      	push	{r7}
 80023de:	b085      	sub	sp, #20
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	b2db      	uxtb	r3, r3
 80023ea:	3b10      	subs	r3, #16
 80023ec:	4a14      	ldr	r2, [pc, #80]	@ (8002440 <DMA_CalcBaseAndBitshift+0x64>)
 80023ee:	fba2 2303 	umull	r2, r3, r2, r3
 80023f2:	091b      	lsrs	r3, r3, #4
 80023f4:	60fb      	str	r3, [r7, #12]
 80023f6:	4a13      	ldr	r2, [pc, #76]	@ (8002444 <DMA_CalcBaseAndBitshift+0x68>)
 80023f8:	68fb      	ldr	r3, [r7, #12]
 80023fa:	4413      	add	r3, r2
 80023fc:	781b      	ldrb	r3, [r3, #0]
 80023fe:	461a      	mov	r2, r3
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002404:	68fb      	ldr	r3, [r7, #12]
 8002406:	2b03      	cmp	r3, #3
 8002408:	d909      	bls.n	800241e <DMA_CalcBaseAndBitshift+0x42>
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002412:	f023 0303 	bic.w	r3, r3, #3
 8002416:	1d1a      	adds	r2, r3, #4
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	659a      	str	r2, [r3, #88]	@ 0x58
 800241c:	e007      	b.n	800242e <DMA_CalcBaseAndBitshift+0x52>
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8002426:	f023 0303 	bic.w	r3, r3, #3
 800242a:	687a      	ldr	r2, [r7, #4]
 800242c:	6593      	str	r3, [r2, #88]	@ 0x58
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002432:	4618      	mov	r0, r3
 8002434:	3714      	adds	r7, #20
 8002436:	46bd      	mov	sp, r7
 8002438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243c:	4770      	bx	lr
 800243e:	bf00      	nop
 8002440:	aaaaaaab 	.word	0xaaaaaaab
 8002444:	08003f3c 	.word	0x08003f3c

08002448 <DMA_CheckFifoParam>:
 8002448:	b480      	push	{r7}
 800244a:	b085      	sub	sp, #20
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	2300      	movs	r3, #0
 8002452:	73fb      	strb	r3, [r7, #15]
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002458:	60bb      	str	r3, [r7, #8]
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	699b      	ldr	r3, [r3, #24]
 800245e:	2b00      	cmp	r3, #0
 8002460:	d11f      	bne.n	80024a2 <DMA_CheckFifoParam+0x5a>
 8002462:	68bb      	ldr	r3, [r7, #8]
 8002464:	2b03      	cmp	r3, #3
 8002466:	d856      	bhi.n	8002516 <DMA_CheckFifoParam+0xce>
 8002468:	a201      	add	r2, pc, #4	@ (adr r2, 8002470 <DMA_CheckFifoParam+0x28>)
 800246a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800246e:	bf00      	nop
 8002470:	08002481 	.word	0x08002481
 8002474:	08002493 	.word	0x08002493
 8002478:	08002481 	.word	0x08002481
 800247c:	08002517 	.word	0x08002517
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002484:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002488:	2b00      	cmp	r3, #0
 800248a:	d046      	beq.n	800251a <DMA_CheckFifoParam+0xd2>
 800248c:	2301      	movs	r3, #1
 800248e:	73fb      	strb	r3, [r7, #15]
 8002490:	e043      	b.n	800251a <DMA_CheckFifoParam+0xd2>
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002496:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800249a:	d140      	bne.n	800251e <DMA_CheckFifoParam+0xd6>
 800249c:	2301      	movs	r3, #1
 800249e:	73fb      	strb	r3, [r7, #15]
 80024a0:	e03d      	b.n	800251e <DMA_CheckFifoParam+0xd6>
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	699b      	ldr	r3, [r3, #24]
 80024a6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80024aa:	d121      	bne.n	80024f0 <DMA_CheckFifoParam+0xa8>
 80024ac:	68bb      	ldr	r3, [r7, #8]
 80024ae:	2b03      	cmp	r3, #3
 80024b0:	d837      	bhi.n	8002522 <DMA_CheckFifoParam+0xda>
 80024b2:	a201      	add	r2, pc, #4	@ (adr r2, 80024b8 <DMA_CheckFifoParam+0x70>)
 80024b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80024b8:	080024c9 	.word	0x080024c9
 80024bc:	080024cf 	.word	0x080024cf
 80024c0:	080024c9 	.word	0x080024c9
 80024c4:	080024e1 	.word	0x080024e1
 80024c8:	2301      	movs	r3, #1
 80024ca:	73fb      	strb	r3, [r7, #15]
 80024cc:	e030      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024d2:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d025      	beq.n	8002526 <DMA_CheckFifoParam+0xde>
 80024da:	2301      	movs	r3, #1
 80024dc:	73fb      	strb	r3, [r7, #15]
 80024de:	e022      	b.n	8002526 <DMA_CheckFifoParam+0xde>
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024e4:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 80024e8:	d11f      	bne.n	800252a <DMA_CheckFifoParam+0xe2>
 80024ea:	2301      	movs	r3, #1
 80024ec:	73fb      	strb	r3, [r7, #15]
 80024ee:	e01c      	b.n	800252a <DMA_CheckFifoParam+0xe2>
 80024f0:	68bb      	ldr	r3, [r7, #8]
 80024f2:	2b02      	cmp	r3, #2
 80024f4:	d903      	bls.n	80024fe <DMA_CheckFifoParam+0xb6>
 80024f6:	68bb      	ldr	r3, [r7, #8]
 80024f8:	2b03      	cmp	r3, #3
 80024fa:	d003      	beq.n	8002504 <DMA_CheckFifoParam+0xbc>
 80024fc:	e018      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 80024fe:	2301      	movs	r3, #1
 8002500:	73fb      	strb	r3, [r7, #15]
 8002502:	e015      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002508:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800250c:	2b00      	cmp	r3, #0
 800250e:	d00e      	beq.n	800252e <DMA_CheckFifoParam+0xe6>
 8002510:	2301      	movs	r3, #1
 8002512:	73fb      	strb	r3, [r7, #15]
 8002514:	e00b      	b.n	800252e <DMA_CheckFifoParam+0xe6>
 8002516:	bf00      	nop
 8002518:	e00a      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 800251a:	bf00      	nop
 800251c:	e008      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 800251e:	bf00      	nop
 8002520:	e006      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 8002522:	bf00      	nop
 8002524:	e004      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 8002526:	bf00      	nop
 8002528:	e002      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 800252a:	bf00      	nop
 800252c:	e000      	b.n	8002530 <DMA_CheckFifoParam+0xe8>
 800252e:	bf00      	nop
 8002530:	7bfb      	ldrb	r3, [r7, #15]
 8002532:	4618      	mov	r0, r3
 8002534:	3714      	adds	r7, #20
 8002536:	46bd      	mov	sp, r7
 8002538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800253c:	4770      	bx	lr
 800253e:	bf00      	nop

08002540 <HAL_GPIO_Init>:
 8002540:	b480      	push	{r7}
 8002542:	b089      	sub	sp, #36	@ 0x24
 8002544:	af00      	add	r7, sp, #0
 8002546:	6078      	str	r0, [r7, #4]
 8002548:	6039      	str	r1, [r7, #0]
 800254a:	2300      	movs	r3, #0
 800254c:	617b      	str	r3, [r7, #20]
 800254e:	2300      	movs	r3, #0
 8002550:	613b      	str	r3, [r7, #16]
 8002552:	2300      	movs	r3, #0
 8002554:	61bb      	str	r3, [r7, #24]
 8002556:	2300      	movs	r3, #0
 8002558:	61fb      	str	r3, [r7, #28]
 800255a:	e16b      	b.n	8002834 <HAL_GPIO_Init+0x2f4>
 800255c:	2201      	movs	r2, #1
 800255e:	69fb      	ldr	r3, [r7, #28]
 8002560:	fa02 f303 	lsl.w	r3, r2, r3
 8002564:	617b      	str	r3, [r7, #20]
 8002566:	683b      	ldr	r3, [r7, #0]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	697a      	ldr	r2, [r7, #20]
 800256c:	4013      	ands	r3, r2
 800256e:	613b      	str	r3, [r7, #16]
 8002570:	693a      	ldr	r2, [r7, #16]
 8002572:	697b      	ldr	r3, [r7, #20]
 8002574:	429a      	cmp	r2, r3
 8002576:	f040 815a 	bne.w	800282e <HAL_GPIO_Init+0x2ee>
 800257a:	683b      	ldr	r3, [r7, #0]
 800257c:	685b      	ldr	r3, [r3, #4]
 800257e:	f003 0303 	and.w	r3, r3, #3
 8002582:	2b01      	cmp	r3, #1
 8002584:	d005      	beq.n	8002592 <HAL_GPIO_Init+0x52>
 8002586:	683b      	ldr	r3, [r7, #0]
 8002588:	685b      	ldr	r3, [r3, #4]
 800258a:	f003 0303 	and.w	r3, r3, #3
 800258e:	2b02      	cmp	r3, #2
 8002590:	d130      	bne.n	80025f4 <HAL_GPIO_Init+0xb4>
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	689b      	ldr	r3, [r3, #8]
 8002596:	61bb      	str	r3, [r7, #24]
 8002598:	69fb      	ldr	r3, [r7, #28]
 800259a:	005b      	lsls	r3, r3, #1
 800259c:	2203      	movs	r2, #3
 800259e:	fa02 f303 	lsl.w	r3, r2, r3
 80025a2:	43db      	mvns	r3, r3
 80025a4:	69ba      	ldr	r2, [r7, #24]
 80025a6:	4013      	ands	r3, r2
 80025a8:	61bb      	str	r3, [r7, #24]
 80025aa:	683b      	ldr	r3, [r7, #0]
 80025ac:	68da      	ldr	r2, [r3, #12]
 80025ae:	69fb      	ldr	r3, [r7, #28]
 80025b0:	005b      	lsls	r3, r3, #1
 80025b2:	fa02 f303 	lsl.w	r3, r2, r3
 80025b6:	69ba      	ldr	r2, [r7, #24]
 80025b8:	4313      	orrs	r3, r2
 80025ba:	61bb      	str	r3, [r7, #24]
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	69ba      	ldr	r2, [r7, #24]
 80025c0:	609a      	str	r2, [r3, #8]
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	685b      	ldr	r3, [r3, #4]
 80025c6:	61bb      	str	r3, [r7, #24]
 80025c8:	2201      	movs	r2, #1
 80025ca:	69fb      	ldr	r3, [r7, #28]
 80025cc:	fa02 f303 	lsl.w	r3, r2, r3
 80025d0:	43db      	mvns	r3, r3
 80025d2:	69ba      	ldr	r2, [r7, #24]
 80025d4:	4013      	ands	r3, r2
 80025d6:	61bb      	str	r3, [r7, #24]
 80025d8:	683b      	ldr	r3, [r7, #0]
 80025da:	685b      	ldr	r3, [r3, #4]
 80025dc:	091b      	lsrs	r3, r3, #4
 80025de:	f003 0201 	and.w	r2, r3, #1
 80025e2:	69fb      	ldr	r3, [r7, #28]
 80025e4:	fa02 f303 	lsl.w	r3, r2, r3
 80025e8:	69ba      	ldr	r2, [r7, #24]
 80025ea:	4313      	orrs	r3, r2
 80025ec:	61bb      	str	r3, [r7, #24]
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	69ba      	ldr	r2, [r7, #24]
 80025f2:	605a      	str	r2, [r3, #4]
 80025f4:	683b      	ldr	r3, [r7, #0]
 80025f6:	685b      	ldr	r3, [r3, #4]
 80025f8:	f003 0303 	and.w	r3, r3, #3
 80025fc:	2b03      	cmp	r3, #3
 80025fe:	d017      	beq.n	8002630 <HAL_GPIO_Init+0xf0>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	68db      	ldr	r3, [r3, #12]
 8002604:	61bb      	str	r3, [r7, #24]
 8002606:	69fb      	ldr	r3, [r7, #28]
 8002608:	005b      	lsls	r3, r3, #1
 800260a:	2203      	movs	r2, #3
 800260c:	fa02 f303 	lsl.w	r3, r2, r3
 8002610:	43db      	mvns	r3, r3
 8002612:	69ba      	ldr	r2, [r7, #24]
 8002614:	4013      	ands	r3, r2
 8002616:	61bb      	str	r3, [r7, #24]
 8002618:	683b      	ldr	r3, [r7, #0]
 800261a:	689a      	ldr	r2, [r3, #8]
 800261c:	69fb      	ldr	r3, [r7, #28]
 800261e:	005b      	lsls	r3, r3, #1
 8002620:	fa02 f303 	lsl.w	r3, r2, r3
 8002624:	69ba      	ldr	r2, [r7, #24]
 8002626:	4313      	orrs	r3, r2
 8002628:	61bb      	str	r3, [r7, #24]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	69ba      	ldr	r2, [r7, #24]
 800262e:	60da      	str	r2, [r3, #12]
 8002630:	683b      	ldr	r3, [r7, #0]
 8002632:	685b      	ldr	r3, [r3, #4]
 8002634:	f003 0303 	and.w	r3, r3, #3
 8002638:	2b02      	cmp	r3, #2
 800263a:	d123      	bne.n	8002684 <HAL_GPIO_Init+0x144>
 800263c:	69fb      	ldr	r3, [r7, #28]
 800263e:	08da      	lsrs	r2, r3, #3
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	3208      	adds	r2, #8
 8002644:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002648:	61bb      	str	r3, [r7, #24]
 800264a:	69fb      	ldr	r3, [r7, #28]
 800264c:	f003 0307 	and.w	r3, r3, #7
 8002650:	009b      	lsls	r3, r3, #2
 8002652:	220f      	movs	r2, #15
 8002654:	fa02 f303 	lsl.w	r3, r2, r3
 8002658:	43db      	mvns	r3, r3
 800265a:	69ba      	ldr	r2, [r7, #24]
 800265c:	4013      	ands	r3, r2
 800265e:	61bb      	str	r3, [r7, #24]
 8002660:	683b      	ldr	r3, [r7, #0]
 8002662:	691a      	ldr	r2, [r3, #16]
 8002664:	69fb      	ldr	r3, [r7, #28]
 8002666:	f003 0307 	and.w	r3, r3, #7
 800266a:	009b      	lsls	r3, r3, #2
 800266c:	fa02 f303 	lsl.w	r3, r2, r3
 8002670:	69ba      	ldr	r2, [r7, #24]
 8002672:	4313      	orrs	r3, r2
 8002674:	61bb      	str	r3, [r7, #24]
 8002676:	69fb      	ldr	r3, [r7, #28]
 8002678:	08da      	lsrs	r2, r3, #3
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	3208      	adds	r2, #8
 800267e:	69b9      	ldr	r1, [r7, #24]
 8002680:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	61bb      	str	r3, [r7, #24]
 800268a:	69fb      	ldr	r3, [r7, #28]
 800268c:	005b      	lsls	r3, r3, #1
 800268e:	2203      	movs	r2, #3
 8002690:	fa02 f303 	lsl.w	r3, r2, r3
 8002694:	43db      	mvns	r3, r3
 8002696:	69ba      	ldr	r2, [r7, #24]
 8002698:	4013      	ands	r3, r2
 800269a:	61bb      	str	r3, [r7, #24]
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	685b      	ldr	r3, [r3, #4]
 80026a0:	f003 0203 	and.w	r2, r3, #3
 80026a4:	69fb      	ldr	r3, [r7, #28]
 80026a6:	005b      	lsls	r3, r3, #1
 80026a8:	fa02 f303 	lsl.w	r3, r2, r3
 80026ac:	69ba      	ldr	r2, [r7, #24]
 80026ae:	4313      	orrs	r3, r2
 80026b0:	61bb      	str	r3, [r7, #24]
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	69ba      	ldr	r2, [r7, #24]
 80026b6:	601a      	str	r2, [r3, #0]
 80026b8:	683b      	ldr	r3, [r7, #0]
 80026ba:	685b      	ldr	r3, [r3, #4]
 80026bc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	f000 80b4 	beq.w	800282e <HAL_GPIO_Init+0x2ee>
 80026c6:	2300      	movs	r3, #0
 80026c8:	60fb      	str	r3, [r7, #12]
 80026ca:	4b60      	ldr	r3, [pc, #384]	@ (800284c <HAL_GPIO_Init+0x30c>)
 80026cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026ce:	4a5f      	ldr	r2, [pc, #380]	@ (800284c <HAL_GPIO_Init+0x30c>)
 80026d0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80026d4:	6453      	str	r3, [r2, #68]	@ 0x44
 80026d6:	4b5d      	ldr	r3, [pc, #372]	@ (800284c <HAL_GPIO_Init+0x30c>)
 80026d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80026da:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80026de:	60fb      	str	r3, [r7, #12]
 80026e0:	68fb      	ldr	r3, [r7, #12]
 80026e2:	4a5b      	ldr	r2, [pc, #364]	@ (8002850 <HAL_GPIO_Init+0x310>)
 80026e4:	69fb      	ldr	r3, [r7, #28]
 80026e6:	089b      	lsrs	r3, r3, #2
 80026e8:	3302      	adds	r3, #2
 80026ea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80026ee:	61bb      	str	r3, [r7, #24]
 80026f0:	69fb      	ldr	r3, [r7, #28]
 80026f2:	f003 0303 	and.w	r3, r3, #3
 80026f6:	009b      	lsls	r3, r3, #2
 80026f8:	220f      	movs	r2, #15
 80026fa:	fa02 f303 	lsl.w	r3, r2, r3
 80026fe:	43db      	mvns	r3, r3
 8002700:	69ba      	ldr	r2, [r7, #24]
 8002702:	4013      	ands	r3, r2
 8002704:	61bb      	str	r3, [r7, #24]
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	4a52      	ldr	r2, [pc, #328]	@ (8002854 <HAL_GPIO_Init+0x314>)
 800270a:	4293      	cmp	r3, r2
 800270c:	d02b      	beq.n	8002766 <HAL_GPIO_Init+0x226>
 800270e:	687b      	ldr	r3, [r7, #4]
 8002710:	4a51      	ldr	r2, [pc, #324]	@ (8002858 <HAL_GPIO_Init+0x318>)
 8002712:	4293      	cmp	r3, r2
 8002714:	d025      	beq.n	8002762 <HAL_GPIO_Init+0x222>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	4a50      	ldr	r2, [pc, #320]	@ (800285c <HAL_GPIO_Init+0x31c>)
 800271a:	4293      	cmp	r3, r2
 800271c:	d01f      	beq.n	800275e <HAL_GPIO_Init+0x21e>
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	4a4f      	ldr	r2, [pc, #316]	@ (8002860 <HAL_GPIO_Init+0x320>)
 8002722:	4293      	cmp	r3, r2
 8002724:	d019      	beq.n	800275a <HAL_GPIO_Init+0x21a>
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	4a4e      	ldr	r2, [pc, #312]	@ (8002864 <HAL_GPIO_Init+0x324>)
 800272a:	4293      	cmp	r3, r2
 800272c:	d013      	beq.n	8002756 <HAL_GPIO_Init+0x216>
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	4a4d      	ldr	r2, [pc, #308]	@ (8002868 <HAL_GPIO_Init+0x328>)
 8002732:	4293      	cmp	r3, r2
 8002734:	d00d      	beq.n	8002752 <HAL_GPIO_Init+0x212>
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	4a4c      	ldr	r2, [pc, #304]	@ (800286c <HAL_GPIO_Init+0x32c>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d007      	beq.n	800274e <HAL_GPIO_Init+0x20e>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	4a4b      	ldr	r2, [pc, #300]	@ (8002870 <HAL_GPIO_Init+0x330>)
 8002742:	4293      	cmp	r3, r2
 8002744:	d101      	bne.n	800274a <HAL_GPIO_Init+0x20a>
 8002746:	2307      	movs	r3, #7
 8002748:	e00e      	b.n	8002768 <HAL_GPIO_Init+0x228>
 800274a:	2308      	movs	r3, #8
 800274c:	e00c      	b.n	8002768 <HAL_GPIO_Init+0x228>
 800274e:	2306      	movs	r3, #6
 8002750:	e00a      	b.n	8002768 <HAL_GPIO_Init+0x228>
 8002752:	2305      	movs	r3, #5
 8002754:	e008      	b.n	8002768 <HAL_GPIO_Init+0x228>
 8002756:	2304      	movs	r3, #4
 8002758:	e006      	b.n	8002768 <HAL_GPIO_Init+0x228>
 800275a:	2303      	movs	r3, #3
 800275c:	e004      	b.n	8002768 <HAL_GPIO_Init+0x228>
 800275e:	2302      	movs	r3, #2
 8002760:	e002      	b.n	8002768 <HAL_GPIO_Init+0x228>
 8002762:	2301      	movs	r3, #1
 8002764:	e000      	b.n	8002768 <HAL_GPIO_Init+0x228>
 8002766:	2300      	movs	r3, #0
 8002768:	69fa      	ldr	r2, [r7, #28]
 800276a:	f002 0203 	and.w	r2, r2, #3
 800276e:	0092      	lsls	r2, r2, #2
 8002770:	4093      	lsls	r3, r2
 8002772:	69ba      	ldr	r2, [r7, #24]
 8002774:	4313      	orrs	r3, r2
 8002776:	61bb      	str	r3, [r7, #24]
 8002778:	4935      	ldr	r1, [pc, #212]	@ (8002850 <HAL_GPIO_Init+0x310>)
 800277a:	69fb      	ldr	r3, [r7, #28]
 800277c:	089b      	lsrs	r3, r3, #2
 800277e:	3302      	adds	r3, #2
 8002780:	69ba      	ldr	r2, [r7, #24]
 8002782:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002786:	4b3b      	ldr	r3, [pc, #236]	@ (8002874 <HAL_GPIO_Init+0x334>)
 8002788:	689b      	ldr	r3, [r3, #8]
 800278a:	61bb      	str	r3, [r7, #24]
 800278c:	693b      	ldr	r3, [r7, #16]
 800278e:	43db      	mvns	r3, r3
 8002790:	69ba      	ldr	r2, [r7, #24]
 8002792:	4013      	ands	r3, r2
 8002794:	61bb      	str	r3, [r7, #24]
 8002796:	683b      	ldr	r3, [r7, #0]
 8002798:	685b      	ldr	r3, [r3, #4]
 800279a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d003      	beq.n	80027aa <HAL_GPIO_Init+0x26a>
 80027a2:	69ba      	ldr	r2, [r7, #24]
 80027a4:	693b      	ldr	r3, [r7, #16]
 80027a6:	4313      	orrs	r3, r2
 80027a8:	61bb      	str	r3, [r7, #24]
 80027aa:	4a32      	ldr	r2, [pc, #200]	@ (8002874 <HAL_GPIO_Init+0x334>)
 80027ac:	69bb      	ldr	r3, [r7, #24]
 80027ae:	6093      	str	r3, [r2, #8]
 80027b0:	4b30      	ldr	r3, [pc, #192]	@ (8002874 <HAL_GPIO_Init+0x334>)
 80027b2:	68db      	ldr	r3, [r3, #12]
 80027b4:	61bb      	str	r3, [r7, #24]
 80027b6:	693b      	ldr	r3, [r7, #16]
 80027b8:	43db      	mvns	r3, r3
 80027ba:	69ba      	ldr	r2, [r7, #24]
 80027bc:	4013      	ands	r3, r2
 80027be:	61bb      	str	r3, [r7, #24]
 80027c0:	683b      	ldr	r3, [r7, #0]
 80027c2:	685b      	ldr	r3, [r3, #4]
 80027c4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	d003      	beq.n	80027d4 <HAL_GPIO_Init+0x294>
 80027cc:	69ba      	ldr	r2, [r7, #24]
 80027ce:	693b      	ldr	r3, [r7, #16]
 80027d0:	4313      	orrs	r3, r2
 80027d2:	61bb      	str	r3, [r7, #24]
 80027d4:	4a27      	ldr	r2, [pc, #156]	@ (8002874 <HAL_GPIO_Init+0x334>)
 80027d6:	69bb      	ldr	r3, [r7, #24]
 80027d8:	60d3      	str	r3, [r2, #12]
 80027da:	4b26      	ldr	r3, [pc, #152]	@ (8002874 <HAL_GPIO_Init+0x334>)
 80027dc:	685b      	ldr	r3, [r3, #4]
 80027de:	61bb      	str	r3, [r7, #24]
 80027e0:	693b      	ldr	r3, [r7, #16]
 80027e2:	43db      	mvns	r3, r3
 80027e4:	69ba      	ldr	r2, [r7, #24]
 80027e6:	4013      	ands	r3, r2
 80027e8:	61bb      	str	r3, [r7, #24]
 80027ea:	683b      	ldr	r3, [r7, #0]
 80027ec:	685b      	ldr	r3, [r3, #4]
 80027ee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d003      	beq.n	80027fe <HAL_GPIO_Init+0x2be>
 80027f6:	69ba      	ldr	r2, [r7, #24]
 80027f8:	693b      	ldr	r3, [r7, #16]
 80027fa:	4313      	orrs	r3, r2
 80027fc:	61bb      	str	r3, [r7, #24]
 80027fe:	4a1d      	ldr	r2, [pc, #116]	@ (8002874 <HAL_GPIO_Init+0x334>)
 8002800:	69bb      	ldr	r3, [r7, #24]
 8002802:	6053      	str	r3, [r2, #4]
 8002804:	4b1b      	ldr	r3, [pc, #108]	@ (8002874 <HAL_GPIO_Init+0x334>)
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	61bb      	str	r3, [r7, #24]
 800280a:	693b      	ldr	r3, [r7, #16]
 800280c:	43db      	mvns	r3, r3
 800280e:	69ba      	ldr	r2, [r7, #24]
 8002810:	4013      	ands	r3, r2
 8002812:	61bb      	str	r3, [r7, #24]
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	685b      	ldr	r3, [r3, #4]
 8002818:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800281c:	2b00      	cmp	r3, #0
 800281e:	d003      	beq.n	8002828 <HAL_GPIO_Init+0x2e8>
 8002820:	69ba      	ldr	r2, [r7, #24]
 8002822:	693b      	ldr	r3, [r7, #16]
 8002824:	4313      	orrs	r3, r2
 8002826:	61bb      	str	r3, [r7, #24]
 8002828:	4a12      	ldr	r2, [pc, #72]	@ (8002874 <HAL_GPIO_Init+0x334>)
 800282a:	69bb      	ldr	r3, [r7, #24]
 800282c:	6013      	str	r3, [r2, #0]
 800282e:	69fb      	ldr	r3, [r7, #28]
 8002830:	3301      	adds	r3, #1
 8002832:	61fb      	str	r3, [r7, #28]
 8002834:	69fb      	ldr	r3, [r7, #28]
 8002836:	2b0f      	cmp	r3, #15
 8002838:	f67f ae90 	bls.w	800255c <HAL_GPIO_Init+0x1c>
 800283c:	bf00      	nop
 800283e:	bf00      	nop
 8002840:	3724      	adds	r7, #36	@ 0x24
 8002842:	46bd      	mov	sp, r7
 8002844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002848:	4770      	bx	lr
 800284a:	bf00      	nop
 800284c:	40023800 	.word	0x40023800
 8002850:	40013800 	.word	0x40013800
 8002854:	40020000 	.word	0x40020000
 8002858:	40020400 	.word	0x40020400
 800285c:	40020800 	.word	0x40020800
 8002860:	40020c00 	.word	0x40020c00
 8002864:	40021000 	.word	0x40021000
 8002868:	40021400 	.word	0x40021400
 800286c:	40021800 	.word	0x40021800
 8002870:	40021c00 	.word	0x40021c00
 8002874:	40013c00 	.word	0x40013c00

08002878 <HAL_GPIO_ReadPin>:
 8002878:	b480      	push	{r7}
 800287a:	b085      	sub	sp, #20
 800287c:	af00      	add	r7, sp, #0
 800287e:	6078      	str	r0, [r7, #4]
 8002880:	460b      	mov	r3, r1
 8002882:	807b      	strh	r3, [r7, #2]
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	691a      	ldr	r2, [r3, #16]
 8002888:	887b      	ldrh	r3, [r7, #2]
 800288a:	4013      	ands	r3, r2
 800288c:	2b00      	cmp	r3, #0
 800288e:	d002      	beq.n	8002896 <HAL_GPIO_ReadPin+0x1e>
 8002890:	2301      	movs	r3, #1
 8002892:	73fb      	strb	r3, [r7, #15]
 8002894:	e001      	b.n	800289a <HAL_GPIO_ReadPin+0x22>
 8002896:	2300      	movs	r3, #0
 8002898:	73fb      	strb	r3, [r7, #15]
 800289a:	7bfb      	ldrb	r3, [r7, #15]
 800289c:	4618      	mov	r0, r3
 800289e:	3714      	adds	r7, #20
 80028a0:	46bd      	mov	sp, r7
 80028a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028a6:	4770      	bx	lr

080028a8 <HAL_GPIO_WritePin>:
 80028a8:	b480      	push	{r7}
 80028aa:	b083      	sub	sp, #12
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	6078      	str	r0, [r7, #4]
 80028b0:	460b      	mov	r3, r1
 80028b2:	807b      	strh	r3, [r7, #2]
 80028b4:	4613      	mov	r3, r2
 80028b6:	707b      	strb	r3, [r7, #1]
 80028b8:	787b      	ldrb	r3, [r7, #1]
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d003      	beq.n	80028c6 <HAL_GPIO_WritePin+0x1e>
 80028be:	887a      	ldrh	r2, [r7, #2]
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	619a      	str	r2, [r3, #24]
 80028c4:	e003      	b.n	80028ce <HAL_GPIO_WritePin+0x26>
 80028c6:	887b      	ldrh	r3, [r7, #2]
 80028c8:	041a      	lsls	r2, r3, #16
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	619a      	str	r2, [r3, #24]
 80028ce:	bf00      	nop
 80028d0:	370c      	adds	r7, #12
 80028d2:	46bd      	mov	sp, r7
 80028d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d8:	4770      	bx	lr
	...

080028dc <HAL_RCC_OscConfig>:
 80028dc:	b580      	push	{r7, lr}
 80028de:	b086      	sub	sp, #24
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	6078      	str	r0, [r7, #4]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d101      	bne.n	80028ee <HAL_RCC_OscConfig+0x12>
 80028ea:	2301      	movs	r3, #1
 80028ec:	e267      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	f003 0301 	and.w	r3, r3, #1
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d075      	beq.n	80029e6 <HAL_RCC_OscConfig+0x10a>
 80028fa:	4b88      	ldr	r3, [pc, #544]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 80028fc:	689b      	ldr	r3, [r3, #8]
 80028fe:	f003 030c 	and.w	r3, r3, #12
 8002902:	2b04      	cmp	r3, #4
 8002904:	d00c      	beq.n	8002920 <HAL_RCC_OscConfig+0x44>
 8002906:	4b85      	ldr	r3, [pc, #532]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002908:	689b      	ldr	r3, [r3, #8]
 800290a:	f003 030c 	and.w	r3, r3, #12
 800290e:	2b08      	cmp	r3, #8
 8002910:	d112      	bne.n	8002938 <HAL_RCC_OscConfig+0x5c>
 8002912:	4b82      	ldr	r3, [pc, #520]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002914:	685b      	ldr	r3, [r3, #4]
 8002916:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800291a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800291e:	d10b      	bne.n	8002938 <HAL_RCC_OscConfig+0x5c>
 8002920:	4b7e      	ldr	r3, [pc, #504]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002928:	2b00      	cmp	r3, #0
 800292a:	d05b      	beq.n	80029e4 <HAL_RCC_OscConfig+0x108>
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	685b      	ldr	r3, [r3, #4]
 8002930:	2b00      	cmp	r3, #0
 8002932:	d157      	bne.n	80029e4 <HAL_RCC_OscConfig+0x108>
 8002934:	2301      	movs	r3, #1
 8002936:	e242      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	685b      	ldr	r3, [r3, #4]
 800293c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002940:	d106      	bne.n	8002950 <HAL_RCC_OscConfig+0x74>
 8002942:	4b76      	ldr	r3, [pc, #472]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	4a75      	ldr	r2, [pc, #468]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002948:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800294c:	6013      	str	r3, [r2, #0]
 800294e:	e01d      	b.n	800298c <HAL_RCC_OscConfig+0xb0>
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	685b      	ldr	r3, [r3, #4]
 8002954:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002958:	d10c      	bne.n	8002974 <HAL_RCC_OscConfig+0x98>
 800295a:	4b70      	ldr	r3, [pc, #448]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	4a6f      	ldr	r2, [pc, #444]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002960:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002964:	6013      	str	r3, [r2, #0]
 8002966:	4b6d      	ldr	r3, [pc, #436]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	4a6c      	ldr	r2, [pc, #432]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 800296c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002970:	6013      	str	r3, [r2, #0]
 8002972:	e00b      	b.n	800298c <HAL_RCC_OscConfig+0xb0>
 8002974:	4b69      	ldr	r3, [pc, #420]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	4a68      	ldr	r2, [pc, #416]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 800297a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800297e:	6013      	str	r3, [r2, #0]
 8002980:	4b66      	ldr	r3, [pc, #408]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a65      	ldr	r2, [pc, #404]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002986:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800298a:	6013      	str	r3, [r2, #0]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	685b      	ldr	r3, [r3, #4]
 8002990:	2b00      	cmp	r3, #0
 8002992:	d013      	beq.n	80029bc <HAL_RCC_OscConfig+0xe0>
 8002994:	f7fe fd20 	bl	80013d8 <HAL_GetTick>
 8002998:	6138      	str	r0, [r7, #16]
 800299a:	e008      	b.n	80029ae <HAL_RCC_OscConfig+0xd2>
 800299c:	f7fe fd1c 	bl	80013d8 <HAL_GetTick>
 80029a0:	4602      	mov	r2, r0
 80029a2:	693b      	ldr	r3, [r7, #16]
 80029a4:	1ad3      	subs	r3, r2, r3
 80029a6:	2b64      	cmp	r3, #100	@ 0x64
 80029a8:	d901      	bls.n	80029ae <HAL_RCC_OscConfig+0xd2>
 80029aa:	2303      	movs	r3, #3
 80029ac:	e207      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 80029ae:	4b5b      	ldr	r3, [pc, #364]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	d0f0      	beq.n	800299c <HAL_RCC_OscConfig+0xc0>
 80029ba:	e014      	b.n	80029e6 <HAL_RCC_OscConfig+0x10a>
 80029bc:	f7fe fd0c 	bl	80013d8 <HAL_GetTick>
 80029c0:	6138      	str	r0, [r7, #16]
 80029c2:	e008      	b.n	80029d6 <HAL_RCC_OscConfig+0xfa>
 80029c4:	f7fe fd08 	bl	80013d8 <HAL_GetTick>
 80029c8:	4602      	mov	r2, r0
 80029ca:	693b      	ldr	r3, [r7, #16]
 80029cc:	1ad3      	subs	r3, r2, r3
 80029ce:	2b64      	cmp	r3, #100	@ 0x64
 80029d0:	d901      	bls.n	80029d6 <HAL_RCC_OscConfig+0xfa>
 80029d2:	2303      	movs	r3, #3
 80029d4:	e1f3      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 80029d6:	4b51      	ldr	r3, [pc, #324]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d1f0      	bne.n	80029c4 <HAL_RCC_OscConfig+0xe8>
 80029e2:	e000      	b.n	80029e6 <HAL_RCC_OscConfig+0x10a>
 80029e4:	bf00      	nop
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	f003 0302 	and.w	r3, r3, #2
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d063      	beq.n	8002aba <HAL_RCC_OscConfig+0x1de>
 80029f2:	4b4a      	ldr	r3, [pc, #296]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 80029f4:	689b      	ldr	r3, [r3, #8]
 80029f6:	f003 030c 	and.w	r3, r3, #12
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d00b      	beq.n	8002a16 <HAL_RCC_OscConfig+0x13a>
 80029fe:	4b47      	ldr	r3, [pc, #284]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a00:	689b      	ldr	r3, [r3, #8]
 8002a02:	f003 030c 	and.w	r3, r3, #12
 8002a06:	2b08      	cmp	r3, #8
 8002a08:	d11c      	bne.n	8002a44 <HAL_RCC_OscConfig+0x168>
 8002a0a:	4b44      	ldr	r3, [pc, #272]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d116      	bne.n	8002a44 <HAL_RCC_OscConfig+0x168>
 8002a16:	4b41      	ldr	r3, [pc, #260]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	f003 0302 	and.w	r3, r3, #2
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d005      	beq.n	8002a2e <HAL_RCC_OscConfig+0x152>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	68db      	ldr	r3, [r3, #12]
 8002a26:	2b01      	cmp	r3, #1
 8002a28:	d001      	beq.n	8002a2e <HAL_RCC_OscConfig+0x152>
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	e1c7      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002a2e:	4b3b      	ldr	r3, [pc, #236]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	691b      	ldr	r3, [r3, #16]
 8002a3a:	00db      	lsls	r3, r3, #3
 8002a3c:	4937      	ldr	r1, [pc, #220]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a3e:	4313      	orrs	r3, r2
 8002a40:	600b      	str	r3, [r1, #0]
 8002a42:	e03a      	b.n	8002aba <HAL_RCC_OscConfig+0x1de>
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	68db      	ldr	r3, [r3, #12]
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d020      	beq.n	8002a8e <HAL_RCC_OscConfig+0x1b2>
 8002a4c:	4b34      	ldr	r3, [pc, #208]	@ (8002b20 <HAL_RCC_OscConfig+0x244>)
 8002a4e:	2201      	movs	r2, #1
 8002a50:	601a      	str	r2, [r3, #0]
 8002a52:	f7fe fcc1 	bl	80013d8 <HAL_GetTick>
 8002a56:	6138      	str	r0, [r7, #16]
 8002a58:	e008      	b.n	8002a6c <HAL_RCC_OscConfig+0x190>
 8002a5a:	f7fe fcbd 	bl	80013d8 <HAL_GetTick>
 8002a5e:	4602      	mov	r2, r0
 8002a60:	693b      	ldr	r3, [r7, #16]
 8002a62:	1ad3      	subs	r3, r2, r3
 8002a64:	2b02      	cmp	r3, #2
 8002a66:	d901      	bls.n	8002a6c <HAL_RCC_OscConfig+0x190>
 8002a68:	2303      	movs	r3, #3
 8002a6a:	e1a8      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002a6c:	4b2b      	ldr	r3, [pc, #172]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	f003 0302 	and.w	r3, r3, #2
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	d0f0      	beq.n	8002a5a <HAL_RCC_OscConfig+0x17e>
 8002a78:	4b28      	ldr	r3, [pc, #160]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	691b      	ldr	r3, [r3, #16]
 8002a84:	00db      	lsls	r3, r3, #3
 8002a86:	4925      	ldr	r1, [pc, #148]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a88:	4313      	orrs	r3, r2
 8002a8a:	600b      	str	r3, [r1, #0]
 8002a8c:	e015      	b.n	8002aba <HAL_RCC_OscConfig+0x1de>
 8002a8e:	4b24      	ldr	r3, [pc, #144]	@ (8002b20 <HAL_RCC_OscConfig+0x244>)
 8002a90:	2200      	movs	r2, #0
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	f7fe fca0 	bl	80013d8 <HAL_GetTick>
 8002a98:	6138      	str	r0, [r7, #16]
 8002a9a:	e008      	b.n	8002aae <HAL_RCC_OscConfig+0x1d2>
 8002a9c:	f7fe fc9c 	bl	80013d8 <HAL_GetTick>
 8002aa0:	4602      	mov	r2, r0
 8002aa2:	693b      	ldr	r3, [r7, #16]
 8002aa4:	1ad3      	subs	r3, r2, r3
 8002aa6:	2b02      	cmp	r3, #2
 8002aa8:	d901      	bls.n	8002aae <HAL_RCC_OscConfig+0x1d2>
 8002aaa:	2303      	movs	r3, #3
 8002aac:	e187      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002aae:	4b1b      	ldr	r3, [pc, #108]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	f003 0302 	and.w	r3, r3, #2
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d1f0      	bne.n	8002a9c <HAL_RCC_OscConfig+0x1c0>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	f003 0308 	and.w	r3, r3, #8
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d036      	beq.n	8002b34 <HAL_RCC_OscConfig+0x258>
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	695b      	ldr	r3, [r3, #20]
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d016      	beq.n	8002afc <HAL_RCC_OscConfig+0x220>
 8002ace:	4b15      	ldr	r3, [pc, #84]	@ (8002b24 <HAL_RCC_OscConfig+0x248>)
 8002ad0:	2201      	movs	r2, #1
 8002ad2:	601a      	str	r2, [r3, #0]
 8002ad4:	f7fe fc80 	bl	80013d8 <HAL_GetTick>
 8002ad8:	6138      	str	r0, [r7, #16]
 8002ada:	e008      	b.n	8002aee <HAL_RCC_OscConfig+0x212>
 8002adc:	f7fe fc7c 	bl	80013d8 <HAL_GetTick>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	693b      	ldr	r3, [r7, #16]
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	2b02      	cmp	r3, #2
 8002ae8:	d901      	bls.n	8002aee <HAL_RCC_OscConfig+0x212>
 8002aea:	2303      	movs	r3, #3
 8002aec:	e167      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002aee:	4b0b      	ldr	r3, [pc, #44]	@ (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002af0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002af2:	f003 0302 	and.w	r3, r3, #2
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d0f0      	beq.n	8002adc <HAL_RCC_OscConfig+0x200>
 8002afa:	e01b      	b.n	8002b34 <HAL_RCC_OscConfig+0x258>
 8002afc:	4b09      	ldr	r3, [pc, #36]	@ (8002b24 <HAL_RCC_OscConfig+0x248>)
 8002afe:	2200      	movs	r2, #0
 8002b00:	601a      	str	r2, [r3, #0]
 8002b02:	f7fe fc69 	bl	80013d8 <HAL_GetTick>
 8002b06:	6138      	str	r0, [r7, #16]
 8002b08:	e00e      	b.n	8002b28 <HAL_RCC_OscConfig+0x24c>
 8002b0a:	f7fe fc65 	bl	80013d8 <HAL_GetTick>
 8002b0e:	4602      	mov	r2, r0
 8002b10:	693b      	ldr	r3, [r7, #16]
 8002b12:	1ad3      	subs	r3, r2, r3
 8002b14:	2b02      	cmp	r3, #2
 8002b16:	d907      	bls.n	8002b28 <HAL_RCC_OscConfig+0x24c>
 8002b18:	2303      	movs	r3, #3
 8002b1a:	e150      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002b1c:	40023800 	.word	0x40023800
 8002b20:	42470000 	.word	0x42470000
 8002b24:	42470e80 	.word	0x42470e80
 8002b28:	4b88      	ldr	r3, [pc, #544]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b2a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002b2c:	f003 0302 	and.w	r3, r3, #2
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d1ea      	bne.n	8002b0a <HAL_RCC_OscConfig+0x22e>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	f003 0304 	and.w	r3, r3, #4
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	f000 8097 	beq.w	8002c70 <HAL_RCC_OscConfig+0x394>
 8002b42:	2300      	movs	r3, #0
 8002b44:	75fb      	strb	r3, [r7, #23]
 8002b46:	4b81      	ldr	r3, [pc, #516]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d10f      	bne.n	8002b72 <HAL_RCC_OscConfig+0x296>
 8002b52:	2300      	movs	r3, #0
 8002b54:	60bb      	str	r3, [r7, #8]
 8002b56:	4b7d      	ldr	r3, [pc, #500]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b5a:	4a7c      	ldr	r2, [pc, #496]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b5c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002b60:	6413      	str	r3, [r2, #64]	@ 0x40
 8002b62:	4b7a      	ldr	r3, [pc, #488]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002b6a:	60bb      	str	r3, [r7, #8]
 8002b6c:	68bb      	ldr	r3, [r7, #8]
 8002b6e:	2301      	movs	r3, #1
 8002b70:	75fb      	strb	r3, [r7, #23]
 8002b72:	4b77      	ldr	r3, [pc, #476]	@ (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d118      	bne.n	8002bb0 <HAL_RCC_OscConfig+0x2d4>
 8002b7e:	4b74      	ldr	r3, [pc, #464]	@ (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4a73      	ldr	r2, [pc, #460]	@ (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002b84:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002b88:	6013      	str	r3, [r2, #0]
 8002b8a:	f7fe fc25 	bl	80013d8 <HAL_GetTick>
 8002b8e:	6138      	str	r0, [r7, #16]
 8002b90:	e008      	b.n	8002ba4 <HAL_RCC_OscConfig+0x2c8>
 8002b92:	f7fe fc21 	bl	80013d8 <HAL_GetTick>
 8002b96:	4602      	mov	r2, r0
 8002b98:	693b      	ldr	r3, [r7, #16]
 8002b9a:	1ad3      	subs	r3, r2, r3
 8002b9c:	2b02      	cmp	r3, #2
 8002b9e:	d901      	bls.n	8002ba4 <HAL_RCC_OscConfig+0x2c8>
 8002ba0:	2303      	movs	r3, #3
 8002ba2:	e10c      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002ba4:	4b6a      	ldr	r3, [pc, #424]	@ (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d0f0      	beq.n	8002b92 <HAL_RCC_OscConfig+0x2b6>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	689b      	ldr	r3, [r3, #8]
 8002bb4:	2b01      	cmp	r3, #1
 8002bb6:	d106      	bne.n	8002bc6 <HAL_RCC_OscConfig+0x2ea>
 8002bb8:	4b64      	ldr	r3, [pc, #400]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bba:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002bbc:	4a63      	ldr	r2, [pc, #396]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bbe:	f043 0301 	orr.w	r3, r3, #1
 8002bc2:	6713      	str	r3, [r2, #112]	@ 0x70
 8002bc4:	e01c      	b.n	8002c00 <HAL_RCC_OscConfig+0x324>
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	689b      	ldr	r3, [r3, #8]
 8002bca:	2b05      	cmp	r3, #5
 8002bcc:	d10c      	bne.n	8002be8 <HAL_RCC_OscConfig+0x30c>
 8002bce:	4b5f      	ldr	r3, [pc, #380]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bd0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002bd2:	4a5e      	ldr	r2, [pc, #376]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bd4:	f043 0304 	orr.w	r3, r3, #4
 8002bd8:	6713      	str	r3, [r2, #112]	@ 0x70
 8002bda:	4b5c      	ldr	r3, [pc, #368]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bdc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002bde:	4a5b      	ldr	r2, [pc, #364]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002be0:	f043 0301 	orr.w	r3, r3, #1
 8002be4:	6713      	str	r3, [r2, #112]	@ 0x70
 8002be6:	e00b      	b.n	8002c00 <HAL_RCC_OscConfig+0x324>
 8002be8:	4b58      	ldr	r3, [pc, #352]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bea:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002bec:	4a57      	ldr	r2, [pc, #348]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bee:	f023 0301 	bic.w	r3, r3, #1
 8002bf2:	6713      	str	r3, [r2, #112]	@ 0x70
 8002bf4:	4b55      	ldr	r3, [pc, #340]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bf6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002bf8:	4a54      	ldr	r2, [pc, #336]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bfa:	f023 0304 	bic.w	r3, r3, #4
 8002bfe:	6713      	str	r3, [r2, #112]	@ 0x70
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	689b      	ldr	r3, [r3, #8]
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d015      	beq.n	8002c34 <HAL_RCC_OscConfig+0x358>
 8002c08:	f7fe fbe6 	bl	80013d8 <HAL_GetTick>
 8002c0c:	6138      	str	r0, [r7, #16]
 8002c0e:	e00a      	b.n	8002c26 <HAL_RCC_OscConfig+0x34a>
 8002c10:	f7fe fbe2 	bl	80013d8 <HAL_GetTick>
 8002c14:	4602      	mov	r2, r0
 8002c16:	693b      	ldr	r3, [r7, #16]
 8002c18:	1ad3      	subs	r3, r2, r3
 8002c1a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002c1e:	4293      	cmp	r3, r2
 8002c20:	d901      	bls.n	8002c26 <HAL_RCC_OscConfig+0x34a>
 8002c22:	2303      	movs	r3, #3
 8002c24:	e0cb      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002c26:	4b49      	ldr	r3, [pc, #292]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c28:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c2a:	f003 0302 	and.w	r3, r3, #2
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d0ee      	beq.n	8002c10 <HAL_RCC_OscConfig+0x334>
 8002c32:	e014      	b.n	8002c5e <HAL_RCC_OscConfig+0x382>
 8002c34:	f7fe fbd0 	bl	80013d8 <HAL_GetTick>
 8002c38:	6138      	str	r0, [r7, #16]
 8002c3a:	e00a      	b.n	8002c52 <HAL_RCC_OscConfig+0x376>
 8002c3c:	f7fe fbcc 	bl	80013d8 <HAL_GetTick>
 8002c40:	4602      	mov	r2, r0
 8002c42:	693b      	ldr	r3, [r7, #16]
 8002c44:	1ad3      	subs	r3, r2, r3
 8002c46:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002c4a:	4293      	cmp	r3, r2
 8002c4c:	d901      	bls.n	8002c52 <HAL_RCC_OscConfig+0x376>
 8002c4e:	2303      	movs	r3, #3
 8002c50:	e0b5      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002c52:	4b3e      	ldr	r3, [pc, #248]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c54:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002c56:	f003 0302 	and.w	r3, r3, #2
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d1ee      	bne.n	8002c3c <HAL_RCC_OscConfig+0x360>
 8002c5e:	7dfb      	ldrb	r3, [r7, #23]
 8002c60:	2b01      	cmp	r3, #1
 8002c62:	d105      	bne.n	8002c70 <HAL_RCC_OscConfig+0x394>
 8002c64:	4b39      	ldr	r3, [pc, #228]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c68:	4a38      	ldr	r2, [pc, #224]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c6a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002c6e:	6413      	str	r3, [r2, #64]	@ 0x40
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	699b      	ldr	r3, [r3, #24]
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	f000 80a1 	beq.w	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002c7a:	4b34      	ldr	r3, [pc, #208]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c7c:	689b      	ldr	r3, [r3, #8]
 8002c7e:	f003 030c 	and.w	r3, r3, #12
 8002c82:	2b08      	cmp	r3, #8
 8002c84:	d05c      	beq.n	8002d40 <HAL_RCC_OscConfig+0x464>
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	699b      	ldr	r3, [r3, #24]
 8002c8a:	2b02      	cmp	r3, #2
 8002c8c:	d141      	bne.n	8002d12 <HAL_RCC_OscConfig+0x436>
 8002c8e:	4b31      	ldr	r3, [pc, #196]	@ (8002d54 <HAL_RCC_OscConfig+0x478>)
 8002c90:	2200      	movs	r2, #0
 8002c92:	601a      	str	r2, [r3, #0]
 8002c94:	f7fe fba0 	bl	80013d8 <HAL_GetTick>
 8002c98:	6138      	str	r0, [r7, #16]
 8002c9a:	e008      	b.n	8002cae <HAL_RCC_OscConfig+0x3d2>
 8002c9c:	f7fe fb9c 	bl	80013d8 <HAL_GetTick>
 8002ca0:	4602      	mov	r2, r0
 8002ca2:	693b      	ldr	r3, [r7, #16]
 8002ca4:	1ad3      	subs	r3, r2, r3
 8002ca6:	2b02      	cmp	r3, #2
 8002ca8:	d901      	bls.n	8002cae <HAL_RCC_OscConfig+0x3d2>
 8002caa:	2303      	movs	r3, #3
 8002cac:	e087      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002cae:	4b27      	ldr	r3, [pc, #156]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d1f0      	bne.n	8002c9c <HAL_RCC_OscConfig+0x3c0>
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	69da      	ldr	r2, [r3, #28]
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	6a1b      	ldr	r3, [r3, #32]
 8002cc2:	431a      	orrs	r2, r3
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002cc8:	019b      	lsls	r3, r3, #6
 8002cca:	431a      	orrs	r2, r3
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002cd0:	085b      	lsrs	r3, r3, #1
 8002cd2:	3b01      	subs	r3, #1
 8002cd4:	041b      	lsls	r3, r3, #16
 8002cd6:	431a      	orrs	r2, r3
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002cdc:	061b      	lsls	r3, r3, #24
 8002cde:	491b      	ldr	r1, [pc, #108]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002ce0:	4313      	orrs	r3, r2
 8002ce2:	604b      	str	r3, [r1, #4]
 8002ce4:	4b1b      	ldr	r3, [pc, #108]	@ (8002d54 <HAL_RCC_OscConfig+0x478>)
 8002ce6:	2201      	movs	r2, #1
 8002ce8:	601a      	str	r2, [r3, #0]
 8002cea:	f7fe fb75 	bl	80013d8 <HAL_GetTick>
 8002cee:	6138      	str	r0, [r7, #16]
 8002cf0:	e008      	b.n	8002d04 <HAL_RCC_OscConfig+0x428>
 8002cf2:	f7fe fb71 	bl	80013d8 <HAL_GetTick>
 8002cf6:	4602      	mov	r2, r0
 8002cf8:	693b      	ldr	r3, [r7, #16]
 8002cfa:	1ad3      	subs	r3, r2, r3
 8002cfc:	2b02      	cmp	r3, #2
 8002cfe:	d901      	bls.n	8002d04 <HAL_RCC_OscConfig+0x428>
 8002d00:	2303      	movs	r3, #3
 8002d02:	e05c      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002d04:	4b11      	ldr	r3, [pc, #68]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d0f0      	beq.n	8002cf2 <HAL_RCC_OscConfig+0x416>
 8002d10:	e054      	b.n	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002d12:	4b10      	ldr	r3, [pc, #64]	@ (8002d54 <HAL_RCC_OscConfig+0x478>)
 8002d14:	2200      	movs	r2, #0
 8002d16:	601a      	str	r2, [r3, #0]
 8002d18:	f7fe fb5e 	bl	80013d8 <HAL_GetTick>
 8002d1c:	6138      	str	r0, [r7, #16]
 8002d1e:	e008      	b.n	8002d32 <HAL_RCC_OscConfig+0x456>
 8002d20:	f7fe fb5a 	bl	80013d8 <HAL_GetTick>
 8002d24:	4602      	mov	r2, r0
 8002d26:	693b      	ldr	r3, [r7, #16]
 8002d28:	1ad3      	subs	r3, r2, r3
 8002d2a:	2b02      	cmp	r3, #2
 8002d2c:	d901      	bls.n	8002d32 <HAL_RCC_OscConfig+0x456>
 8002d2e:	2303      	movs	r3, #3
 8002d30:	e045      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002d32:	4b06      	ldr	r3, [pc, #24]	@ (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d1f0      	bne.n	8002d20 <HAL_RCC_OscConfig+0x444>
 8002d3e:	e03d      	b.n	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	699b      	ldr	r3, [r3, #24]
 8002d44:	2b01      	cmp	r3, #1
 8002d46:	d107      	bne.n	8002d58 <HAL_RCC_OscConfig+0x47c>
 8002d48:	2301      	movs	r3, #1
 8002d4a:	e038      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002d4c:	40023800 	.word	0x40023800
 8002d50:	40007000 	.word	0x40007000
 8002d54:	42470060 	.word	0x42470060
 8002d58:	4b1b      	ldr	r3, [pc, #108]	@ (8002dc8 <HAL_RCC_OscConfig+0x4ec>)
 8002d5a:	685b      	ldr	r3, [r3, #4]
 8002d5c:	60fb      	str	r3, [r7, #12]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	699b      	ldr	r3, [r3, #24]
 8002d62:	2b01      	cmp	r3, #1
 8002d64:	d028      	beq.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	69db      	ldr	r3, [r3, #28]
 8002d70:	429a      	cmp	r2, r3
 8002d72:	d121      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	6a1b      	ldr	r3, [r3, #32]
 8002d7e:	429a      	cmp	r2, r3
 8002d80:	d11a      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d82:	68fa      	ldr	r2, [r7, #12]
 8002d84:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002d88:	4013      	ands	r3, r2
 8002d8a:	687a      	ldr	r2, [r7, #4]
 8002d8c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002d8e:	0192      	lsls	r2, r2, #6
 8002d90:	4293      	cmp	r3, r2
 8002d92:	d111      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d9e:	085b      	lsrs	r3, r3, #1
 8002da0:	3b01      	subs	r3, #1
 8002da2:	041b      	lsls	r3, r3, #16
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d107      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002db2:	061b      	lsls	r3, r3, #24
 8002db4:	429a      	cmp	r2, r3
 8002db6:	d001      	beq.n	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002db8:	2301      	movs	r3, #1
 8002dba:	e000      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	3718      	adds	r7, #24
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	bd80      	pop	{r7, pc}
 8002dc6:	bf00      	nop
 8002dc8:	40023800 	.word	0x40023800

08002dcc <HAL_RCC_ClockConfig>:
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b084      	sub	sp, #16
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
 8002dd4:	6039      	str	r1, [r7, #0]
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	d101      	bne.n	8002de0 <HAL_RCC_ClockConfig+0x14>
 8002ddc:	2301      	movs	r3, #1
 8002dde:	e0cc      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002de0:	4b68      	ldr	r3, [pc, #416]	@ (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	f003 0307 	and.w	r3, r3, #7
 8002de8:	683a      	ldr	r2, [r7, #0]
 8002dea:	429a      	cmp	r2, r3
 8002dec:	d90c      	bls.n	8002e08 <HAL_RCC_ClockConfig+0x3c>
 8002dee:	4b65      	ldr	r3, [pc, #404]	@ (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002df0:	683a      	ldr	r2, [r7, #0]
 8002df2:	b2d2      	uxtb	r2, r2
 8002df4:	701a      	strb	r2, [r3, #0]
 8002df6:	4b63      	ldr	r3, [pc, #396]	@ (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	f003 0307 	and.w	r3, r3, #7
 8002dfe:	683a      	ldr	r2, [r7, #0]
 8002e00:	429a      	cmp	r2, r3
 8002e02:	d001      	beq.n	8002e08 <HAL_RCC_ClockConfig+0x3c>
 8002e04:	2301      	movs	r3, #1
 8002e06:	e0b8      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	f003 0302 	and.w	r3, r3, #2
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	d020      	beq.n	8002e56 <HAL_RCC_ClockConfig+0x8a>
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	f003 0304 	and.w	r3, r3, #4
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	d005      	beq.n	8002e2c <HAL_RCC_ClockConfig+0x60>
 8002e20:	4b59      	ldr	r3, [pc, #356]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e22:	689b      	ldr	r3, [r3, #8]
 8002e24:	4a58      	ldr	r2, [pc, #352]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e26:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002e2a:	6093      	str	r3, [r2, #8]
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	f003 0308 	and.w	r3, r3, #8
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	d005      	beq.n	8002e44 <HAL_RCC_ClockConfig+0x78>
 8002e38:	4b53      	ldr	r3, [pc, #332]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e3a:	689b      	ldr	r3, [r3, #8]
 8002e3c:	4a52      	ldr	r2, [pc, #328]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e3e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002e42:	6093      	str	r3, [r2, #8]
 8002e44:	4b50      	ldr	r3, [pc, #320]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e46:	689b      	ldr	r3, [r3, #8]
 8002e48:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	689b      	ldr	r3, [r3, #8]
 8002e50:	494d      	ldr	r1, [pc, #308]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e52:	4313      	orrs	r3, r2
 8002e54:	608b      	str	r3, [r1, #8]
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	f003 0301 	and.w	r3, r3, #1
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d044      	beq.n	8002eec <HAL_RCC_ClockConfig+0x120>
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	685b      	ldr	r3, [r3, #4]
 8002e66:	2b01      	cmp	r3, #1
 8002e68:	d107      	bne.n	8002e7a <HAL_RCC_ClockConfig+0xae>
 8002e6a:	4b47      	ldr	r3, [pc, #284]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d119      	bne.n	8002eaa <HAL_RCC_ClockConfig+0xde>
 8002e76:	2301      	movs	r3, #1
 8002e78:	e07f      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	685b      	ldr	r3, [r3, #4]
 8002e7e:	2b02      	cmp	r3, #2
 8002e80:	d003      	beq.n	8002e8a <HAL_RCC_ClockConfig+0xbe>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	685b      	ldr	r3, [r3, #4]
 8002e86:	2b03      	cmp	r3, #3
 8002e88:	d107      	bne.n	8002e9a <HAL_RCC_ClockConfig+0xce>
 8002e8a:	4b3f      	ldr	r3, [pc, #252]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d109      	bne.n	8002eaa <HAL_RCC_ClockConfig+0xde>
 8002e96:	2301      	movs	r3, #1
 8002e98:	e06f      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002e9a:	4b3b      	ldr	r3, [pc, #236]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	f003 0302 	and.w	r3, r3, #2
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	d101      	bne.n	8002eaa <HAL_RCC_ClockConfig+0xde>
 8002ea6:	2301      	movs	r3, #1
 8002ea8:	e067      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002eaa:	4b37      	ldr	r3, [pc, #220]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002eac:	689b      	ldr	r3, [r3, #8]
 8002eae:	f023 0203 	bic.w	r2, r3, #3
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	685b      	ldr	r3, [r3, #4]
 8002eb6:	4934      	ldr	r1, [pc, #208]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002eb8:	4313      	orrs	r3, r2
 8002eba:	608b      	str	r3, [r1, #8]
 8002ebc:	f7fe fa8c 	bl	80013d8 <HAL_GetTick>
 8002ec0:	60f8      	str	r0, [r7, #12]
 8002ec2:	e00a      	b.n	8002eda <HAL_RCC_ClockConfig+0x10e>
 8002ec4:	f7fe fa88 	bl	80013d8 <HAL_GetTick>
 8002ec8:	4602      	mov	r2, r0
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	1ad3      	subs	r3, r2, r3
 8002ece:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d901      	bls.n	8002eda <HAL_RCC_ClockConfig+0x10e>
 8002ed6:	2303      	movs	r3, #3
 8002ed8:	e04f      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002eda:	4b2b      	ldr	r3, [pc, #172]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002edc:	689b      	ldr	r3, [r3, #8]
 8002ede:	f003 020c 	and.w	r2, r3, #12
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	685b      	ldr	r3, [r3, #4]
 8002ee6:	009b      	lsls	r3, r3, #2
 8002ee8:	429a      	cmp	r2, r3
 8002eea:	d1eb      	bne.n	8002ec4 <HAL_RCC_ClockConfig+0xf8>
 8002eec:	4b25      	ldr	r3, [pc, #148]	@ (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	f003 0307 	and.w	r3, r3, #7
 8002ef4:	683a      	ldr	r2, [r7, #0]
 8002ef6:	429a      	cmp	r2, r3
 8002ef8:	d20c      	bcs.n	8002f14 <HAL_RCC_ClockConfig+0x148>
 8002efa:	4b22      	ldr	r3, [pc, #136]	@ (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002efc:	683a      	ldr	r2, [r7, #0]
 8002efe:	b2d2      	uxtb	r2, r2
 8002f00:	701a      	strb	r2, [r3, #0]
 8002f02:	4b20      	ldr	r3, [pc, #128]	@ (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f003 0307 	and.w	r3, r3, #7
 8002f0a:	683a      	ldr	r2, [r7, #0]
 8002f0c:	429a      	cmp	r2, r3
 8002f0e:	d001      	beq.n	8002f14 <HAL_RCC_ClockConfig+0x148>
 8002f10:	2301      	movs	r3, #1
 8002f12:	e032      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	f003 0304 	and.w	r3, r3, #4
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d008      	beq.n	8002f32 <HAL_RCC_ClockConfig+0x166>
 8002f20:	4b19      	ldr	r3, [pc, #100]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f22:	689b      	ldr	r3, [r3, #8]
 8002f24:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	68db      	ldr	r3, [r3, #12]
 8002f2c:	4916      	ldr	r1, [pc, #88]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f2e:	4313      	orrs	r3, r2
 8002f30:	608b      	str	r3, [r1, #8]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	f003 0308 	and.w	r3, r3, #8
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d009      	beq.n	8002f52 <HAL_RCC_ClockConfig+0x186>
 8002f3e:	4b12      	ldr	r3, [pc, #72]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f40:	689b      	ldr	r3, [r3, #8]
 8002f42:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	691b      	ldr	r3, [r3, #16]
 8002f4a:	00db      	lsls	r3, r3, #3
 8002f4c:	490e      	ldr	r1, [pc, #56]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f4e:	4313      	orrs	r3, r2
 8002f50:	608b      	str	r3, [r1, #8]
 8002f52:	f000 f821 	bl	8002f98 <HAL_RCC_GetSysClockFreq>
 8002f56:	4602      	mov	r2, r0
 8002f58:	4b0b      	ldr	r3, [pc, #44]	@ (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f5a:	689b      	ldr	r3, [r3, #8]
 8002f5c:	091b      	lsrs	r3, r3, #4
 8002f5e:	f003 030f 	and.w	r3, r3, #15
 8002f62:	490a      	ldr	r1, [pc, #40]	@ (8002f8c <HAL_RCC_ClockConfig+0x1c0>)
 8002f64:	5ccb      	ldrb	r3, [r1, r3]
 8002f66:	fa22 f303 	lsr.w	r3, r2, r3
 8002f6a:	4a09      	ldr	r2, [pc, #36]	@ (8002f90 <HAL_RCC_ClockConfig+0x1c4>)
 8002f6c:	6013      	str	r3, [r2, #0]
 8002f6e:	4b09      	ldr	r3, [pc, #36]	@ (8002f94 <HAL_RCC_ClockConfig+0x1c8>)
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	4618      	mov	r0, r3
 8002f74:	f7fe f9ec 	bl	8001350 <HAL_InitTick>
 8002f78:	2300      	movs	r3, #0
 8002f7a:	4618      	mov	r0, r3
 8002f7c:	3710      	adds	r7, #16
 8002f7e:	46bd      	mov	sp, r7
 8002f80:	bd80      	pop	{r7, pc}
 8002f82:	bf00      	nop
 8002f84:	40023c00 	.word	0x40023c00
 8002f88:	40023800 	.word	0x40023800
 8002f8c:	08003f2c 	.word	0x08003f2c
 8002f90:	20000004 	.word	0x20000004
 8002f94:	20000008 	.word	0x20000008

08002f98 <HAL_RCC_GetSysClockFreq>:
 8002f98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002f9c:	b094      	sub	sp, #80	@ 0x50
 8002f9e:	af00      	add	r7, sp, #0
 8002fa0:	2300      	movs	r3, #0
 8002fa2:	647b      	str	r3, [r7, #68]	@ 0x44
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002fa8:	2300      	movs	r3, #0
 8002faa:	643b      	str	r3, [r7, #64]	@ 0x40
 8002fac:	2300      	movs	r3, #0
 8002fae:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002fb0:	4b79      	ldr	r3, [pc, #484]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x200>)
 8002fb2:	689b      	ldr	r3, [r3, #8]
 8002fb4:	f003 030c 	and.w	r3, r3, #12
 8002fb8:	2b08      	cmp	r3, #8
 8002fba:	d00d      	beq.n	8002fd8 <HAL_RCC_GetSysClockFreq+0x40>
 8002fbc:	2b08      	cmp	r3, #8
 8002fbe:	f200 80e1 	bhi.w	8003184 <HAL_RCC_GetSysClockFreq+0x1ec>
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d002      	beq.n	8002fcc <HAL_RCC_GetSysClockFreq+0x34>
 8002fc6:	2b04      	cmp	r3, #4
 8002fc8:	d003      	beq.n	8002fd2 <HAL_RCC_GetSysClockFreq+0x3a>
 8002fca:	e0db      	b.n	8003184 <HAL_RCC_GetSysClockFreq+0x1ec>
 8002fcc:	4b73      	ldr	r3, [pc, #460]	@ (800319c <HAL_RCC_GetSysClockFreq+0x204>)
 8002fce:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002fd0:	e0db      	b.n	800318a <HAL_RCC_GetSysClockFreq+0x1f2>
 8002fd2:	4b73      	ldr	r3, [pc, #460]	@ (80031a0 <HAL_RCC_GetSysClockFreq+0x208>)
 8002fd4:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002fd6:	e0d8      	b.n	800318a <HAL_RCC_GetSysClockFreq+0x1f2>
 8002fd8:	4b6f      	ldr	r3, [pc, #444]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x200>)
 8002fda:	685b      	ldr	r3, [r3, #4]
 8002fdc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002fe0:	647b      	str	r3, [r7, #68]	@ 0x44
 8002fe2:	4b6d      	ldr	r3, [pc, #436]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x200>)
 8002fe4:	685b      	ldr	r3, [r3, #4]
 8002fe6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d063      	beq.n	80030b6 <HAL_RCC_GetSysClockFreq+0x11e>
 8002fee:	4b6a      	ldr	r3, [pc, #424]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x200>)
 8002ff0:	685b      	ldr	r3, [r3, #4]
 8002ff2:	099b      	lsrs	r3, r3, #6
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002ff8:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8002ffa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002ffc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003000:	633b      	str	r3, [r7, #48]	@ 0x30
 8003002:	2300      	movs	r3, #0
 8003004:	637b      	str	r3, [r7, #52]	@ 0x34
 8003006:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 800300a:	4622      	mov	r2, r4
 800300c:	462b      	mov	r3, r5
 800300e:	f04f 0000 	mov.w	r0, #0
 8003012:	f04f 0100 	mov.w	r1, #0
 8003016:	0159      	lsls	r1, r3, #5
 8003018:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800301c:	0150      	lsls	r0, r2, #5
 800301e:	4602      	mov	r2, r0
 8003020:	460b      	mov	r3, r1
 8003022:	4621      	mov	r1, r4
 8003024:	1a51      	subs	r1, r2, r1
 8003026:	6139      	str	r1, [r7, #16]
 8003028:	4629      	mov	r1, r5
 800302a:	eb63 0301 	sbc.w	r3, r3, r1
 800302e:	617b      	str	r3, [r7, #20]
 8003030:	f04f 0200 	mov.w	r2, #0
 8003034:	f04f 0300 	mov.w	r3, #0
 8003038:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800303c:	4659      	mov	r1, fp
 800303e:	018b      	lsls	r3, r1, #6
 8003040:	4651      	mov	r1, sl
 8003042:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003046:	4651      	mov	r1, sl
 8003048:	018a      	lsls	r2, r1, #6
 800304a:	4651      	mov	r1, sl
 800304c:	ebb2 0801 	subs.w	r8, r2, r1
 8003050:	4659      	mov	r1, fp
 8003052:	eb63 0901 	sbc.w	r9, r3, r1
 8003056:	f04f 0200 	mov.w	r2, #0
 800305a:	f04f 0300 	mov.w	r3, #0
 800305e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003062:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003066:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800306a:	4690      	mov	r8, r2
 800306c:	4699      	mov	r9, r3
 800306e:	4623      	mov	r3, r4
 8003070:	eb18 0303 	adds.w	r3, r8, r3
 8003074:	60bb      	str	r3, [r7, #8]
 8003076:	462b      	mov	r3, r5
 8003078:	eb49 0303 	adc.w	r3, r9, r3
 800307c:	60fb      	str	r3, [r7, #12]
 800307e:	f04f 0200 	mov.w	r2, #0
 8003082:	f04f 0300 	mov.w	r3, #0
 8003086:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800308a:	4629      	mov	r1, r5
 800308c:	024b      	lsls	r3, r1, #9
 800308e:	4621      	mov	r1, r4
 8003090:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003094:	4621      	mov	r1, r4
 8003096:	024a      	lsls	r2, r1, #9
 8003098:	4610      	mov	r0, r2
 800309a:	4619      	mov	r1, r3
 800309c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800309e:	2200      	movs	r2, #0
 80030a0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80030a2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80030a4:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80030a8:	f7fd f88e 	bl	80001c8 <__aeabi_uldivmod>
 80030ac:	4602      	mov	r2, r0
 80030ae:	460b      	mov	r3, r1
 80030b0:	4613      	mov	r3, r2
 80030b2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80030b4:	e058      	b.n	8003168 <HAL_RCC_GetSysClockFreq+0x1d0>
 80030b6:	4b38      	ldr	r3, [pc, #224]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x200>)
 80030b8:	685b      	ldr	r3, [r3, #4]
 80030ba:	099b      	lsrs	r3, r3, #6
 80030bc:	2200      	movs	r2, #0
 80030be:	4618      	mov	r0, r3
 80030c0:	4611      	mov	r1, r2
 80030c2:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80030c6:	623b      	str	r3, [r7, #32]
 80030c8:	2300      	movs	r3, #0
 80030ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80030cc:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80030d0:	4642      	mov	r2, r8
 80030d2:	464b      	mov	r3, r9
 80030d4:	f04f 0000 	mov.w	r0, #0
 80030d8:	f04f 0100 	mov.w	r1, #0
 80030dc:	0159      	lsls	r1, r3, #5
 80030de:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80030e2:	0150      	lsls	r0, r2, #5
 80030e4:	4602      	mov	r2, r0
 80030e6:	460b      	mov	r3, r1
 80030e8:	4641      	mov	r1, r8
 80030ea:	ebb2 0a01 	subs.w	sl, r2, r1
 80030ee:	4649      	mov	r1, r9
 80030f0:	eb63 0b01 	sbc.w	fp, r3, r1
 80030f4:	f04f 0200 	mov.w	r2, #0
 80030f8:	f04f 0300 	mov.w	r3, #0
 80030fc:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003100:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003104:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003108:	ebb2 040a 	subs.w	r4, r2, sl
 800310c:	eb63 050b 	sbc.w	r5, r3, fp
 8003110:	f04f 0200 	mov.w	r2, #0
 8003114:	f04f 0300 	mov.w	r3, #0
 8003118:	00eb      	lsls	r3, r5, #3
 800311a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800311e:	00e2      	lsls	r2, r4, #3
 8003120:	4614      	mov	r4, r2
 8003122:	461d      	mov	r5, r3
 8003124:	4643      	mov	r3, r8
 8003126:	18e3      	adds	r3, r4, r3
 8003128:	603b      	str	r3, [r7, #0]
 800312a:	464b      	mov	r3, r9
 800312c:	eb45 0303 	adc.w	r3, r5, r3
 8003130:	607b      	str	r3, [r7, #4]
 8003132:	f04f 0200 	mov.w	r2, #0
 8003136:	f04f 0300 	mov.w	r3, #0
 800313a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800313e:	4629      	mov	r1, r5
 8003140:	028b      	lsls	r3, r1, #10
 8003142:	4621      	mov	r1, r4
 8003144:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003148:	4621      	mov	r1, r4
 800314a:	028a      	lsls	r2, r1, #10
 800314c:	4610      	mov	r0, r2
 800314e:	4619      	mov	r1, r3
 8003150:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003152:	2200      	movs	r2, #0
 8003154:	61bb      	str	r3, [r7, #24]
 8003156:	61fa      	str	r2, [r7, #28]
 8003158:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800315c:	f7fd f834 	bl	80001c8 <__aeabi_uldivmod>
 8003160:	4602      	mov	r2, r0
 8003162:	460b      	mov	r3, r1
 8003164:	4613      	mov	r3, r2
 8003166:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003168:	4b0b      	ldr	r3, [pc, #44]	@ (8003198 <HAL_RCC_GetSysClockFreq+0x200>)
 800316a:	685b      	ldr	r3, [r3, #4]
 800316c:	0c1b      	lsrs	r3, r3, #16
 800316e:	f003 0303 	and.w	r3, r3, #3
 8003172:	3301      	adds	r3, #1
 8003174:	005b      	lsls	r3, r3, #1
 8003176:	643b      	str	r3, [r7, #64]	@ 0x40
 8003178:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800317a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800317c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003180:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003182:	e002      	b.n	800318a <HAL_RCC_GetSysClockFreq+0x1f2>
 8003184:	4b05      	ldr	r3, [pc, #20]	@ (800319c <HAL_RCC_GetSysClockFreq+0x204>)
 8003186:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003188:	bf00      	nop
 800318a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800318c:	4618      	mov	r0, r3
 800318e:	3750      	adds	r7, #80	@ 0x50
 8003190:	46bd      	mov	sp, r7
 8003192:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003196:	bf00      	nop
 8003198:	40023800 	.word	0x40023800
 800319c:	00f42400 	.word	0x00f42400
 80031a0:	007a1200 	.word	0x007a1200

080031a4 <HAL_TIM_Base_Init>:
 80031a4:	b580      	push	{r7, lr}
 80031a6:	b082      	sub	sp, #8
 80031a8:	af00      	add	r7, sp, #0
 80031aa:	6078      	str	r0, [r7, #4]
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d101      	bne.n	80031b6 <HAL_TIM_Base_Init+0x12>
 80031b2:	2301      	movs	r3, #1
 80031b4:	e041      	b.n	800323a <HAL_TIM_Base_Init+0x96>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80031bc:	b2db      	uxtb	r3, r3
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d106      	bne.n	80031d0 <HAL_TIM_Base_Init+0x2c>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	2200      	movs	r2, #0
 80031c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031ca:	6878      	ldr	r0, [r7, #4]
 80031cc:	f7fd ffcc 	bl	8001168 <HAL_TIM_Base_MspInit>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	2202      	movs	r2, #2
 80031d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681a      	ldr	r2, [r3, #0]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	3304      	adds	r3, #4
 80031e0:	4619      	mov	r1, r3
 80031e2:	4610      	mov	r0, r2
 80031e4:	f000 fad8 	bl	8003798 <TIM_Base_SetConfig>
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2201      	movs	r2, #1
 80031ec:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	2201      	movs	r2, #1
 80031f4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	2201      	movs	r2, #1
 80031fc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	2201      	movs	r2, #1
 8003204:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	2201      	movs	r2, #1
 800320c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	2201      	movs	r2, #1
 8003214:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	2201      	movs	r2, #1
 800321c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	2201      	movs	r2, #1
 8003224:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	2201      	movs	r2, #1
 800322c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	2201      	movs	r2, #1
 8003234:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003238:	2300      	movs	r3, #0
 800323a:	4618      	mov	r0, r3
 800323c:	3708      	adds	r7, #8
 800323e:	46bd      	mov	sp, r7
 8003240:	bd80      	pop	{r7, pc}

08003242 <HAL_TIM_PWM_Init>:
 8003242:	b580      	push	{r7, lr}
 8003244:	b082      	sub	sp, #8
 8003246:	af00      	add	r7, sp, #0
 8003248:	6078      	str	r0, [r7, #4]
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	2b00      	cmp	r3, #0
 800324e:	d101      	bne.n	8003254 <HAL_TIM_PWM_Init+0x12>
 8003250:	2301      	movs	r3, #1
 8003252:	e041      	b.n	80032d8 <HAL_TIM_PWM_Init+0x96>
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800325a:	b2db      	uxtb	r3, r3
 800325c:	2b00      	cmp	r3, #0
 800325e:	d106      	bne.n	800326e <HAL_TIM_PWM_Init+0x2c>
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	2200      	movs	r2, #0
 8003264:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003268:	6878      	ldr	r0, [r7, #4]
 800326a:	f000 f839 	bl	80032e0 <HAL_TIM_PWM_MspInit>
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	2202      	movs	r2, #2
 8003272:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681a      	ldr	r2, [r3, #0]
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	3304      	adds	r3, #4
 800327e:	4619      	mov	r1, r3
 8003280:	4610      	mov	r0, r2
 8003282:	f000 fa89 	bl	8003798 <TIM_Base_SetConfig>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	2201      	movs	r2, #1
 800328a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	2201      	movs	r2, #1
 8003292:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	2201      	movs	r2, #1
 800329a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	2201      	movs	r2, #1
 80032a2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	2201      	movs	r2, #1
 80032aa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	2201      	movs	r2, #1
 80032b2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	2201      	movs	r2, #1
 80032ba:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	2201      	movs	r2, #1
 80032c2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	2201      	movs	r2, #1
 80032ca:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	2201      	movs	r2, #1
 80032d2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032d6:	2300      	movs	r3, #0
 80032d8:	4618      	mov	r0, r3
 80032da:	3708      	adds	r7, #8
 80032dc:	46bd      	mov	sp, r7
 80032de:	bd80      	pop	{r7, pc}

080032e0 <HAL_TIM_PWM_MspInit>:
 80032e0:	b480      	push	{r7}
 80032e2:	b083      	sub	sp, #12
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	6078      	str	r0, [r7, #4]
 80032e8:	bf00      	nop
 80032ea:	370c      	adds	r7, #12
 80032ec:	46bd      	mov	sp, r7
 80032ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f2:	4770      	bx	lr

080032f4 <HAL_TIM_PWM_Start>:
 80032f4:	b580      	push	{r7, lr}
 80032f6:	b084      	sub	sp, #16
 80032f8:	af00      	add	r7, sp, #0
 80032fa:	6078      	str	r0, [r7, #4]
 80032fc:	6039      	str	r1, [r7, #0]
 80032fe:	683b      	ldr	r3, [r7, #0]
 8003300:	2b00      	cmp	r3, #0
 8003302:	d109      	bne.n	8003318 <HAL_TIM_PWM_Start+0x24>
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800330a:	b2db      	uxtb	r3, r3
 800330c:	2b01      	cmp	r3, #1
 800330e:	bf14      	ite	ne
 8003310:	2301      	movne	r3, #1
 8003312:	2300      	moveq	r3, #0
 8003314:	b2db      	uxtb	r3, r3
 8003316:	e022      	b.n	800335e <HAL_TIM_PWM_Start+0x6a>
 8003318:	683b      	ldr	r3, [r7, #0]
 800331a:	2b04      	cmp	r3, #4
 800331c:	d109      	bne.n	8003332 <HAL_TIM_PWM_Start+0x3e>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8003324:	b2db      	uxtb	r3, r3
 8003326:	2b01      	cmp	r3, #1
 8003328:	bf14      	ite	ne
 800332a:	2301      	movne	r3, #1
 800332c:	2300      	moveq	r3, #0
 800332e:	b2db      	uxtb	r3, r3
 8003330:	e015      	b.n	800335e <HAL_TIM_PWM_Start+0x6a>
 8003332:	683b      	ldr	r3, [r7, #0]
 8003334:	2b08      	cmp	r3, #8
 8003336:	d109      	bne.n	800334c <HAL_TIM_PWM_Start+0x58>
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800333e:	b2db      	uxtb	r3, r3
 8003340:	2b01      	cmp	r3, #1
 8003342:	bf14      	ite	ne
 8003344:	2301      	movne	r3, #1
 8003346:	2300      	moveq	r3, #0
 8003348:	b2db      	uxtb	r3, r3
 800334a:	e008      	b.n	800335e <HAL_TIM_PWM_Start+0x6a>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003352:	b2db      	uxtb	r3, r3
 8003354:	2b01      	cmp	r3, #1
 8003356:	bf14      	ite	ne
 8003358:	2301      	movne	r3, #1
 800335a:	2300      	moveq	r3, #0
 800335c:	b2db      	uxtb	r3, r3
 800335e:	2b00      	cmp	r3, #0
 8003360:	d001      	beq.n	8003366 <HAL_TIM_PWM_Start+0x72>
 8003362:	2301      	movs	r3, #1
 8003364:	e07c      	b.n	8003460 <HAL_TIM_PWM_Start+0x16c>
 8003366:	683b      	ldr	r3, [r7, #0]
 8003368:	2b00      	cmp	r3, #0
 800336a:	d104      	bne.n	8003376 <HAL_TIM_PWM_Start+0x82>
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2202      	movs	r2, #2
 8003370:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003374:	e013      	b.n	800339e <HAL_TIM_PWM_Start+0xaa>
 8003376:	683b      	ldr	r3, [r7, #0]
 8003378:	2b04      	cmp	r3, #4
 800337a:	d104      	bne.n	8003386 <HAL_TIM_PWM_Start+0x92>
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	2202      	movs	r2, #2
 8003380:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003384:	e00b      	b.n	800339e <HAL_TIM_PWM_Start+0xaa>
 8003386:	683b      	ldr	r3, [r7, #0]
 8003388:	2b08      	cmp	r3, #8
 800338a:	d104      	bne.n	8003396 <HAL_TIM_PWM_Start+0xa2>
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	2202      	movs	r2, #2
 8003390:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003394:	e003      	b.n	800339e <HAL_TIM_PWM_Start+0xaa>
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	2202      	movs	r2, #2
 800339a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	2201      	movs	r2, #1
 80033a4:	6839      	ldr	r1, [r7, #0]
 80033a6:	4618      	mov	r0, r3
 80033a8:	f000 fce6 	bl	8003d78 <TIM_CCxChannelCmd>
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	4a2d      	ldr	r2, [pc, #180]	@ (8003468 <HAL_TIM_PWM_Start+0x174>)
 80033b2:	4293      	cmp	r3, r2
 80033b4:	d004      	beq.n	80033c0 <HAL_TIM_PWM_Start+0xcc>
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	4a2c      	ldr	r2, [pc, #176]	@ (800346c <HAL_TIM_PWM_Start+0x178>)
 80033bc:	4293      	cmp	r3, r2
 80033be:	d101      	bne.n	80033c4 <HAL_TIM_PWM_Start+0xd0>
 80033c0:	2301      	movs	r3, #1
 80033c2:	e000      	b.n	80033c6 <HAL_TIM_PWM_Start+0xd2>
 80033c4:	2300      	movs	r3, #0
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	d007      	beq.n	80033da <HAL_TIM_PWM_Start+0xe6>
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80033d8:	645a      	str	r2, [r3, #68]	@ 0x44
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	681b      	ldr	r3, [r3, #0]
 80033de:	4a22      	ldr	r2, [pc, #136]	@ (8003468 <HAL_TIM_PWM_Start+0x174>)
 80033e0:	4293      	cmp	r3, r2
 80033e2:	d022      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80033ec:	d01d      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	4a1f      	ldr	r2, [pc, #124]	@ (8003470 <HAL_TIM_PWM_Start+0x17c>)
 80033f4:	4293      	cmp	r3, r2
 80033f6:	d018      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	4a1d      	ldr	r2, [pc, #116]	@ (8003474 <HAL_TIM_PWM_Start+0x180>)
 80033fe:	4293      	cmp	r3, r2
 8003400:	d013      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	4a1c      	ldr	r2, [pc, #112]	@ (8003478 <HAL_TIM_PWM_Start+0x184>)
 8003408:	4293      	cmp	r3, r2
 800340a:	d00e      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	4a16      	ldr	r2, [pc, #88]	@ (800346c <HAL_TIM_PWM_Start+0x178>)
 8003412:	4293      	cmp	r3, r2
 8003414:	d009      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	4a18      	ldr	r2, [pc, #96]	@ (800347c <HAL_TIM_PWM_Start+0x188>)
 800341c:	4293      	cmp	r3, r2
 800341e:	d004      	beq.n	800342a <HAL_TIM_PWM_Start+0x136>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	4a16      	ldr	r2, [pc, #88]	@ (8003480 <HAL_TIM_PWM_Start+0x18c>)
 8003426:	4293      	cmp	r3, r2
 8003428:	d111      	bne.n	800344e <HAL_TIM_PWM_Start+0x15a>
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	689b      	ldr	r3, [r3, #8]
 8003430:	f003 0307 	and.w	r3, r3, #7
 8003434:	60fb      	str	r3, [r7, #12]
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	2b06      	cmp	r3, #6
 800343a:	d010      	beq.n	800345e <HAL_TIM_PWM_Start+0x16a>
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	681a      	ldr	r2, [r3, #0]
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	f042 0201 	orr.w	r2, r2, #1
 800344a:	601a      	str	r2, [r3, #0]
 800344c:	e007      	b.n	800345e <HAL_TIM_PWM_Start+0x16a>
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	681a      	ldr	r2, [r3, #0]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	f042 0201 	orr.w	r2, r2, #1
 800345c:	601a      	str	r2, [r3, #0]
 800345e:	2300      	movs	r3, #0
 8003460:	4618      	mov	r0, r3
 8003462:	3710      	adds	r7, #16
 8003464:	46bd      	mov	sp, r7
 8003466:	bd80      	pop	{r7, pc}
 8003468:	40010000 	.word	0x40010000
 800346c:	40010400 	.word	0x40010400
 8003470:	40000400 	.word	0x40000400
 8003474:	40000800 	.word	0x40000800
 8003478:	40000c00 	.word	0x40000c00
 800347c:	40014000 	.word	0x40014000
 8003480:	40001800 	.word	0x40001800

08003484 <HAL_TIM_PWM_ConfigChannel>:
 8003484:	b580      	push	{r7, lr}
 8003486:	b086      	sub	sp, #24
 8003488:	af00      	add	r7, sp, #0
 800348a:	60f8      	str	r0, [r7, #12]
 800348c:	60b9      	str	r1, [r7, #8]
 800348e:	607a      	str	r2, [r7, #4]
 8003490:	2300      	movs	r3, #0
 8003492:	75fb      	strb	r3, [r7, #23]
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800349a:	2b01      	cmp	r3, #1
 800349c:	d101      	bne.n	80034a2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800349e:	2302      	movs	r3, #2
 80034a0:	e0ae      	b.n	8003600 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	2201      	movs	r2, #1
 80034a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	2b0c      	cmp	r3, #12
 80034ae:	f200 809f 	bhi.w	80035f0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80034b2:	a201      	add	r2, pc, #4	@ (adr r2, 80034b8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80034b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80034b8:	080034ed 	.word	0x080034ed
 80034bc:	080035f1 	.word	0x080035f1
 80034c0:	080035f1 	.word	0x080035f1
 80034c4:	080035f1 	.word	0x080035f1
 80034c8:	0800352d 	.word	0x0800352d
 80034cc:	080035f1 	.word	0x080035f1
 80034d0:	080035f1 	.word	0x080035f1
 80034d4:	080035f1 	.word	0x080035f1
 80034d8:	0800356f 	.word	0x0800356f
 80034dc:	080035f1 	.word	0x080035f1
 80034e0:	080035f1 	.word	0x080035f1
 80034e4:	080035f1 	.word	0x080035f1
 80034e8:	080035af 	.word	0x080035af
 80034ec:	68fb      	ldr	r3, [r7, #12]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	68b9      	ldr	r1, [r7, #8]
 80034f2:	4618      	mov	r0, r3
 80034f4:	f000 f9f6 	bl	80038e4 <TIM_OC1_SetConfig>
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	699a      	ldr	r2, [r3, #24]
 80034fe:	68fb      	ldr	r3, [r7, #12]
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	f042 0208 	orr.w	r2, r2, #8
 8003506:	619a      	str	r2, [r3, #24]
 8003508:	68fb      	ldr	r3, [r7, #12]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	699a      	ldr	r2, [r3, #24]
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	f022 0204 	bic.w	r2, r2, #4
 8003516:	619a      	str	r2, [r3, #24]
 8003518:	68fb      	ldr	r3, [r7, #12]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	6999      	ldr	r1, [r3, #24]
 800351e:	68bb      	ldr	r3, [r7, #8]
 8003520:	691a      	ldr	r2, [r3, #16]
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	430a      	orrs	r2, r1
 8003528:	619a      	str	r2, [r3, #24]
 800352a:	e064      	b.n	80035f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	68b9      	ldr	r1, [r7, #8]
 8003532:	4618      	mov	r0, r3
 8003534:	f000 fa46 	bl	80039c4 <TIM_OC2_SetConfig>
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	699a      	ldr	r2, [r3, #24]
 800353e:	68fb      	ldr	r3, [r7, #12]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003546:	619a      	str	r2, [r3, #24]
 8003548:	68fb      	ldr	r3, [r7, #12]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	699a      	ldr	r2, [r3, #24]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003556:	619a      	str	r2, [r3, #24]
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	6999      	ldr	r1, [r3, #24]
 800355e:	68bb      	ldr	r3, [r7, #8]
 8003560:	691b      	ldr	r3, [r3, #16]
 8003562:	021a      	lsls	r2, r3, #8
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	430a      	orrs	r2, r1
 800356a:	619a      	str	r2, [r3, #24]
 800356c:	e043      	b.n	80035f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800356e:	68fb      	ldr	r3, [r7, #12]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	68b9      	ldr	r1, [r7, #8]
 8003574:	4618      	mov	r0, r3
 8003576:	f000 fa9b 	bl	8003ab0 <TIM_OC3_SetConfig>
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	69da      	ldr	r2, [r3, #28]
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	f042 0208 	orr.w	r2, r2, #8
 8003588:	61da      	str	r2, [r3, #28]
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	69da      	ldr	r2, [r3, #28]
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	f022 0204 	bic.w	r2, r2, #4
 8003598:	61da      	str	r2, [r3, #28]
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	69d9      	ldr	r1, [r3, #28]
 80035a0:	68bb      	ldr	r3, [r7, #8]
 80035a2:	691a      	ldr	r2, [r3, #16]
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	430a      	orrs	r2, r1
 80035aa:	61da      	str	r2, [r3, #28]
 80035ac:	e023      	b.n	80035f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80035ae:	68fb      	ldr	r3, [r7, #12]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	68b9      	ldr	r1, [r7, #8]
 80035b4:	4618      	mov	r0, r3
 80035b6:	f000 faef 	bl	8003b98 <TIM_OC4_SetConfig>
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	69da      	ldr	r2, [r3, #28]
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80035c8:	61da      	str	r2, [r3, #28]
 80035ca:	68fb      	ldr	r3, [r7, #12]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	69da      	ldr	r2, [r3, #28]
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80035d8:	61da      	str	r2, [r3, #28]
 80035da:	68fb      	ldr	r3, [r7, #12]
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	69d9      	ldr	r1, [r3, #28]
 80035e0:	68bb      	ldr	r3, [r7, #8]
 80035e2:	691b      	ldr	r3, [r3, #16]
 80035e4:	021a      	lsls	r2, r3, #8
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	430a      	orrs	r2, r1
 80035ec:	61da      	str	r2, [r3, #28]
 80035ee:	e002      	b.n	80035f6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80035f0:	2301      	movs	r3, #1
 80035f2:	75fb      	strb	r3, [r7, #23]
 80035f4:	bf00      	nop
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	2200      	movs	r2, #0
 80035fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80035fe:	7dfb      	ldrb	r3, [r7, #23]
 8003600:	4618      	mov	r0, r3
 8003602:	3718      	adds	r7, #24
 8003604:	46bd      	mov	sp, r7
 8003606:	bd80      	pop	{r7, pc}

08003608 <HAL_TIM_ConfigClockSource>:
 8003608:	b580      	push	{r7, lr}
 800360a:	b084      	sub	sp, #16
 800360c:	af00      	add	r7, sp, #0
 800360e:	6078      	str	r0, [r7, #4]
 8003610:	6039      	str	r1, [r7, #0]
 8003612:	2300      	movs	r3, #0
 8003614:	73fb      	strb	r3, [r7, #15]
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800361c:	2b01      	cmp	r3, #1
 800361e:	d101      	bne.n	8003624 <HAL_TIM_ConfigClockSource+0x1c>
 8003620:	2302      	movs	r3, #2
 8003622:	e0b4      	b.n	800378e <HAL_TIM_ConfigClockSource+0x186>
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	2201      	movs	r2, #1
 8003628:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	2202      	movs	r2, #2
 8003630:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	689b      	ldr	r3, [r3, #8]
 800363a:	60bb      	str	r3, [r7, #8]
 800363c:	68bb      	ldr	r3, [r7, #8]
 800363e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003642:	60bb      	str	r3, [r7, #8]
 8003644:	68bb      	ldr	r3, [r7, #8]
 8003646:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800364a:	60bb      	str	r3, [r7, #8]
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	68ba      	ldr	r2, [r7, #8]
 8003652:	609a      	str	r2, [r3, #8]
 8003654:	683b      	ldr	r3, [r7, #0]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800365c:	d03e      	beq.n	80036dc <HAL_TIM_ConfigClockSource+0xd4>
 800365e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003662:	f200 8087 	bhi.w	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 8003666:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800366a:	f000 8086 	beq.w	800377a <HAL_TIM_ConfigClockSource+0x172>
 800366e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003672:	d87f      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 8003674:	2b70      	cmp	r3, #112	@ 0x70
 8003676:	d01a      	beq.n	80036ae <HAL_TIM_ConfigClockSource+0xa6>
 8003678:	2b70      	cmp	r3, #112	@ 0x70
 800367a:	d87b      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 800367c:	2b60      	cmp	r3, #96	@ 0x60
 800367e:	d050      	beq.n	8003722 <HAL_TIM_ConfigClockSource+0x11a>
 8003680:	2b60      	cmp	r3, #96	@ 0x60
 8003682:	d877      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 8003684:	2b50      	cmp	r3, #80	@ 0x50
 8003686:	d03c      	beq.n	8003702 <HAL_TIM_ConfigClockSource+0xfa>
 8003688:	2b50      	cmp	r3, #80	@ 0x50
 800368a:	d873      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 800368c:	2b40      	cmp	r3, #64	@ 0x40
 800368e:	d058      	beq.n	8003742 <HAL_TIM_ConfigClockSource+0x13a>
 8003690:	2b40      	cmp	r3, #64	@ 0x40
 8003692:	d86f      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 8003694:	2b30      	cmp	r3, #48	@ 0x30
 8003696:	d064      	beq.n	8003762 <HAL_TIM_ConfigClockSource+0x15a>
 8003698:	2b30      	cmp	r3, #48	@ 0x30
 800369a:	d86b      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 800369c:	2b20      	cmp	r3, #32
 800369e:	d060      	beq.n	8003762 <HAL_TIM_ConfigClockSource+0x15a>
 80036a0:	2b20      	cmp	r3, #32
 80036a2:	d867      	bhi.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d05c      	beq.n	8003762 <HAL_TIM_ConfigClockSource+0x15a>
 80036a8:	2b10      	cmp	r3, #16
 80036aa:	d05a      	beq.n	8003762 <HAL_TIM_ConfigClockSource+0x15a>
 80036ac:	e062      	b.n	8003774 <HAL_TIM_ConfigClockSource+0x16c>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	6818      	ldr	r0, [r3, #0]
 80036b2:	683b      	ldr	r3, [r7, #0]
 80036b4:	6899      	ldr	r1, [r3, #8]
 80036b6:	683b      	ldr	r3, [r7, #0]
 80036b8:	685a      	ldr	r2, [r3, #4]
 80036ba:	683b      	ldr	r3, [r7, #0]
 80036bc:	68db      	ldr	r3, [r3, #12]
 80036be:	f000 fb3b 	bl	8003d38 <TIM_ETR_SetConfig>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	689b      	ldr	r3, [r3, #8]
 80036c8:	60bb      	str	r3, [r7, #8]
 80036ca:	68bb      	ldr	r3, [r7, #8]
 80036cc:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80036d0:	60bb      	str	r3, [r7, #8]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	68ba      	ldr	r2, [r7, #8]
 80036d8:	609a      	str	r2, [r3, #8]
 80036da:	e04f      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	6818      	ldr	r0, [r3, #0]
 80036e0:	683b      	ldr	r3, [r7, #0]
 80036e2:	6899      	ldr	r1, [r3, #8]
 80036e4:	683b      	ldr	r3, [r7, #0]
 80036e6:	685a      	ldr	r2, [r3, #4]
 80036e8:	683b      	ldr	r3, [r7, #0]
 80036ea:	68db      	ldr	r3, [r3, #12]
 80036ec:	f000 fb24 	bl	8003d38 <TIM_ETR_SetConfig>
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	689a      	ldr	r2, [r3, #8]
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80036fe:	609a      	str	r2, [r3, #8]
 8003700:	e03c      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	6818      	ldr	r0, [r3, #0]
 8003706:	683b      	ldr	r3, [r7, #0]
 8003708:	6859      	ldr	r1, [r3, #4]
 800370a:	683b      	ldr	r3, [r7, #0]
 800370c:	68db      	ldr	r3, [r3, #12]
 800370e:	461a      	mov	r2, r3
 8003710:	f000 fa98 	bl	8003c44 <TIM_TI1_ConfigInputStage>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	2150      	movs	r1, #80	@ 0x50
 800371a:	4618      	mov	r0, r3
 800371c:	f000 faf1 	bl	8003d02 <TIM_ITRx_SetConfig>
 8003720:	e02c      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	6818      	ldr	r0, [r3, #0]
 8003726:	683b      	ldr	r3, [r7, #0]
 8003728:	6859      	ldr	r1, [r3, #4]
 800372a:	683b      	ldr	r3, [r7, #0]
 800372c:	68db      	ldr	r3, [r3, #12]
 800372e:	461a      	mov	r2, r3
 8003730:	f000 fab7 	bl	8003ca2 <TIM_TI2_ConfigInputStage>
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	2160      	movs	r1, #96	@ 0x60
 800373a:	4618      	mov	r0, r3
 800373c:	f000 fae1 	bl	8003d02 <TIM_ITRx_SetConfig>
 8003740:	e01c      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	6818      	ldr	r0, [r3, #0]
 8003746:	683b      	ldr	r3, [r7, #0]
 8003748:	6859      	ldr	r1, [r3, #4]
 800374a:	683b      	ldr	r3, [r7, #0]
 800374c:	68db      	ldr	r3, [r3, #12]
 800374e:	461a      	mov	r2, r3
 8003750:	f000 fa78 	bl	8003c44 <TIM_TI1_ConfigInputStage>
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	2140      	movs	r1, #64	@ 0x40
 800375a:	4618      	mov	r0, r3
 800375c:	f000 fad1 	bl	8003d02 <TIM_ITRx_SetConfig>
 8003760:	e00c      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	681a      	ldr	r2, [r3, #0]
 8003766:	683b      	ldr	r3, [r7, #0]
 8003768:	681b      	ldr	r3, [r3, #0]
 800376a:	4619      	mov	r1, r3
 800376c:	4610      	mov	r0, r2
 800376e:	f000 fac8 	bl	8003d02 <TIM_ITRx_SetConfig>
 8003772:	e003      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 8003774:	2301      	movs	r3, #1
 8003776:	73fb      	strb	r3, [r7, #15]
 8003778:	e000      	b.n	800377c <HAL_TIM_ConfigClockSource+0x174>
 800377a:	bf00      	nop
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	2201      	movs	r2, #1
 8003780:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	2200      	movs	r2, #0
 8003788:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800378c:	7bfb      	ldrb	r3, [r7, #15]
 800378e:	4618      	mov	r0, r3
 8003790:	3710      	adds	r7, #16
 8003792:	46bd      	mov	sp, r7
 8003794:	bd80      	pop	{r7, pc}
	...

08003798 <TIM_Base_SetConfig>:
 8003798:	b480      	push	{r7}
 800379a:	b085      	sub	sp, #20
 800379c:	af00      	add	r7, sp, #0
 800379e:	6078      	str	r0, [r7, #4]
 80037a0:	6039      	str	r1, [r7, #0]
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	60fb      	str	r3, [r7, #12]
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	4a43      	ldr	r2, [pc, #268]	@ (80038b8 <TIM_Base_SetConfig+0x120>)
 80037ac:	4293      	cmp	r3, r2
 80037ae:	d013      	beq.n	80037d8 <TIM_Base_SetConfig+0x40>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80037b6:	d00f      	beq.n	80037d8 <TIM_Base_SetConfig+0x40>
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	4a40      	ldr	r2, [pc, #256]	@ (80038bc <TIM_Base_SetConfig+0x124>)
 80037bc:	4293      	cmp	r3, r2
 80037be:	d00b      	beq.n	80037d8 <TIM_Base_SetConfig+0x40>
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	4a3f      	ldr	r2, [pc, #252]	@ (80038c0 <TIM_Base_SetConfig+0x128>)
 80037c4:	4293      	cmp	r3, r2
 80037c6:	d007      	beq.n	80037d8 <TIM_Base_SetConfig+0x40>
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	4a3e      	ldr	r2, [pc, #248]	@ (80038c4 <TIM_Base_SetConfig+0x12c>)
 80037cc:	4293      	cmp	r3, r2
 80037ce:	d003      	beq.n	80037d8 <TIM_Base_SetConfig+0x40>
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	4a3d      	ldr	r2, [pc, #244]	@ (80038c8 <TIM_Base_SetConfig+0x130>)
 80037d4:	4293      	cmp	r3, r2
 80037d6:	d108      	bne.n	80037ea <TIM_Base_SetConfig+0x52>
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80037de:	60fb      	str	r3, [r7, #12]
 80037e0:	683b      	ldr	r3, [r7, #0]
 80037e2:	685b      	ldr	r3, [r3, #4]
 80037e4:	68fa      	ldr	r2, [r7, #12]
 80037e6:	4313      	orrs	r3, r2
 80037e8:	60fb      	str	r3, [r7, #12]
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	4a32      	ldr	r2, [pc, #200]	@ (80038b8 <TIM_Base_SetConfig+0x120>)
 80037ee:	4293      	cmp	r3, r2
 80037f0:	d02b      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80037f8:	d027      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	4a2f      	ldr	r2, [pc, #188]	@ (80038bc <TIM_Base_SetConfig+0x124>)
 80037fe:	4293      	cmp	r3, r2
 8003800:	d023      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	4a2e      	ldr	r2, [pc, #184]	@ (80038c0 <TIM_Base_SetConfig+0x128>)
 8003806:	4293      	cmp	r3, r2
 8003808:	d01f      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	4a2d      	ldr	r2, [pc, #180]	@ (80038c4 <TIM_Base_SetConfig+0x12c>)
 800380e:	4293      	cmp	r3, r2
 8003810:	d01b      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	4a2c      	ldr	r2, [pc, #176]	@ (80038c8 <TIM_Base_SetConfig+0x130>)
 8003816:	4293      	cmp	r3, r2
 8003818:	d017      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	4a2b      	ldr	r2, [pc, #172]	@ (80038cc <TIM_Base_SetConfig+0x134>)
 800381e:	4293      	cmp	r3, r2
 8003820:	d013      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	4a2a      	ldr	r2, [pc, #168]	@ (80038d0 <TIM_Base_SetConfig+0x138>)
 8003826:	4293      	cmp	r3, r2
 8003828:	d00f      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	4a29      	ldr	r2, [pc, #164]	@ (80038d4 <TIM_Base_SetConfig+0x13c>)
 800382e:	4293      	cmp	r3, r2
 8003830:	d00b      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	4a28      	ldr	r2, [pc, #160]	@ (80038d8 <TIM_Base_SetConfig+0x140>)
 8003836:	4293      	cmp	r3, r2
 8003838:	d007      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	4a27      	ldr	r2, [pc, #156]	@ (80038dc <TIM_Base_SetConfig+0x144>)
 800383e:	4293      	cmp	r3, r2
 8003840:	d003      	beq.n	800384a <TIM_Base_SetConfig+0xb2>
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	4a26      	ldr	r2, [pc, #152]	@ (80038e0 <TIM_Base_SetConfig+0x148>)
 8003846:	4293      	cmp	r3, r2
 8003848:	d108      	bne.n	800385c <TIM_Base_SetConfig+0xc4>
 800384a:	68fb      	ldr	r3, [r7, #12]
 800384c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003850:	60fb      	str	r3, [r7, #12]
 8003852:	683b      	ldr	r3, [r7, #0]
 8003854:	68db      	ldr	r3, [r3, #12]
 8003856:	68fa      	ldr	r2, [r7, #12]
 8003858:	4313      	orrs	r3, r2
 800385a:	60fb      	str	r3, [r7, #12]
 800385c:	68fb      	ldr	r3, [r7, #12]
 800385e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003862:	683b      	ldr	r3, [r7, #0]
 8003864:	695b      	ldr	r3, [r3, #20]
 8003866:	4313      	orrs	r3, r2
 8003868:	60fb      	str	r3, [r7, #12]
 800386a:	683b      	ldr	r3, [r7, #0]
 800386c:	689a      	ldr	r2, [r3, #8]
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003872:	683b      	ldr	r3, [r7, #0]
 8003874:	681a      	ldr	r2, [r3, #0]
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	629a      	str	r2, [r3, #40]	@ 0x28
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	4a0e      	ldr	r2, [pc, #56]	@ (80038b8 <TIM_Base_SetConfig+0x120>)
 800387e:	4293      	cmp	r3, r2
 8003880:	d003      	beq.n	800388a <TIM_Base_SetConfig+0xf2>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	4a10      	ldr	r2, [pc, #64]	@ (80038c8 <TIM_Base_SetConfig+0x130>)
 8003886:	4293      	cmp	r3, r2
 8003888:	d103      	bne.n	8003892 <TIM_Base_SetConfig+0xfa>
 800388a:	683b      	ldr	r3, [r7, #0]
 800388c:	691a      	ldr	r2, [r3, #16]
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	631a      	str	r2, [r3, #48]	@ 0x30
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	f043 0204 	orr.w	r2, r3, #4
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	601a      	str	r2, [r3, #0]
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2201      	movs	r2, #1
 80038a2:	615a      	str	r2, [r3, #20]
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	68fa      	ldr	r2, [r7, #12]
 80038a8:	601a      	str	r2, [r3, #0]
 80038aa:	bf00      	nop
 80038ac:	3714      	adds	r7, #20
 80038ae:	46bd      	mov	sp, r7
 80038b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b4:	4770      	bx	lr
 80038b6:	bf00      	nop
 80038b8:	40010000 	.word	0x40010000
 80038bc:	40000400 	.word	0x40000400
 80038c0:	40000800 	.word	0x40000800
 80038c4:	40000c00 	.word	0x40000c00
 80038c8:	40010400 	.word	0x40010400
 80038cc:	40014000 	.word	0x40014000
 80038d0:	40014400 	.word	0x40014400
 80038d4:	40014800 	.word	0x40014800
 80038d8:	40001800 	.word	0x40001800
 80038dc:	40001c00 	.word	0x40001c00
 80038e0:	40002000 	.word	0x40002000

080038e4 <TIM_OC1_SetConfig>:
 80038e4:	b480      	push	{r7}
 80038e6:	b087      	sub	sp, #28
 80038e8:	af00      	add	r7, sp, #0
 80038ea:	6078      	str	r0, [r7, #4]
 80038ec:	6039      	str	r1, [r7, #0]
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	6a1b      	ldr	r3, [r3, #32]
 80038f2:	617b      	str	r3, [r7, #20]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	6a1b      	ldr	r3, [r3, #32]
 80038f8:	f023 0201 	bic.w	r2, r3, #1
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	621a      	str	r2, [r3, #32]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	685b      	ldr	r3, [r3, #4]
 8003904:	613b      	str	r3, [r7, #16]
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	699b      	ldr	r3, [r3, #24]
 800390a:	60fb      	str	r3, [r7, #12]
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003912:	60fb      	str	r3, [r7, #12]
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	f023 0303 	bic.w	r3, r3, #3
 800391a:	60fb      	str	r3, [r7, #12]
 800391c:	683b      	ldr	r3, [r7, #0]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	68fa      	ldr	r2, [r7, #12]
 8003922:	4313      	orrs	r3, r2
 8003924:	60fb      	str	r3, [r7, #12]
 8003926:	697b      	ldr	r3, [r7, #20]
 8003928:	f023 0302 	bic.w	r3, r3, #2
 800392c:	617b      	str	r3, [r7, #20]
 800392e:	683b      	ldr	r3, [r7, #0]
 8003930:	689b      	ldr	r3, [r3, #8]
 8003932:	697a      	ldr	r2, [r7, #20]
 8003934:	4313      	orrs	r3, r2
 8003936:	617b      	str	r3, [r7, #20]
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	4a20      	ldr	r2, [pc, #128]	@ (80039bc <TIM_OC1_SetConfig+0xd8>)
 800393c:	4293      	cmp	r3, r2
 800393e:	d003      	beq.n	8003948 <TIM_OC1_SetConfig+0x64>
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	4a1f      	ldr	r2, [pc, #124]	@ (80039c0 <TIM_OC1_SetConfig+0xdc>)
 8003944:	4293      	cmp	r3, r2
 8003946:	d10c      	bne.n	8003962 <TIM_OC1_SetConfig+0x7e>
 8003948:	697b      	ldr	r3, [r7, #20]
 800394a:	f023 0308 	bic.w	r3, r3, #8
 800394e:	617b      	str	r3, [r7, #20]
 8003950:	683b      	ldr	r3, [r7, #0]
 8003952:	68db      	ldr	r3, [r3, #12]
 8003954:	697a      	ldr	r2, [r7, #20]
 8003956:	4313      	orrs	r3, r2
 8003958:	617b      	str	r3, [r7, #20]
 800395a:	697b      	ldr	r3, [r7, #20]
 800395c:	f023 0304 	bic.w	r3, r3, #4
 8003960:	617b      	str	r3, [r7, #20]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	4a15      	ldr	r2, [pc, #84]	@ (80039bc <TIM_OC1_SetConfig+0xd8>)
 8003966:	4293      	cmp	r3, r2
 8003968:	d003      	beq.n	8003972 <TIM_OC1_SetConfig+0x8e>
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	4a14      	ldr	r2, [pc, #80]	@ (80039c0 <TIM_OC1_SetConfig+0xdc>)
 800396e:	4293      	cmp	r3, r2
 8003970:	d111      	bne.n	8003996 <TIM_OC1_SetConfig+0xb2>
 8003972:	693b      	ldr	r3, [r7, #16]
 8003974:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003978:	613b      	str	r3, [r7, #16]
 800397a:	693b      	ldr	r3, [r7, #16]
 800397c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003980:	613b      	str	r3, [r7, #16]
 8003982:	683b      	ldr	r3, [r7, #0]
 8003984:	695b      	ldr	r3, [r3, #20]
 8003986:	693a      	ldr	r2, [r7, #16]
 8003988:	4313      	orrs	r3, r2
 800398a:	613b      	str	r3, [r7, #16]
 800398c:	683b      	ldr	r3, [r7, #0]
 800398e:	699b      	ldr	r3, [r3, #24]
 8003990:	693a      	ldr	r2, [r7, #16]
 8003992:	4313      	orrs	r3, r2
 8003994:	613b      	str	r3, [r7, #16]
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	693a      	ldr	r2, [r7, #16]
 800399a:	605a      	str	r2, [r3, #4]
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	68fa      	ldr	r2, [r7, #12]
 80039a0:	619a      	str	r2, [r3, #24]
 80039a2:	683b      	ldr	r3, [r7, #0]
 80039a4:	685a      	ldr	r2, [r3, #4]
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	635a      	str	r2, [r3, #52]	@ 0x34
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	697a      	ldr	r2, [r7, #20]
 80039ae:	621a      	str	r2, [r3, #32]
 80039b0:	bf00      	nop
 80039b2:	371c      	adds	r7, #28
 80039b4:	46bd      	mov	sp, r7
 80039b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ba:	4770      	bx	lr
 80039bc:	40010000 	.word	0x40010000
 80039c0:	40010400 	.word	0x40010400

080039c4 <TIM_OC2_SetConfig>:
 80039c4:	b480      	push	{r7}
 80039c6:	b087      	sub	sp, #28
 80039c8:	af00      	add	r7, sp, #0
 80039ca:	6078      	str	r0, [r7, #4]
 80039cc:	6039      	str	r1, [r7, #0]
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	6a1b      	ldr	r3, [r3, #32]
 80039d2:	617b      	str	r3, [r7, #20]
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	6a1b      	ldr	r3, [r3, #32]
 80039d8:	f023 0210 	bic.w	r2, r3, #16
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	621a      	str	r2, [r3, #32]
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	685b      	ldr	r3, [r3, #4]
 80039e4:	613b      	str	r3, [r7, #16]
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	699b      	ldr	r3, [r3, #24]
 80039ea:	60fb      	str	r3, [r7, #12]
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80039f2:	60fb      	str	r3, [r7, #12]
 80039f4:	68fb      	ldr	r3, [r7, #12]
 80039f6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80039fa:	60fb      	str	r3, [r7, #12]
 80039fc:	683b      	ldr	r3, [r7, #0]
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	021b      	lsls	r3, r3, #8
 8003a02:	68fa      	ldr	r2, [r7, #12]
 8003a04:	4313      	orrs	r3, r2
 8003a06:	60fb      	str	r3, [r7, #12]
 8003a08:	697b      	ldr	r3, [r7, #20]
 8003a0a:	f023 0320 	bic.w	r3, r3, #32
 8003a0e:	617b      	str	r3, [r7, #20]
 8003a10:	683b      	ldr	r3, [r7, #0]
 8003a12:	689b      	ldr	r3, [r3, #8]
 8003a14:	011b      	lsls	r3, r3, #4
 8003a16:	697a      	ldr	r2, [r7, #20]
 8003a18:	4313      	orrs	r3, r2
 8003a1a:	617b      	str	r3, [r7, #20]
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	4a22      	ldr	r2, [pc, #136]	@ (8003aa8 <TIM_OC2_SetConfig+0xe4>)
 8003a20:	4293      	cmp	r3, r2
 8003a22:	d003      	beq.n	8003a2c <TIM_OC2_SetConfig+0x68>
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	4a21      	ldr	r2, [pc, #132]	@ (8003aac <TIM_OC2_SetConfig+0xe8>)
 8003a28:	4293      	cmp	r3, r2
 8003a2a:	d10d      	bne.n	8003a48 <TIM_OC2_SetConfig+0x84>
 8003a2c:	697b      	ldr	r3, [r7, #20]
 8003a2e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003a32:	617b      	str	r3, [r7, #20]
 8003a34:	683b      	ldr	r3, [r7, #0]
 8003a36:	68db      	ldr	r3, [r3, #12]
 8003a38:	011b      	lsls	r3, r3, #4
 8003a3a:	697a      	ldr	r2, [r7, #20]
 8003a3c:	4313      	orrs	r3, r2
 8003a3e:	617b      	str	r3, [r7, #20]
 8003a40:	697b      	ldr	r3, [r7, #20]
 8003a42:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003a46:	617b      	str	r3, [r7, #20]
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	4a17      	ldr	r2, [pc, #92]	@ (8003aa8 <TIM_OC2_SetConfig+0xe4>)
 8003a4c:	4293      	cmp	r3, r2
 8003a4e:	d003      	beq.n	8003a58 <TIM_OC2_SetConfig+0x94>
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	4a16      	ldr	r2, [pc, #88]	@ (8003aac <TIM_OC2_SetConfig+0xe8>)
 8003a54:	4293      	cmp	r3, r2
 8003a56:	d113      	bne.n	8003a80 <TIM_OC2_SetConfig+0xbc>
 8003a58:	693b      	ldr	r3, [r7, #16]
 8003a5a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8003a5e:	613b      	str	r3, [r7, #16]
 8003a60:	693b      	ldr	r3, [r7, #16]
 8003a62:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003a66:	613b      	str	r3, [r7, #16]
 8003a68:	683b      	ldr	r3, [r7, #0]
 8003a6a:	695b      	ldr	r3, [r3, #20]
 8003a6c:	009b      	lsls	r3, r3, #2
 8003a6e:	693a      	ldr	r2, [r7, #16]
 8003a70:	4313      	orrs	r3, r2
 8003a72:	613b      	str	r3, [r7, #16]
 8003a74:	683b      	ldr	r3, [r7, #0]
 8003a76:	699b      	ldr	r3, [r3, #24]
 8003a78:	009b      	lsls	r3, r3, #2
 8003a7a:	693a      	ldr	r2, [r7, #16]
 8003a7c:	4313      	orrs	r3, r2
 8003a7e:	613b      	str	r3, [r7, #16]
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	693a      	ldr	r2, [r7, #16]
 8003a84:	605a      	str	r2, [r3, #4]
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	68fa      	ldr	r2, [r7, #12]
 8003a8a:	619a      	str	r2, [r3, #24]
 8003a8c:	683b      	ldr	r3, [r7, #0]
 8003a8e:	685a      	ldr	r2, [r3, #4]
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	639a      	str	r2, [r3, #56]	@ 0x38
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	697a      	ldr	r2, [r7, #20]
 8003a98:	621a      	str	r2, [r3, #32]
 8003a9a:	bf00      	nop
 8003a9c:	371c      	adds	r7, #28
 8003a9e:	46bd      	mov	sp, r7
 8003aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa4:	4770      	bx	lr
 8003aa6:	bf00      	nop
 8003aa8:	40010000 	.word	0x40010000
 8003aac:	40010400 	.word	0x40010400

08003ab0 <TIM_OC3_SetConfig>:
 8003ab0:	b480      	push	{r7}
 8003ab2:	b087      	sub	sp, #28
 8003ab4:	af00      	add	r7, sp, #0
 8003ab6:	6078      	str	r0, [r7, #4]
 8003ab8:	6039      	str	r1, [r7, #0]
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	6a1b      	ldr	r3, [r3, #32]
 8003abe:	617b      	str	r3, [r7, #20]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	6a1b      	ldr	r3, [r3, #32]
 8003ac4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	621a      	str	r2, [r3, #32]
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	685b      	ldr	r3, [r3, #4]
 8003ad0:	613b      	str	r3, [r7, #16]
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	69db      	ldr	r3, [r3, #28]
 8003ad6:	60fb      	str	r3, [r7, #12]
 8003ad8:	68fb      	ldr	r3, [r7, #12]
 8003ada:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	f023 0303 	bic.w	r3, r3, #3
 8003ae6:	60fb      	str	r3, [r7, #12]
 8003ae8:	683b      	ldr	r3, [r7, #0]
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	68fa      	ldr	r2, [r7, #12]
 8003aee:	4313      	orrs	r3, r2
 8003af0:	60fb      	str	r3, [r7, #12]
 8003af2:	697b      	ldr	r3, [r7, #20]
 8003af4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003af8:	617b      	str	r3, [r7, #20]
 8003afa:	683b      	ldr	r3, [r7, #0]
 8003afc:	689b      	ldr	r3, [r3, #8]
 8003afe:	021b      	lsls	r3, r3, #8
 8003b00:	697a      	ldr	r2, [r7, #20]
 8003b02:	4313      	orrs	r3, r2
 8003b04:	617b      	str	r3, [r7, #20]
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	4a21      	ldr	r2, [pc, #132]	@ (8003b90 <TIM_OC3_SetConfig+0xe0>)
 8003b0a:	4293      	cmp	r3, r2
 8003b0c:	d003      	beq.n	8003b16 <TIM_OC3_SetConfig+0x66>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	4a20      	ldr	r2, [pc, #128]	@ (8003b94 <TIM_OC3_SetConfig+0xe4>)
 8003b12:	4293      	cmp	r3, r2
 8003b14:	d10d      	bne.n	8003b32 <TIM_OC3_SetConfig+0x82>
 8003b16:	697b      	ldr	r3, [r7, #20]
 8003b18:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003b1c:	617b      	str	r3, [r7, #20]
 8003b1e:	683b      	ldr	r3, [r7, #0]
 8003b20:	68db      	ldr	r3, [r3, #12]
 8003b22:	021b      	lsls	r3, r3, #8
 8003b24:	697a      	ldr	r2, [r7, #20]
 8003b26:	4313      	orrs	r3, r2
 8003b28:	617b      	str	r3, [r7, #20]
 8003b2a:	697b      	ldr	r3, [r7, #20]
 8003b2c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8003b30:	617b      	str	r3, [r7, #20]
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	4a16      	ldr	r2, [pc, #88]	@ (8003b90 <TIM_OC3_SetConfig+0xe0>)
 8003b36:	4293      	cmp	r3, r2
 8003b38:	d003      	beq.n	8003b42 <TIM_OC3_SetConfig+0x92>
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	4a15      	ldr	r2, [pc, #84]	@ (8003b94 <TIM_OC3_SetConfig+0xe4>)
 8003b3e:	4293      	cmp	r3, r2
 8003b40:	d113      	bne.n	8003b6a <TIM_OC3_SetConfig+0xba>
 8003b42:	693b      	ldr	r3, [r7, #16]
 8003b44:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003b48:	613b      	str	r3, [r7, #16]
 8003b4a:	693b      	ldr	r3, [r7, #16]
 8003b4c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003b50:	613b      	str	r3, [r7, #16]
 8003b52:	683b      	ldr	r3, [r7, #0]
 8003b54:	695b      	ldr	r3, [r3, #20]
 8003b56:	011b      	lsls	r3, r3, #4
 8003b58:	693a      	ldr	r2, [r7, #16]
 8003b5a:	4313      	orrs	r3, r2
 8003b5c:	613b      	str	r3, [r7, #16]
 8003b5e:	683b      	ldr	r3, [r7, #0]
 8003b60:	699b      	ldr	r3, [r3, #24]
 8003b62:	011b      	lsls	r3, r3, #4
 8003b64:	693a      	ldr	r2, [r7, #16]
 8003b66:	4313      	orrs	r3, r2
 8003b68:	613b      	str	r3, [r7, #16]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	693a      	ldr	r2, [r7, #16]
 8003b6e:	605a      	str	r2, [r3, #4]
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	68fa      	ldr	r2, [r7, #12]
 8003b74:	61da      	str	r2, [r3, #28]
 8003b76:	683b      	ldr	r3, [r7, #0]
 8003b78:	685a      	ldr	r2, [r3, #4]
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	697a      	ldr	r2, [r7, #20]
 8003b82:	621a      	str	r2, [r3, #32]
 8003b84:	bf00      	nop
 8003b86:	371c      	adds	r7, #28
 8003b88:	46bd      	mov	sp, r7
 8003b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b8e:	4770      	bx	lr
 8003b90:	40010000 	.word	0x40010000
 8003b94:	40010400 	.word	0x40010400

08003b98 <TIM_OC4_SetConfig>:
 8003b98:	b480      	push	{r7}
 8003b9a:	b087      	sub	sp, #28
 8003b9c:	af00      	add	r7, sp, #0
 8003b9e:	6078      	str	r0, [r7, #4]
 8003ba0:	6039      	str	r1, [r7, #0]
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	6a1b      	ldr	r3, [r3, #32]
 8003ba6:	613b      	str	r3, [r7, #16]
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	6a1b      	ldr	r3, [r3, #32]
 8003bac:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	621a      	str	r2, [r3, #32]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	685b      	ldr	r3, [r3, #4]
 8003bb8:	617b      	str	r3, [r7, #20]
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	69db      	ldr	r3, [r3, #28]
 8003bbe:	60fb      	str	r3, [r7, #12]
 8003bc0:	68fb      	ldr	r3, [r7, #12]
 8003bc2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8003bc6:	60fb      	str	r3, [r7, #12]
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003bce:	60fb      	str	r3, [r7, #12]
 8003bd0:	683b      	ldr	r3, [r7, #0]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	021b      	lsls	r3, r3, #8
 8003bd6:	68fa      	ldr	r2, [r7, #12]
 8003bd8:	4313      	orrs	r3, r2
 8003bda:	60fb      	str	r3, [r7, #12]
 8003bdc:	693b      	ldr	r3, [r7, #16]
 8003bde:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003be2:	613b      	str	r3, [r7, #16]
 8003be4:	683b      	ldr	r3, [r7, #0]
 8003be6:	689b      	ldr	r3, [r3, #8]
 8003be8:	031b      	lsls	r3, r3, #12
 8003bea:	693a      	ldr	r2, [r7, #16]
 8003bec:	4313      	orrs	r3, r2
 8003bee:	613b      	str	r3, [r7, #16]
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	4a12      	ldr	r2, [pc, #72]	@ (8003c3c <TIM_OC4_SetConfig+0xa4>)
 8003bf4:	4293      	cmp	r3, r2
 8003bf6:	d003      	beq.n	8003c00 <TIM_OC4_SetConfig+0x68>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	4a11      	ldr	r2, [pc, #68]	@ (8003c40 <TIM_OC4_SetConfig+0xa8>)
 8003bfc:	4293      	cmp	r3, r2
 8003bfe:	d109      	bne.n	8003c14 <TIM_OC4_SetConfig+0x7c>
 8003c00:	697b      	ldr	r3, [r7, #20]
 8003c02:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003c06:	617b      	str	r3, [r7, #20]
 8003c08:	683b      	ldr	r3, [r7, #0]
 8003c0a:	695b      	ldr	r3, [r3, #20]
 8003c0c:	019b      	lsls	r3, r3, #6
 8003c0e:	697a      	ldr	r2, [r7, #20]
 8003c10:	4313      	orrs	r3, r2
 8003c12:	617b      	str	r3, [r7, #20]
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	697a      	ldr	r2, [r7, #20]
 8003c18:	605a      	str	r2, [r3, #4]
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	68fa      	ldr	r2, [r7, #12]
 8003c1e:	61da      	str	r2, [r3, #28]
 8003c20:	683b      	ldr	r3, [r7, #0]
 8003c22:	685a      	ldr	r2, [r3, #4]
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	641a      	str	r2, [r3, #64]	@ 0x40
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	693a      	ldr	r2, [r7, #16]
 8003c2c:	621a      	str	r2, [r3, #32]
 8003c2e:	bf00      	nop
 8003c30:	371c      	adds	r7, #28
 8003c32:	46bd      	mov	sp, r7
 8003c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c38:	4770      	bx	lr
 8003c3a:	bf00      	nop
 8003c3c:	40010000 	.word	0x40010000
 8003c40:	40010400 	.word	0x40010400

08003c44 <TIM_TI1_ConfigInputStage>:
 8003c44:	b480      	push	{r7}
 8003c46:	b087      	sub	sp, #28
 8003c48:	af00      	add	r7, sp, #0
 8003c4a:	60f8      	str	r0, [r7, #12]
 8003c4c:	60b9      	str	r1, [r7, #8]
 8003c4e:	607a      	str	r2, [r7, #4]
 8003c50:	68fb      	ldr	r3, [r7, #12]
 8003c52:	6a1b      	ldr	r3, [r3, #32]
 8003c54:	617b      	str	r3, [r7, #20]
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	6a1b      	ldr	r3, [r3, #32]
 8003c5a:	f023 0201 	bic.w	r2, r3, #1
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	621a      	str	r2, [r3, #32]
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	699b      	ldr	r3, [r3, #24]
 8003c66:	613b      	str	r3, [r7, #16]
 8003c68:	693b      	ldr	r3, [r7, #16]
 8003c6a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003c6e:	613b      	str	r3, [r7, #16]
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	011b      	lsls	r3, r3, #4
 8003c74:	693a      	ldr	r2, [r7, #16]
 8003c76:	4313      	orrs	r3, r2
 8003c78:	613b      	str	r3, [r7, #16]
 8003c7a:	697b      	ldr	r3, [r7, #20]
 8003c7c:	f023 030a 	bic.w	r3, r3, #10
 8003c80:	617b      	str	r3, [r7, #20]
 8003c82:	697a      	ldr	r2, [r7, #20]
 8003c84:	68bb      	ldr	r3, [r7, #8]
 8003c86:	4313      	orrs	r3, r2
 8003c88:	617b      	str	r3, [r7, #20]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	693a      	ldr	r2, [r7, #16]
 8003c8e:	619a      	str	r2, [r3, #24]
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	697a      	ldr	r2, [r7, #20]
 8003c94:	621a      	str	r2, [r3, #32]
 8003c96:	bf00      	nop
 8003c98:	371c      	adds	r7, #28
 8003c9a:	46bd      	mov	sp, r7
 8003c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ca0:	4770      	bx	lr

08003ca2 <TIM_TI2_ConfigInputStage>:
 8003ca2:	b480      	push	{r7}
 8003ca4:	b087      	sub	sp, #28
 8003ca6:	af00      	add	r7, sp, #0
 8003ca8:	60f8      	str	r0, [r7, #12]
 8003caa:	60b9      	str	r1, [r7, #8]
 8003cac:	607a      	str	r2, [r7, #4]
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	6a1b      	ldr	r3, [r3, #32]
 8003cb2:	617b      	str	r3, [r7, #20]
 8003cb4:	68fb      	ldr	r3, [r7, #12]
 8003cb6:	6a1b      	ldr	r3, [r3, #32]
 8003cb8:	f023 0210 	bic.w	r2, r3, #16
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	621a      	str	r2, [r3, #32]
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	699b      	ldr	r3, [r3, #24]
 8003cc4:	613b      	str	r3, [r7, #16]
 8003cc6:	693b      	ldr	r3, [r7, #16]
 8003cc8:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003ccc:	613b      	str	r3, [r7, #16]
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	031b      	lsls	r3, r3, #12
 8003cd2:	693a      	ldr	r2, [r7, #16]
 8003cd4:	4313      	orrs	r3, r2
 8003cd6:	613b      	str	r3, [r7, #16]
 8003cd8:	697b      	ldr	r3, [r7, #20]
 8003cda:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8003cde:	617b      	str	r3, [r7, #20]
 8003ce0:	68bb      	ldr	r3, [r7, #8]
 8003ce2:	011b      	lsls	r3, r3, #4
 8003ce4:	697a      	ldr	r2, [r7, #20]
 8003ce6:	4313      	orrs	r3, r2
 8003ce8:	617b      	str	r3, [r7, #20]
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	693a      	ldr	r2, [r7, #16]
 8003cee:	619a      	str	r2, [r3, #24]
 8003cf0:	68fb      	ldr	r3, [r7, #12]
 8003cf2:	697a      	ldr	r2, [r7, #20]
 8003cf4:	621a      	str	r2, [r3, #32]
 8003cf6:	bf00      	nop
 8003cf8:	371c      	adds	r7, #28
 8003cfa:	46bd      	mov	sp, r7
 8003cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d00:	4770      	bx	lr

08003d02 <TIM_ITRx_SetConfig>:
 8003d02:	b480      	push	{r7}
 8003d04:	b085      	sub	sp, #20
 8003d06:	af00      	add	r7, sp, #0
 8003d08:	6078      	str	r0, [r7, #4]
 8003d0a:	6039      	str	r1, [r7, #0]
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	689b      	ldr	r3, [r3, #8]
 8003d10:	60fb      	str	r3, [r7, #12]
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003d18:	60fb      	str	r3, [r7, #12]
 8003d1a:	683a      	ldr	r2, [r7, #0]
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	4313      	orrs	r3, r2
 8003d20:	f043 0307 	orr.w	r3, r3, #7
 8003d24:	60fb      	str	r3, [r7, #12]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	68fa      	ldr	r2, [r7, #12]
 8003d2a:	609a      	str	r2, [r3, #8]
 8003d2c:	bf00      	nop
 8003d2e:	3714      	adds	r7, #20
 8003d30:	46bd      	mov	sp, r7
 8003d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d36:	4770      	bx	lr

08003d38 <TIM_ETR_SetConfig>:
 8003d38:	b480      	push	{r7}
 8003d3a:	b087      	sub	sp, #28
 8003d3c:	af00      	add	r7, sp, #0
 8003d3e:	60f8      	str	r0, [r7, #12]
 8003d40:	60b9      	str	r1, [r7, #8]
 8003d42:	607a      	str	r2, [r7, #4]
 8003d44:	603b      	str	r3, [r7, #0]
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	689b      	ldr	r3, [r3, #8]
 8003d4a:	617b      	str	r3, [r7, #20]
 8003d4c:	697b      	ldr	r3, [r7, #20]
 8003d4e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003d52:	617b      	str	r3, [r7, #20]
 8003d54:	683b      	ldr	r3, [r7, #0]
 8003d56:	021a      	lsls	r2, r3, #8
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	431a      	orrs	r2, r3
 8003d5c:	68bb      	ldr	r3, [r7, #8]
 8003d5e:	4313      	orrs	r3, r2
 8003d60:	697a      	ldr	r2, [r7, #20]
 8003d62:	4313      	orrs	r3, r2
 8003d64:	617b      	str	r3, [r7, #20]
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	697a      	ldr	r2, [r7, #20]
 8003d6a:	609a      	str	r2, [r3, #8]
 8003d6c:	bf00      	nop
 8003d6e:	371c      	adds	r7, #28
 8003d70:	46bd      	mov	sp, r7
 8003d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d76:	4770      	bx	lr

08003d78 <TIM_CCxChannelCmd>:
 8003d78:	b480      	push	{r7}
 8003d7a:	b087      	sub	sp, #28
 8003d7c:	af00      	add	r7, sp, #0
 8003d7e:	60f8      	str	r0, [r7, #12]
 8003d80:	60b9      	str	r1, [r7, #8]
 8003d82:	607a      	str	r2, [r7, #4]
 8003d84:	68bb      	ldr	r3, [r7, #8]
 8003d86:	f003 031f 	and.w	r3, r3, #31
 8003d8a:	2201      	movs	r2, #1
 8003d8c:	fa02 f303 	lsl.w	r3, r2, r3
 8003d90:	617b      	str	r3, [r7, #20]
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	6a1a      	ldr	r2, [r3, #32]
 8003d96:	697b      	ldr	r3, [r7, #20]
 8003d98:	43db      	mvns	r3, r3
 8003d9a:	401a      	ands	r2, r3
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	621a      	str	r2, [r3, #32]
 8003da0:	68fb      	ldr	r3, [r7, #12]
 8003da2:	6a1a      	ldr	r2, [r3, #32]
 8003da4:	68bb      	ldr	r3, [r7, #8]
 8003da6:	f003 031f 	and.w	r3, r3, #31
 8003daa:	6879      	ldr	r1, [r7, #4]
 8003dac:	fa01 f303 	lsl.w	r3, r1, r3
 8003db0:	431a      	orrs	r2, r3
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	621a      	str	r2, [r3, #32]
 8003db6:	bf00      	nop
 8003db8:	371c      	adds	r7, #28
 8003dba:	46bd      	mov	sp, r7
 8003dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dc0:	4770      	bx	lr
	...

08003dc4 <HAL_TIMEx_MasterConfigSynchronization>:
 8003dc4:	b480      	push	{r7}
 8003dc6:	b085      	sub	sp, #20
 8003dc8:	af00      	add	r7, sp, #0
 8003dca:	6078      	str	r0, [r7, #4]
 8003dcc:	6039      	str	r1, [r7, #0]
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003dd4:	2b01      	cmp	r3, #1
 8003dd6:	d101      	bne.n	8003ddc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003dd8:	2302      	movs	r3, #2
 8003dda:	e05a      	b.n	8003e92 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	2201      	movs	r2, #1
 8003de0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	2202      	movs	r2, #2
 8003de8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	685b      	ldr	r3, [r3, #4]
 8003df2:	60fb      	str	r3, [r7, #12]
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	689b      	ldr	r3, [r3, #8]
 8003dfa:	60bb      	str	r3, [r7, #8]
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003e02:	60fb      	str	r3, [r7, #12]
 8003e04:	683b      	ldr	r3, [r7, #0]
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	68fa      	ldr	r2, [r7, #12]
 8003e0a:	4313      	orrs	r3, r2
 8003e0c:	60fb      	str	r3, [r7, #12]
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	68fa      	ldr	r2, [r7, #12]
 8003e14:	605a      	str	r2, [r3, #4]
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	4a21      	ldr	r2, [pc, #132]	@ (8003ea0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8003e1c:	4293      	cmp	r3, r2
 8003e1e:	d022      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e20:	687b      	ldr	r3, [r7, #4]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003e28:	d01d      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	4a1d      	ldr	r2, [pc, #116]	@ (8003ea4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8003e30:	4293      	cmp	r3, r2
 8003e32:	d018      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	4a1b      	ldr	r2, [pc, #108]	@ (8003ea8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8003e3a:	4293      	cmp	r3, r2
 8003e3c:	d013      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	4a1a      	ldr	r2, [pc, #104]	@ (8003eac <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8003e44:	4293      	cmp	r3, r2
 8003e46:	d00e      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	4a18      	ldr	r2, [pc, #96]	@ (8003eb0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8003e4e:	4293      	cmp	r3, r2
 8003e50:	d009      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	4a17      	ldr	r2, [pc, #92]	@ (8003eb4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8003e58:	4293      	cmp	r3, r2
 8003e5a:	d004      	beq.n	8003e66 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	4a15      	ldr	r2, [pc, #84]	@ (8003eb8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8003e62:	4293      	cmp	r3, r2
 8003e64:	d10c      	bne.n	8003e80 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8003e66:	68bb      	ldr	r3, [r7, #8]
 8003e68:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003e6c:	60bb      	str	r3, [r7, #8]
 8003e6e:	683b      	ldr	r3, [r7, #0]
 8003e70:	685b      	ldr	r3, [r3, #4]
 8003e72:	68ba      	ldr	r2, [r7, #8]
 8003e74:	4313      	orrs	r3, r2
 8003e76:	60bb      	str	r3, [r7, #8]
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	68ba      	ldr	r2, [r7, #8]
 8003e7e:	609a      	str	r2, [r3, #8]
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2201      	movs	r2, #1
 8003e84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	2200      	movs	r2, #0
 8003e8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003e90:	2300      	movs	r3, #0
 8003e92:	4618      	mov	r0, r3
 8003e94:	3714      	adds	r7, #20
 8003e96:	46bd      	mov	sp, r7
 8003e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e9c:	4770      	bx	lr
 8003e9e:	bf00      	nop
 8003ea0:	40010000 	.word	0x40010000
 8003ea4:	40000400 	.word	0x40000400
 8003ea8:	40000800 	.word	0x40000800
 8003eac:	40000c00 	.word	0x40000c00
 8003eb0:	40010400 	.word	0x40010400
 8003eb4:	40014000 	.word	0x40014000
 8003eb8:	40001800 	.word	0x40001800

08003ebc <memset>:
 8003ebc:	4402      	add	r2, r0
 8003ebe:	4603      	mov	r3, r0
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d100      	bne.n	8003ec6 <memset+0xa>
 8003ec4:	4770      	bx	lr
 8003ec6:	f803 1b01 	strb.w	r1, [r3], #1
 8003eca:	e7f9      	b.n	8003ec0 <memset+0x4>

08003ecc <__libc_init_array>:
 8003ecc:	b570      	push	{r4, r5, r6, lr}
 8003ece:	4d0d      	ldr	r5, [pc, #52]	@ (8003f04 <__libc_init_array+0x38>)
 8003ed0:	4c0d      	ldr	r4, [pc, #52]	@ (8003f08 <__libc_init_array+0x3c>)
 8003ed2:	1b64      	subs	r4, r4, r5
 8003ed4:	10a4      	asrs	r4, r4, #2
 8003ed6:	2600      	movs	r6, #0
 8003ed8:	42a6      	cmp	r6, r4
 8003eda:	d109      	bne.n	8003ef0 <__libc_init_array+0x24>
 8003edc:	4d0b      	ldr	r5, [pc, #44]	@ (8003f0c <__libc_init_array+0x40>)
 8003ede:	4c0c      	ldr	r4, [pc, #48]	@ (8003f10 <__libc_init_array+0x44>)
 8003ee0:	f000 f818 	bl	8003f14 <_init>
 8003ee4:	1b64      	subs	r4, r4, r5
 8003ee6:	10a4      	asrs	r4, r4, #2
 8003ee8:	2600      	movs	r6, #0
 8003eea:	42a6      	cmp	r6, r4
 8003eec:	d105      	bne.n	8003efa <__libc_init_array+0x2e>
 8003eee:	bd70      	pop	{r4, r5, r6, pc}
 8003ef0:	f855 3b04 	ldr.w	r3, [r5], #4
 8003ef4:	4798      	blx	r3
 8003ef6:	3601      	adds	r6, #1
 8003ef8:	e7ee      	b.n	8003ed8 <__libc_init_array+0xc>
 8003efa:	f855 3b04 	ldr.w	r3, [r5], #4
 8003efe:	4798      	blx	r3
 8003f00:	3601      	adds	r6, #1
 8003f02:	e7f2      	b.n	8003eea <__libc_init_array+0x1e>
 8003f04:	08003f4c 	.word	0x08003f4c
 8003f08:	08003f4c 	.word	0x08003f4c
 8003f0c:	08003f4c 	.word	0x08003f4c
 8003f10:	08003f50 	.word	0x08003f50

08003f14 <_init>:
 8003f14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f16:	bf00      	nop
 8003f18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003f1a:	bc08      	pop	{r3}
 8003f1c:	469e      	mov	lr, r3
 8003f1e:	4770      	bx	lr

08003f20 <_fini>:
 8003f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f22:	bf00      	nop
 8003f24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003f26:	bc08      	pop	{r3}
 8003f28:	469e      	mov	lr, r3
 8003f2a:	4770      	bx	lr
